{"version":3,"file":"base.js","sourceRoot":"","sources":["src/base.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAA6B,MAAM,KAAK,CAAC;AAE5E,mEAAmE;AACnE,OAAO,YAAY,MAAM,sCAAsC,CAAC;AAChE,OAAO,gBAAgB,MAAM,2BAA2B,CAAC;AAEzD,MAAM,OAAgB,IAAK,SAAQ,UAAU;IAC3C;;;;OAIG;IACH,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,mDAAmD;YACnD,GAAG,CAAA,GAAG,SAAS,CAAC,gBAAgB,CAAC,EAAE;YACnC,GAAG,CAAA,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE;YAC7B,4EAA4E;YAC9E,IAAI,CAAC,WAAW;SACjB,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,MAAM,KAAK,WAAW;QACpB,OAAO,GAAG,CAAA,EAAE,CAAC;IACf,CAAC;CACF","sourcesContent":["import { LitElement, css, unsafeCSS, CSSResult, CSSResultGroup } from 'lit';\n\n// Importation du CSS de Bootstrap en tant que chaîne de caractères\nimport bootstrapCSS from 'bootstrap/dist/css/bootstrap.min.css';\nimport bootstrapVarsCSS from './assets/bs_variables.css';\n\nexport abstract class Base extends LitElement {\n  /**\n   * On redéfinit la propriété statique `styles` pour y inclure\n   * d'une part le CSS de Bootstrap, et d'autre part les styles propres\n   * au composant (définis via `localStyles`).\n   */\n  static override get styles(): CSSResultGroup {\n    return [\n      // Inclusion du CSS de Bootstrap dans le Shadow DOM\n      css`${unsafeCSS(bootstrapVarsCSS)}`,\n      css`${unsafeCSS(bootstrapCSS)}`,\n        // Inclusion des styles locaux du composant (définis dans la classe dérivée)\n      this.localStyles\n    ];\n  }\n\n  /**\n   * Les composants dérivés pourront redéfinir cette propriété statique\n   * pour ajouter leurs styles spécifiques.\n   */\n  static get localStyles(): CSSResult {\n    return css``;\n  }\n}\n"]}