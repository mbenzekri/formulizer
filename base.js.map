{"version":3,"file":"base.js","sourceRoot":"","sources":["src/base.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,GAAG,CAAC,2CAA2C,EAAC,MAAM,KAAK,CAAC;AAEjF,mEAAmE;AACnE,OAAO,YAAY,MAAM,sCAAsC,CAAC;AAChE,OAAO,gBAAgB,MAAM,2BAA2B,CAAC;AAGzD,MAAM,cAAc,GAAG,IAAI,aAAa,EAAE,CAAC;AAC3C,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACzC,MAAM,kBAAkB,GAAG,IAAI,aAAa,EAAE,CAAC;AAC/C,kBAAkB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAEjD,MAAM,OAAgB,IAAK,SAAQ,UAAU;IACzC,yBAAyB;QACrB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,oBAAoB,IAAI,IAAI,CAAC,UAAU,CAAA;IACvE,CAAC;IAEQ,iBAAiB;QACtB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,0CAA0C;QAC1C,4DAA4D;QAC5D,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,yBAAyB,EAAE,EAAE,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QACrH,CAAC;IACL,CAAC;;AAEe,WAAM,GAAG,CAAC,GAAG,CAAA,EAAE,CAAC,CAAA","sourcesContent":["import { LitElement, css /*, unsafeCSS, CSSResult, CSSResultGroup */} from 'lit';\n\n// Importation du CSS de Bootstrap en tant que chaîne de caractères\nimport bootstrapCSS from 'bootstrap/dist/css/bootstrap.min.css';\nimport bootstrapVarsCSS from './assets/bs_variables.css';\n\n\nconst bootstrapSheet = new CSSStyleSheet();\nbootstrapSheet.replaceSync(bootstrapCSS);\nconst bootstrapVarsSheet = new CSSStyleSheet();\nbootstrapVarsSheet.replaceSync(bootstrapVarsCSS);\n\nexport abstract class Base extends LitElement {\n    canUse_adoptedStyleSheets(): boolean {\n        return !!this.shadowRoot && 'adoptedStyleSheets' in this.shadowRoot\n    }\n\n    override connectedCallback() {\n        super.connectedCallback();\n        // À ce stade, le shadowRoot est bien créé\n        // Vérifiez si l'adoption de feuilles de style est supportée\n        if (this.shadowRoot && this.canUse_adoptedStyleSheets()) {\n            this.shadowRoot.adoptedStyleSheets = [bootstrapVarsSheet, bootstrapSheet, ...this.shadowRoot.adoptedStyleSheets];\n        }\n    }\n    \n    static override styles = [css``]\n\n    // /**\n    //  * On redéfinit la propriété statique `styles` pour y inclure\n    //  * d'une part le CSS de Bootstrap, et d'autre part les styles propres\n    //  * au composant (définis via `localStyles`).\n    //  */\n    // static override get styles(): CSSResultGroup {\n    //     return [\n    //         // Inclusion du CSS de Bootstrap dans le Shadow DOM\n    //         css`${unsafeCSS(bootstrapVarsCSS)}`,\n    //         css`${unsafeCSS(bootstrapCSS)}`,\n    //         // Inclusion des styles locaux du composant (définis dans la classe dérivée)\n    //         this.localStyles\n    //     ];\n    //     return css``;\n    // }\n\n    // /**\n    //  * Les composants dérivés pourront redéfinir cette propriété statique\n    //  * pour ajouter leurs styles spécifiques.\n    //  */\n    // static get localStyles(): CSSResult {\n    //     return css``;\n    // }\n}\n"]}