function t(t,e,r,o){for(var i,n=arguments.length,a=n<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,r):o,s=t.length-1;s>=0;s--)(i=t[s])&&(a=(n<3?i(a):n>3?i(e,r,a):i(e,r))||a);return n>3&&a&&Object.defineProperty(e,r,a),a}function e(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}"function"==typeof SuppressedError&&SuppressedError;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const r=t=>(e,r)=>{void 0!==r?r.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)}
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */,o=globalThis,i=o.ShadowRoot&&(void 0===o.ShadyCSS||o.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,n=Symbol(),a=new WeakMap;let s=class{constructor(t,e,r){if(this._$cssResult$=!0,r!==n)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const e=this.t;if(i&&void 0===t){const r=void 0!==e&&1===e.length;r&&(t=a.get(e)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),r&&a.set(e,t))}return t}toString(){return this.cssText}};const l=(t,...e)=>{const r=1===t.length?t[0]:e.reduce(((e,r,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if("number"==typeof t)return t;throw Error("Value passed to 'css' function must be a 'css' function result: "+t+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(r)+t[o+1]),t[0]);return new s(r,t,n)},c=i?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e="";for(const r of t.cssRules)e+=r.cssText;return(t=>new s("string"==typeof t?t:t+"",void 0,n))(e)})(t):t
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */,{is:b,defineProperty:d,getOwnPropertyDescriptor:f,getOwnPropertyNames:p,getOwnPropertySymbols:m,getPrototypeOf:u}=Object,h=globalThis,g=h.trustedTypes,v=g?g.emptyScript:"",w=h.reactiveElementPolyfillSupport,x=(t,e)=>t,y={toAttribute(t,e){switch(e){case Boolean:t=t?v:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,e){let r=t;switch(e){case Boolean:r=null!==t;break;case Number:r=null===t?null:Number(t);break;case Object:case Array:try{r=JSON.parse(t)}catch(t){r=null}}return r}},k=(t,e)=>!b(t,e),j={attribute:!0,type:String,converter:y,reflect:!1,hasChanged:k};Symbol.metadata??=Symbol("metadata"),h.litPropertyMetadata??=new WeakMap;class D extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,e=j){if(e.state&&(e.attribute=!1),this._$Ei(),this.elementProperties.set(t,e),!e.noAccessor){const r=Symbol(),o=this.getPropertyDescriptor(t,r,e);void 0!==o&&d(this.prototype,t,o)}}static getPropertyDescriptor(t,e,r){const{get:o,set:i}=f(this.prototype,t)??{get(){return this[e]},set(t){this[e]=t}};return{get(){return o?.call(this)},set(e){const n=o?.call(this);i.call(this,e),this.requestUpdate(t,n,r)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??j}static _$Ei(){if(this.hasOwnProperty(x("elementProperties")))return;const t=u(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(x("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(x("properties"))){const t=this.properties,e=[...p(t),...m(t)];for(const r of e)this.createProperty(r,t[r])}const t=this[Symbol.metadata];if(null!==t){const e=litPropertyMetadata.get(t);if(void 0!==e)for(const[t,r]of e)this.elementProperties.set(t,r)}this._$Eh=new Map;for(const[t,e]of this.elementProperties){const r=this._$Eu(t,e);void 0!==r&&this._$Eh.set(r,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(t){const e=[];if(Array.isArray(t)){const r=new Set(t.flat(1/0).reverse());for(const t of r)e.unshift(c(t))}else void 0!==t&&e.push(c(t));return e}static _$Eu(t,e){const r=e.attribute;return!1===r?void 0:"string"==typeof r?r:"string"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,e=this.constructor.elementProperties;for(const r of e.keys())this.hasOwnProperty(r)&&(t.set(r,this[r]),delete this[r]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return((t,e)=>{if(i)t.adoptedStyleSheets=e.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const r of e){const e=document.createElement("style"),i=o.litNonce;void 0!==i&&e.setAttribute("nonce",i),e.textContent=r.cssText,t.appendChild(e)}})(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,e,r){this._$AK(t,r)}_$EC(t,e){const r=this.constructor.elementProperties.get(t),o=this.constructor._$Eu(t,r);if(void 0!==o&&!0===r.reflect){const i=(void 0!==r.converter?.toAttribute?r.converter:y).toAttribute(e,r.type);this._$Em=t,null==i?this.removeAttribute(o):this.setAttribute(o,i),this._$Em=null}}_$AK(t,e){const r=this.constructor,o=r._$Eh.get(t);if(void 0!==o&&this._$Em!==o){const t=r.getPropertyOptions(o),i="function"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:y;this._$Em=o,this[o]=i.fromAttribute(e,t.type),this._$Em=null}}requestUpdate(t,e,r){if(void 0!==t){if(r??=this.constructor.getPropertyOptions(t),!(r.hasChanged??k)(this[t],e))return;this.P(t,e,r)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(t,e,r){this._$AL.has(t)||this._$AL.set(t,e),!0===r.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,e]of this._$Ep)this[t]=e;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[e,r]of t)!0!==r.wrapped||this._$AL.has(e)||void 0===this[e]||this.P(e,this[e],r)}let t=!1;const e=this._$AL;try{t=this.shouldUpdate(e),t?(this.willUpdate(e),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(e)):this._$EU()}catch(e){throw t=!1,this._$EU(),e}t&&this._$AE(e)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EC(t,this[t]))),this._$EU()}updated(t){}firstUpdated(t){}}D.elementStyles=[],D.shadowRootOptions={mode:"open"},D[x("elementProperties")]=new Map,D[x("finalized")]=new Map,w?.({ReactiveElement:D}),(h.reactiveElementVersions??=[]).push("2.0.4");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const z={attribute:!0,type:String,converter:y,reflect:!1,hasChanged:k},E=(t=z,e,r)=>{const{kind:o,metadata:i}=r;let n=globalThis.litPropertyMetadata.get(i);if(void 0===n&&globalThis.litPropertyMetadata.set(i,n=new Map),n.set(r.name,t),"accessor"===o){const{name:o}=r;return{set(r){const i=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,i,t)},init(e){return void 0!==e&&this.P(o,void 0,t),e}}}if("setter"===o){const{name:o}=r;return function(r){const i=this[o];e.call(this,r),this.requestUpdate(o,i,t)}}throw Error("Unsupported decorator location: "+o)};function A(t){return(e,r)=>"object"==typeof r?E(t,e,r):((t,e,r)=>{const o=e.hasOwnProperty(r);return e.constructor.createProperty(r,o?{...t,wrapped:!0}:t),o?Object.getOwnPropertyDescriptor(e,r):void 0})(t,e,r)
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */}function F(t){return A({...t,state:!0,attribute:!1})}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
function q(t,e){return(e,r,o)=>((t,e,r)=>(r.configurable=!0,r.enumerable=!0,r))(0,0,{get(){return(e=>e.renderRoot?.querySelector(t)??null)(this)}})}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const P=globalThis,O=P.trustedTypes,R=O?O.createPolicy("lit-html",{createHTML:t=>t}):void 0,S="$lit$",X=`lit$${Math.random().toFixed(9).slice(2)}$`,V="?"+X,G=`<${V}>`,M=document,N=()=>M.createComment(""),I=t=>null===t||"object"!=typeof t&&"function"!=typeof t,B=Array.isArray,C="[ \t\n\f\r]",L=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,W=/-->/g,Z=/>/g,H=RegExp(`>|${C}(?:([^\\s"'>=/]+)(${C}*=${C}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`,"g"),K=/'/g,T=/"/g,J=/^(?:script|style|textarea|title)$/i,U=(t=>(e,...r)=>({_$litType$:t,strings:e,values:r}))(1),Y=Symbol.for("lit-noChange"),Q=Symbol.for("lit-nothing"),$=new WeakMap,_=M.createTreeWalker(M,129);function tt(t,e){if(!B(t)||!t.hasOwnProperty("raw"))throw Error("invalid template strings array");return void 0!==R?R.createHTML(e):e}const et=(t,e)=>{const r=t.length-1,o=[];let i,n=2===e?"<svg>":3===e?"<math>":"",a=L;for(let e=0;e<r;e++){const r=t[e];let s,l,c=-1,b=0;for(;b<r.length&&(a.lastIndex=b,l=a.exec(r),null!==l);)b=a.lastIndex,a===L?"!--"===l[1]?a=W:void 0!==l[1]?a=Z:void 0!==l[2]?(J.test(l[2])&&(i=RegExp("</"+l[2],"g")),a=H):void 0!==l[3]&&(a=H):a===H?">"===l[0]?(a=i??L,c=-1):void 0===l[1]?c=-2:(c=a.lastIndex-l[2].length,s=l[1],a=void 0===l[3]?H:'"'===l[3]?T:K):a===T||a===K?a=H:a===W||a===Z?a=L:(a=H,i=void 0);const d=a===H&&t[e+1].startsWith("/>")?" ":"";n+=a===L?r+G:c>=0?(o.push(s),r.slice(0,c)+S+r.slice(c)+X+d):r+X+(-2===c?e:d)}return[tt(t,n+(t[r]||"<?>")+(2===e?"</svg>":3===e?"</math>":"")),o]};class rt{constructor({strings:t,_$litType$:e},r){let o;this.parts=[];let i=0,n=0;const a=t.length-1,s=this.parts,[l,c]=et(t,e);if(this.el=rt.createElement(l,r),_.currentNode=this.el.content,2===e||3===e){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(o=_.nextNode())&&s.length<a;){if(1===o.nodeType){if(o.hasAttributes())for(const t of o.getAttributeNames())if(t.endsWith(S)){const e=c[n++],r=o.getAttribute(t).split(X),a=/([.?@])?(.*)/.exec(e);s.push({type:1,index:i,name:a[2],strings:r,ctor:"."===a[1]?st:"?"===a[1]?lt:"@"===a[1]?ct:at}),o.removeAttribute(t)}else t.startsWith(X)&&(s.push({type:6,index:i}),o.removeAttribute(t));if(J.test(o.tagName)){const t=o.textContent.split(X),e=t.length-1;if(e>0){o.textContent=O?O.emptyScript:"";for(let r=0;r<e;r++)o.append(t[r],N()),_.nextNode(),s.push({type:2,index:++i});o.append(t[e],N())}}}else if(8===o.nodeType)if(o.data===V)s.push({type:2,index:i});else{let t=-1;for(;-1!==(t=o.data.indexOf(X,t+1));)s.push({type:7,index:i}),t+=X.length-1}i++}}static createElement(t,e){const r=M.createElement("template");return r.innerHTML=t,r}}function ot(t,e,r=t,o){if(e===Y)return e;let i=void 0!==o?r._$Co?.[o]:r._$Cl;const n=I(e)?void 0:e._$litDirective$;return i?.constructor!==n&&(i?._$AO?.(!1),void 0===n?i=void 0:(i=new n(t),i._$AT(t,r,o)),void 0!==o?(r._$Co??=[])[o]=i:r._$Cl=i),void 0!==i&&(e=ot(t,i._$AS(t,e.values),i,o)),e}let it=class{constructor(t,e){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=e}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:e},parts:r}=this._$AD,o=(t?.creationScope??M).importNode(e,!0);_.currentNode=o;let i=_.nextNode(),n=0,a=0,s=r[0];for(;void 0!==s;){if(n===s.index){let e;2===s.type?e=new nt(i,i.nextSibling,this,t):1===s.type?e=new s.ctor(i,s.name,s.strings,this,t):6===s.type&&(e=new bt(i,this,t)),this._$AV.push(e),s=r[++a]}n!==s?.index&&(i=_.nextNode(),n++)}return _.currentNode=M,o}p(t){let e=0;for(const r of this._$AV)void 0!==r&&(void 0!==r.strings?(r._$AI(t,r,e),e+=r.strings.length-2):r._$AI(t[e])),e++}};class nt{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,e,r,o){this.type=2,this._$AH=Q,this._$AN=void 0,this._$AA=t,this._$AB=e,this._$AM=r,this.options=o,this._$Cv=o?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const e=this._$AM;return void 0!==e&&11===t?.nodeType&&(t=e.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,e=this){t=ot(this,t,e),I(t)?t===Q||null==t||""===t?(this._$AH!==Q&&this._$AR(),this._$AH=Q):t!==this._$AH&&t!==Y&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):(t=>B(t)||"function"==typeof t?.[Symbol.iterator])(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==Q&&I(this._$AH)?this._$AA.nextSibling.data=t:this.T(M.createTextNode(t)),this._$AH=t}$(t){const{values:e,_$litType$:r}=t,o="number"==typeof r?this._$AC(t):(void 0===r.el&&(r.el=rt.createElement(tt(r.h,r.h[0]),this.options)),r);if(this._$AH?._$AD===o)this._$AH.p(e);else{const t=new it(o,this),r=t.u(this.options);t.p(e),this.T(r),this._$AH=t}}_$AC(t){let e=$.get(t.strings);return void 0===e&&$.set(t.strings,e=new rt(t)),e}k(t){B(this._$AH)||(this._$AH=[],this._$AR());const e=this._$AH;let r,o=0;for(const i of t)o===e.length?e.push(r=new nt(this.O(N()),this.O(N()),this,this.options)):r=e[o],r._$AI(i),o++;o<e.length&&(this._$AR(r&&r._$AB.nextSibling,o),e.length=o)}_$AR(t=this._$AA.nextSibling,e){for(this._$AP?.(!1,!0,e);t&&t!==this._$AB;){const e=t.nextSibling;t.remove(),t=e}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class at{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,e,r,o,i){this.type=1,this._$AH=Q,this._$AN=void 0,this.element=t,this.name=e,this._$AM=o,this.options=i,r.length>2||""!==r[0]||""!==r[1]?(this._$AH=Array(r.length-1).fill(new String),this.strings=r):this._$AH=Q}_$AI(t,e=this,r,o){const i=this.strings;let n=!1;if(void 0===i)t=ot(this,t,e,0),n=!I(t)||t!==this._$AH&&t!==Y,n&&(this._$AH=t);else{const o=t;let a,s;for(t=i[0],a=0;a<i.length-1;a++)s=ot(this,o[r+a],e,a),s===Y&&(s=this._$AH[a]),n||=!I(s)||s!==this._$AH[a],s===Q?t=Q:t!==Q&&(t+=(s??"")+i[a+1]),this._$AH[a]=s}n&&!o&&this.j(t)}j(t){t===Q?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??"")}}class st extends at{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===Q?void 0:t}}class lt extends at{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==Q)}}class ct extends at{constructor(t,e,r,o,i){super(t,e,r,o,i),this.type=5}_$AI(t,e=this){if((t=ot(this,t,e,0)??Q)===Y)return;const r=this._$AH,o=t===Q&&r!==Q||t.capture!==r.capture||t.once!==r.once||t.passive!==r.passive,i=t!==Q&&(r===Q||o);o&&this.element.removeEventListener(this.name,this,r),i&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){"function"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class bt{constructor(t,e,r){this.element=t,this.type=6,this._$AN=void 0,this._$AM=e,this.options=r}get _$AU(){return this._$AM._$AU}_$AI(t){ot(this,t)}}const dt={I:nt},ft=P.litHtmlPolyfillSupport;ft?.(rt,nt),(P.litHtmlVersions??=[]).push("3.2.1");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
let pt=class extends D{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const e=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=((t,e,r)=>{const o=r?.renderBefore??e;let i=o._$litPart$;if(void 0===i){const t=r?.renderBefore??null;o._$litPart$=i=new nt(e.insertBefore(N(),t),t,void 0,r??{})}return i._$AI(t),i})(e,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return Y}};pt._$litElement$=!0,pt.finalized=!0,globalThis.litElementHydrateSupport?.({LitElement:pt});const mt=globalThis.litElementPolyfillSupport;mt?.({LitElement:pt}),(globalThis.litElementVersions??=[]).push("4.1.1");const ut=new Set(["string","integer","number","boolean","array"]);function ht(t){return ut.has(t)}const gt={fromAttribute(t){try{return t?JSON.parse(t):null}catch(t){return console.error("fromAttribute:JSON parsing error:",t),null}},toAttribute(t){try{return null!=t?JSON.stringify(t):null}catch(t){return console.error("toAttribute: JSON stringifycation failure:",t),null}}};function vt(t,e){switch(!0){case"const"in e:return e.const;case ht(e.basetype)&&"default"in e:return e.default;case"object"===e.basetype:return Object.entries(e.properties).reduce(((t,[e,r])=>(r.default?t[e]=At(JSON.parse(JSON.stringify(r.default)),t,r):t[e]=t.required?.includes[e]?vt(t,r):At(Xt(r),t,r),t)),At({},t,e));case"array"===e.basetype:return At([],t,e);default:return At(Xt(e),t,e)}}function wt(t,e){if(e instanceof Element){const r=e.assignedSlot??e,o=r.closest(t),i=r.getRootNode().host;return o??wt(t,i)}return null}function xt(t,e,r){const o=r.split(/\//),i=/^\d+$/.test(o[0]);let n=i?e:t;if(i){const t=parseInt(o[0]);for(let e=0;e<t;e++)n=n.parent;if(!n)return console.error(`in context ${e.pointer} enable to dereference pointer ${r} (not enough ascendant')`),null}o.shift();for(const t of o){const o=n;if(n="*"===t?n.items:n.properties[t],!n)return console.error(`in context ${e.pointer} enable to dereference pointer ${r}(property '${t}' not found in ${o.pointer})`),null}return n}function yt(t,e,r,o){const i=o.split(/\//),n=/^\d+$/.test(i[0]);let a=n?e:t;if(n){const t=parseInt(i[0]);if(0===t)a=a[r];else for(let e=1;e<t;e++)a=a[Dt];if(!a)return console.error(`enable to dereference pointer ${o} (no more parents)`),null}i.shift();for(const t of i){if(null==a||!["array","object"].includes(typeof a))return;a=a[/^\d+$/.test(t)?parseInt(t):t]}return a}function kt(t,e,r=""){if(!t)return e||"";if(!e)return"";return r=e+(""===r?"":"/"+r),t.root==t?"/"+r:kt(t.parent,r)}const jt=Symbol("FZ_FORM_SCHEMA"),Dt=Symbol("FZ_FORM_PARENT"),zt=Symbol("FZ_FORM_ROOT");function Et(t,e,r){return t&&"object"==typeof t&&r&&Object.defineProperty(t,e,{enumerable:!1,value:r,writable:!0}),t}function At(t,e,r){return Ft(t,r),Pt(t,e),Ot(t,e[zt]),t}function Ft(t,e){return Et(t,jt,e)}function qt(t){return t?.[jt]}function Pt(t,e){return Et(t,Dt,e)}function Ot(t,e){return Et(t,zt,e)}function Rt(t,e){if("root"!==t&&"parent"!==t)return e}function St(t){return void 0===t||(null===t||(""===t||("object"==typeof t?Object.keys(t).every((e=>void 0===t[e])):!!Array.isArray(t)&&0===t.length)))}function Xt(t){if(t)return"array"==t.basetype?[]:"object"==t.basetype?{}:t.const?t.const:t.nullAllowed?null:void 0}function Vt(t,e){switch(!0){case null==t||St(e)||null==e:return"~";case Array.isArray(e):return e.map((e=>e?Vt(t.items,e):e)).filter((t=>t)).join(",");case"object"==typeof e:return t.properties?Object.keys(t.properties).filter((t=>!(null==e[t]))).map((r=>Vt(t.properties[r],e[r]))).join(","):"";default:return e}}function Gt(t,e){switch(t){case"valueMissing":return"mandatory";case"badInput":return"incorrect value";case"patternMismatch":return`invalid pattern=${e?e.getAttribute("pattern"):"?"})`;case"tooLong":return`too long (max=${e?e.getAttribute("maxlength"):"?"})`;case"tooShort":return`too short (min=${e?e.getAttribute("minlength"):"?"})`;case"rangeOverflow":return`range overflow (max= ${e?e.getAttribute("max"):"?"})`;case"rangeUnderflow":return`range underflow (min=${e?e.getAttribute("min"):"?"})`;case"stepMismatch":return`step mismatch (pas=${e?e.getAttribute("step"):"?"})`;case"customError":return"custom error";case"typeMismatch":return"syntax error";default:return""}}window.nvl=function(t,...e){const r=e.map((t=>t??""));return String.raw(t,r)};const Mt=l`
@charset "UTF-8";
/*!
 * Bootstrap  v5.3.3 (https://getbootstrap.com/)
 * Copyright 2011-2024 The Bootstrap Authors
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */
:host,
[data-bs-theme=light] {
  --bs-blue: #0d6efd;
  --bs-indigo: #6610f2;
  --bs-purple: #6f42c1;
  --bs-pink: #d63384;
  --bs-red: #dc3545;
  --bs-orange: #fd7e14;
  --bs-yellow: #ffc107;
  --bs-green: #198754;
  --bs-teal: #20c997;
  --bs-cyan: #0dcaf0;
  --bs-black: #000;
  --bs-white: #fff;
  --bs-gray: #6c757d;
  --bs-gray-dark: #343a40;
  --bs-gray-100: #f8f9fa;
  --bs-gray-200: #e9ecef;
  --bs-gray-300: #dee2e6;
  --bs-gray-400: #ced4da;
  --bs-gray-500: #adb5bd;
  --bs-gray-600: #6c757d;
  --bs-gray-700: #495057;
  --bs-gray-800: #343a40;
  --bs-gray-900: #212529;
  --bs-primary: #0d6efd;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-primary-rgb: 13, 110, 253;
  --bs-secondary-rgb: 108, 117, 125;
  --bs-success-rgb: 25, 135, 84;
  --bs-info-rgb: 13, 202, 240;
  --bs-warning-rgb: 255, 193, 7;
  --bs-danger-rgb: 220, 53, 69;
  --bs-light-rgb: 248, 249, 250;
  --bs-dark-rgb: 33, 37, 41;
  --bs-primary-text-emphasis: #052c65;
  --bs-secondary-text-emphasis: #2b2f32;
  --bs-success-text-emphasis: #0a3622;
  --bs-info-text-emphasis: #055160;
  --bs-warning-text-emphasis: #664d03;
  --bs-danger-text-emphasis: #58151c;
  --bs-light-text-emphasis: #495057;
  --bs-dark-text-emphasis: #495057;
  --bs-primary-bg-subtle: #cfe2ff;
  --bs-secondary-bg-subtle: #e2e3e5;
  --bs-success-bg-subtle: #d1e7dd;
  --bs-info-bg-subtle: #cff4fc;
  --bs-warning-bg-subtle: #fff3cd;
  --bs-danger-bg-subtle: #f8d7da;
  --bs-light-bg-subtle: #fcfcfd;
  --bs-dark-bg-subtle: #ced4da;
  --bs-primary-border-subtle: #9ec5fe;
  --bs-secondary-border-subtle: #c4c8cb;
  --bs-success-border-subtle: #a3cfbb;
  --bs-info-border-subtle: #9eeaf9;
  --bs-warning-border-subtle: #ffe69c;
  --bs-danger-border-subtle: #f1aeb5;
  --bs-light-border-subtle: #e9ecef;
  --bs-dark-border-subtle: #adb5bd;
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
  --bs-body-font-family: var(--bs-font-sans-serif);
  --bs-body-font-size: 1rem;
  --bs-body-font-weight: 400;
  --bs-body-line-height: 1.5;
  --bs-body-color: #212529;
  --bs-body-color-rgb: 33, 37, 41;
  --bs-body-bg: #fff;
  --bs-body-bg-rgb: 255, 255, 255;
  --bs-emphasis-color: #000;
  --bs-emphasis-color-rgb: 0, 0, 0;
  --bs-secondary-color: rgba(33, 37, 41, 0.75);
  --bs-secondary-color-rgb: 33, 37, 41;
  --bs-secondary-bg: #e9ecef;
  --bs-secondary-bg-rgb: 233, 236, 239;
  --bs-tertiary-color: rgba(33, 37, 41, 0.5);
  --bs-tertiary-color-rgb: 33, 37, 41;
  --bs-tertiary-bg: #f8f9fa;
  --bs-tertiary-bg-rgb: 248, 249, 250;
  --bs-heading-color: inherit;
  --bs-link-color: #0d6efd;
  --bs-link-color-rgb: 13, 110, 253;
  --bs-link-decoration: underline;
  --bs-link-hover-color: #0a58ca;
  --bs-link-hover-color-rgb: 10, 88, 202;
  --bs-code-color: #d63384;
  --bs-highlight-color: #212529;
  --bs-highlight-bg: #fff3cd;
  --bs-border-width: 1px;
  --bs-border-style: solid;
  --bs-border-color: #dee2e6;
  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
  --bs-border-radius: 0.375rem;
  --bs-border-radius-sm: 0.25rem;
  --bs-border-radius-lg: 0.5rem;
  --bs-border-radius-xl: 1rem;
  --bs-border-radius-xxl: 2rem;
  --bs-border-radius-2xl: var(--bs-border-radius-xxl);
  --bs-border-radius-pill: 50rem;
  --bs-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  --bs-box-shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  --bs-box-shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
  --bs-box-shadow-inset: inset 0 1px 2px rgba(0, 0, 0, 0.075);
  --bs-focus-ring-width: 0.25rem;
  --bs-focus-ring-opacity: 0.25;
  --bs-focus-ring-color: rgba(13, 110, 253, 0.25);
  --bs-form-valid-color: #198754;
  --bs-form-valid-border-color: #198754;
  --bs-form-invalid-color: #dc3545;
  --bs-form-invalid-border-color: #dc3545;
}

[data-bs-theme=dark] {
  color-scheme: dark;
  --bs-body-color: #dee2e6;
  --bs-body-color-rgb: 222, 226, 230;
  --bs-body-bg: #212529;
  --bs-body-bg-rgb: 33, 37, 41;
  --bs-emphasis-color: #fff;
  --bs-emphasis-color-rgb: 255, 255, 255;
  --bs-secondary-color: rgba(222, 226, 230, 0.75);
  --bs-secondary-color-rgb: 222, 226, 230;
  --bs-secondary-bg: #343a40;
  --bs-secondary-bg-rgb: 52, 58, 64;
  --bs-tertiary-color: rgba(222, 226, 230, 0.5);
  --bs-tertiary-color-rgb: 222, 226, 230;
  --bs-tertiary-bg: #2b3035;
  --bs-tertiary-bg-rgb: 43, 48, 53;
  --bs-primary-text-emphasis: #6ea8fe;
  --bs-secondary-text-emphasis: #a7acb1;
  --bs-success-text-emphasis: #75b798;
  --bs-info-text-emphasis: #6edff6;
  --bs-warning-text-emphasis: #ffda6a;
  --bs-danger-text-emphasis: #ea868f;
  --bs-light-text-emphasis: #f8f9fa;
  --bs-dark-text-emphasis: #dee2e6;
  --bs-primary-bg-subtle: #031633;
  --bs-secondary-bg-subtle: #161719;
  --bs-success-bg-subtle: #051b11;
  --bs-info-bg-subtle: #032830;
  --bs-warning-bg-subtle: #332701;
  --bs-danger-bg-subtle: #2c0b0e;
  --bs-light-bg-subtle: #343a40;
  --bs-dark-bg-subtle: #1a1d20;
  --bs-primary-border-subtle: #084298;
  --bs-secondary-border-subtle: #41464b;
  --bs-success-border-subtle: #0f5132;
  --bs-info-border-subtle: #087990;
  --bs-warning-border-subtle: #997404;
  --bs-danger-border-subtle: #842029;
  --bs-light-border-subtle: #495057;
  --bs-dark-border-subtle: #343a40;
  --bs-heading-color: inherit;
  --bs-link-color: #6ea8fe;
  --bs-link-hover-color: #8bb9fe;
  --bs-link-color-rgb: 110, 168, 254;
  --bs-link-hover-color-rgb: 139, 185, 254;
  --bs-code-color: #e685b5;
  --bs-highlight-color: #dee2e6;
  --bs-highlight-bg: #664d03;
  --bs-border-color: #495057;
  --bs-border-color-translucent: rgba(255, 255, 255, 0.15);
  --bs-form-valid-color: #75b798;
  --bs-form-valid-border-color: #75b798;
  --bs-form-invalid-color: #ea868f;
  --bs-form-invalid-border-color: #ea868f;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

@media (prefers-reduced-motion: no-preference) {
  :host {
    scroll-behavior: smooth;
  }
}

body {
  margin: 0;
  font-family: var(--bs-body-font-family);
  font-size: var(--bs-body-font-size);
  font-weight: var(--bs-body-font-weight);
  line-height: var(--bs-body-line-height);
  color: var(--bs-body-color);
  text-align: var(--bs-body-text-align);
  background-color: var(--bs-body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

hr {
  margin: 1rem 0;
  color: inherit;
  border: 0;
  border-top: var(--bs-border-width) solid;
  opacity: 0.25;
}

h6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
  color: var(--bs-heading-color);
}

h1, .h1 {
  font-size: calc(1.375rem + 1.5vw);
}
@media (min-width: 1200px) {
  h1, .h1 {
    font-size: 2.5rem;
  }
}

h2, .h2 {
  font-size: calc(1.325rem + 0.9vw);
}
@media (min-width: 1200px) {
  h2, .h2 {
    font-size: 2rem;
  }
}

h3, .h3 {
  font-size: calc(1.3rem + 0.6vw);
}
@media (min-width: 1200px) {
  h3, .h3 {
    font-size: 1.75rem;
  }
}

h4, .h4 {
  font-size: calc(1.275rem + 0.3vw);
}
@media (min-width: 1200px) {
  h4, .h4 {
    font-size: 1.5rem;
  }
}

h5, .h5 {
  font-size: 1.25rem;
}

h6, .h6 {
  font-size: 1rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small, .small {
  font-size: 0.875em;
}

mark, .mark {
  padding: 0.1875em;
  color: var(--bs-highlight-color);
  background-color: var(--bs-highlight-bg);
}

sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

a {
  color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 1));
  text-decoration: underline;
}
a:hover {
  --bs-link-color-rgb: var(--bs-link-hover-color-rgb);
}

a:not([href]):not([class]), a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}

pre,
code,
kbd,
samp {
  font-family: var(--bs-font-monospace);
  font-size: 1em;
}

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}
pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

code {
  font-size: 0.875em;
  color: var(--bs-code-color);
  word-wrap: break-word;
}
a > code {
  color: inherit;
}

kbd {
  padding: 0.1875rem 0.375rem;
  font-size: 0.875em;
  color: var(--bs-body-bg);
  background-color: var(--bs-body-color);
  border-radius: 0.25rem;
}
kbd kbd {
  padding: 0;
  font-size: 1em;
}

figure {
  margin: 0 0 1rem;
}

img,
svg {
  vertical-align: middle;
}

table {
  caption-side: bottom;
  border-collapse: collapse;
}

caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--bs-secondary-color);
  text-align: left;
}

th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}

thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}

label {
  display: inline-block;
}

button {
  border-radius: 0;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
select {
  text-transform: none;
}

[role=button] {
  cursor: pointer;
}

select {
  word-wrap: normal;
}
select:disabled {
  opacity: 1;
}

[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
  display: none !important;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}
button:not(:disabled),
[type=button]:not(:disabled),
[type=reset]:not(:disabled),
[type=submit]:not(:disabled) {
  cursor: pointer;
}

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

textarea {
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}
@media (min-width: 1200px) {
  legend {
    font-size: 1.5rem;
  }
}
legend + * {
  clear: left;
}

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

::-webkit-inner-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

iframe {
  border: 0;
}

summary {
  display: list-item;
  cursor: pointer;
}

progress {
  vertical-align: baseline;
}

[hidden] {
  display: none !important;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: calc(1.625rem + 4.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-1 {
    font-size: 5rem;
  }
}

.display-2 {
  font-size: calc(1.575rem + 3.9vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-2 {
    font-size: 4.5rem;
  }
}

.display-3 {
  font-size: calc(1.525rem + 3.3vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-3 {
    font-size: 4rem;
  }
}

.display-4 {
  font-size: calc(1.475rem + 2.7vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-4 {
    font-size: 3.5rem;
  }
}

.display-5 {
  font-size: calc(1.425rem + 2.1vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-5 {
    font-size: 3rem;
  }
}

.display-6 {
  font-size: calc(1.375rem + 1.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-6 {
    font-size: 2.5rem;
  }
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}
.list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}

.initialism {
  font-size: 0.875em;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
.blockquote > :last-child {
  margin-bottom: 0;
}

.blockquote-footer {
  margin-top: -1rem;
  margin-bottom: 1rem;
  font-size: 0.875em;
  color: #6c757d;
}
.blockquote-footer::before {
  content: "— ";
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

.img-thumbnail {
  padding: 0.25rem;
  background-color: var(--bs-body-bg);
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  max-width: 100%;
  height: auto;
}

.figure {
  display: inline-block;
}

.figure-img {
  margin-bottom: 0.5rem;
  line-height: 1;
}

.figure-caption {
  font-size: 0.875em;
  color: var(--bs-secondary-color);
}

.container,
.container-fluid,
.container-xxl,
.container-xl,
.container-lg,
.container-md,
.container-sm {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container-sm, .container {
    max-width: 540px;
  }
}
@media (min-width: 768px) {
  .container-md, .container-sm, .container {
    max-width: 720px;
  }
}
@media (min-width: 992px) {
  .container-lg, .container-md, .container-sm, .container {
    max-width: 960px;
  }
}
@media (min-width: 1200px) {
  .container-xl, .container-lg, .container-md, .container-sm, .container {
    max-width: 1140px;
  }
}
@media (min-width: 1400px) {
  .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {
    max-width: 1320px;
  }
}
:host {
  --bs-breakpoint-xs: 0;
  --bs-breakpoint-sm: 576px;
  --bs-breakpoint-md: 768px;
  --bs-breakpoint-lg: 992px;
  --bs-breakpoint-xl: 1200px;
  --bs-breakpoint-xxl: 1400px;
}

.row {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(-1 * var(--bs-gutter-y));
  margin-right: calc(-0.5 * var(--bs-gutter-x));
  margin-left: calc(-0.5 * var(--bs-gutter-x));
}
.row > * {
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-top: var(--bs-gutter-y);
}

.col {
  flex: 1 0 0%;
}

.row-cols-auto > * {
  flex: 0 0 auto;
  width: auto;
}

.row-cols-1 > * {
  flex: 0 0 auto;
  width: 100%;
}

.row-cols-2 > * {
  flex: 0 0 auto;
  width: 50%;
}

.row-cols-3 > * {
  flex: 0 0 auto;
  width: 33.33333333%;
}

.row-cols-4 > * {
  flex: 0 0 auto;
  width: 25%;
}

.row-cols-5 > * {
  flex: 0 0 auto;
  width: 20%;
}

.row-cols-6 > * {
  flex: 0 0 auto;
  width: 16.66666667%;
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
}

.col-1 {
  flex: 0 0 auto;
  width: 8.33333333%;
}

.col-2 {
  flex: 0 0 auto;
  width: 16.66666667%;
}

.col-3 {
  flex: 0 0 auto;
  width: 25%;
}

.col-4 {
  flex: 0 0 auto;
  width: 33.33333333%;
}

.col-5 {
  flex: 0 0 auto;
  width: 41.66666667%;
}

.col-6 {
  flex: 0 0 auto;
  width: 50%;
}

.col-7 {
  flex: 0 0 auto;
  width: 58.33333333%;
}

.col-8 {
  flex: 0 0 auto;
  width: 66.66666667%;
}

.col-9 {
  flex: 0 0 auto;
  width: 75%;
}

.col-10 {
  flex: 0 0 auto;
  width: 83.33333333%;
}

.col-11 {
  flex: 0 0 auto;
  width: 91.66666667%;
}

.col-12 {
  flex: 0 0 auto;
  width: 100%;
}

.offset-1 {
  margin-left: 8.33333333%;
}

.offset-2 {
  margin-left: 16.66666667%;
}

.offset-3 {
  margin-left: 25%;
}

.offset-4 {
  margin-left: 33.33333333%;
}

.offset-5 {
  margin-left: 41.66666667%;
}

.offset-6 {
  margin-left: 50%;
}

.offset-7 {
  margin-left: 58.33333333%;
}

.offset-8 {
  margin-left: 66.66666667%;
}

.offset-9 {
  margin-left: 75%;
}

.offset-10 {
  margin-left: 83.33333333%;
}

.offset-11 {
  margin-left: 91.66666667%;
}

.g-0,
.gx-0 {
  --bs-gutter-x: 0;
}

.g-0,
.gy-0 {
  --bs-gutter-y: 0;
}

.g-1,
.gx-1 {
  --bs-gutter-x: 0.25rem;
}

.g-1,
.gy-1 {
  --bs-gutter-y: 0.25rem;
}

.g-2,
.gx-2 {
  --bs-gutter-x: 0.5rem;
}

.g-2,
.gy-2 {
  --bs-gutter-y: 0.5rem;
}

.g-3,
.gx-3 {
  --bs-gutter-x: 1rem;
}

.g-3,
.gy-3 {
  --bs-gutter-y: 1rem;
}

.g-4,
.gx-4 {
  --bs-gutter-x: 1.5rem;
}

.g-4,
.gy-4 {
  --bs-gutter-y: 1.5rem;
}

.g-5,
.gx-5 {
  --bs-gutter-x: 3rem;
}

.g-5,
.gy-5 {
  --bs-gutter-y: 3rem;
}

@media (min-width: 576px) {
  .col-sm {
    flex: 1 0 0%;
  }
  .row-cols-sm-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .row-cols-sm-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .row-cols-sm-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .row-cols-sm-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .row-cols-sm-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .row-cols-sm-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .row-cols-sm-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-sm-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .col-sm-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .col-sm-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-sm-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .col-sm-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .col-sm-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .col-sm-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .col-sm-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .col-sm-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .col-sm-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .col-sm-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .col-sm-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .col-sm-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .offset-sm-0 {
    margin-left: 0;
  }
  .offset-sm-1 {
    margin-left: 8.33333333%;
  }
  .offset-sm-2 {
    margin-left: 16.66666667%;
  }
  .offset-sm-3 {
    margin-left: 25%;
  }
  .offset-sm-4 {
    margin-left: 33.33333333%;
  }
  .offset-sm-5 {
    margin-left: 41.66666667%;
  }
  .offset-sm-6 {
    margin-left: 50%;
  }
  .offset-sm-7 {
    margin-left: 58.33333333%;
  }
  .offset-sm-8 {
    margin-left: 66.66666667%;
  }
  .offset-sm-9 {
    margin-left: 75%;
  }
  .offset-sm-10 {
    margin-left: 83.33333333%;
  }
  .offset-sm-11 {
    margin-left: 91.66666667%;
  }
  .g-sm-0,
  .gx-sm-0 {
    --bs-gutter-x: 0;
  }
  .g-sm-0,
  .gy-sm-0 {
    --bs-gutter-y: 0;
  }
  .g-sm-1,
  .gx-sm-1 {
    --bs-gutter-x: 0.25rem;
  }
  .g-sm-1,
  .gy-sm-1 {
    --bs-gutter-y: 0.25rem;
  }
  .g-sm-2,
  .gx-sm-2 {
    --bs-gutter-x: 0.5rem;
  }
  .g-sm-2,
  .gy-sm-2 {
    --bs-gutter-y: 0.5rem;
  }
  .g-sm-3,
  .gx-sm-3 {
    --bs-gutter-x: 1rem;
  }
  .g-sm-3,
  .gy-sm-3 {
    --bs-gutter-y: 1rem;
  }
  .g-sm-4,
  .gx-sm-4 {
    --bs-gutter-x: 1.5rem;
  }
  .g-sm-4,
  .gy-sm-4 {
    --bs-gutter-y: 1.5rem;
  }
  .g-sm-5,
  .gx-sm-5 {
    --bs-gutter-x: 3rem;
  }
  .g-sm-5,
  .gy-sm-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 768px) {
  .col-md {
    flex: 1 0 0%;
  }
  .row-cols-md-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .row-cols-md-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .row-cols-md-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .row-cols-md-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .row-cols-md-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .row-cols-md-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .row-cols-md-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-md-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .col-md-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .col-md-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-md-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .col-md-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .col-md-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .col-md-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .col-md-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .col-md-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .col-md-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .col-md-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .col-md-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .col-md-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .offset-md-0 {
    margin-left: 0;
  }
  .offset-md-1 {
    margin-left: 8.33333333%;
  }
  .offset-md-2 {
    margin-left: 16.66666667%;
  }
  .offset-md-3 {
    margin-left: 25%;
  }
  .offset-md-4 {
    margin-left: 33.33333333%;
  }
  .offset-md-5 {
    margin-left: 41.66666667%;
  }
  .offset-md-6 {
    margin-left: 50%;
  }
  .offset-md-7 {
    margin-left: 58.33333333%;
  }
  .offset-md-8 {
    margin-left: 66.66666667%;
  }
  .offset-md-9 {
    margin-left: 75%;
  }
  .offset-md-10 {
    margin-left: 83.33333333%;
  }
  .offset-md-11 {
    margin-left: 91.66666667%;
  }
  .g-md-0,
  .gx-md-0 {
    --bs-gutter-x: 0;
  }
  .g-md-0,
  .gy-md-0 {
    --bs-gutter-y: 0;
  }
  .g-md-1,
  .gx-md-1 {
    --bs-gutter-x: 0.25rem;
  }
  .g-md-1,
  .gy-md-1 {
    --bs-gutter-y: 0.25rem;
  }
  .g-md-2,
  .gx-md-2 {
    --bs-gutter-x: 0.5rem;
  }
  .g-md-2,
  .gy-md-2 {
    --bs-gutter-y: 0.5rem;
  }
  .g-md-3,
  .gx-md-3 {
    --bs-gutter-x: 1rem;
  }
  .g-md-3,
  .gy-md-3 {
    --bs-gutter-y: 1rem;
  }
  .g-md-4,
  .gx-md-4 {
    --bs-gutter-x: 1.5rem;
  }
  .g-md-4,
  .gy-md-4 {
    --bs-gutter-y: 1.5rem;
  }
  .g-md-5,
  .gx-md-5 {
    --bs-gutter-x: 3rem;
  }
  .g-md-5,
  .gy-md-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 992px) {
  .col-lg {
    flex: 1 0 0%;
  }
  .row-cols-lg-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .row-cols-lg-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .row-cols-lg-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .row-cols-lg-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .row-cols-lg-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .row-cols-lg-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .row-cols-lg-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-lg-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .col-lg-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .col-lg-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-lg-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .col-lg-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .col-lg-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .col-lg-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .col-lg-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .col-lg-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .col-lg-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .col-lg-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .col-lg-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .col-lg-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .offset-lg-0 {
    margin-left: 0;
  }
  .offset-lg-1 {
    margin-left: 8.33333333%;
  }
  .offset-lg-2 {
    margin-left: 16.66666667%;
  }
  .offset-lg-3 {
    margin-left: 25%;
  }
  .offset-lg-4 {
    margin-left: 33.33333333%;
  }
  .offset-lg-5 {
    margin-left: 41.66666667%;
  }
  .offset-lg-6 {
    margin-left: 50%;
  }
  .offset-lg-7 {
    margin-left: 58.33333333%;
  }
  .offset-lg-8 {
    margin-left: 66.66666667%;
  }
  .offset-lg-9 {
    margin-left: 75%;
  }
  .offset-lg-10 {
    margin-left: 83.33333333%;
  }
  .offset-lg-11 {
    margin-left: 91.66666667%;
  }
  .g-lg-0,
  .gx-lg-0 {
    --bs-gutter-x: 0;
  }
  .g-lg-0,
  .gy-lg-0 {
    --bs-gutter-y: 0;
  }
  .g-lg-1,
  .gx-lg-1 {
    --bs-gutter-x: 0.25rem;
  }
  .g-lg-1,
  .gy-lg-1 {
    --bs-gutter-y: 0.25rem;
  }
  .g-lg-2,
  .gx-lg-2 {
    --bs-gutter-x: 0.5rem;
  }
  .g-lg-2,
  .gy-lg-2 {
    --bs-gutter-y: 0.5rem;
  }
  .g-lg-3,
  .gx-lg-3 {
    --bs-gutter-x: 1rem;
  }
  .g-lg-3,
  .gy-lg-3 {
    --bs-gutter-y: 1rem;
  }
  .g-lg-4,
  .gx-lg-4 {
    --bs-gutter-x: 1.5rem;
  }
  .g-lg-4,
  .gy-lg-4 {
    --bs-gutter-y: 1.5rem;
  }
  .g-lg-5,
  .gx-lg-5 {
    --bs-gutter-x: 3rem;
  }
  .g-lg-5,
  .gy-lg-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 1200px) {
  .col-xl {
    flex: 1 0 0%;
  }
  .row-cols-xl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .row-cols-xl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .row-cols-xl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .row-cols-xl-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .row-cols-xl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .row-cols-xl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .row-cols-xl-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-xl-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .col-xl-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .col-xl-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-xl-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .col-xl-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .col-xl-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .col-xl-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .col-xl-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .col-xl-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .col-xl-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .col-xl-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .col-xl-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .col-xl-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .offset-xl-0 {
    margin-left: 0;
  }
  .offset-xl-1 {
    margin-left: 8.33333333%;
  }
  .offset-xl-2 {
    margin-left: 16.66666667%;
  }
  .offset-xl-3 {
    margin-left: 25%;
  }
  .offset-xl-4 {
    margin-left: 33.33333333%;
  }
  .offset-xl-5 {
    margin-left: 41.66666667%;
  }
  .offset-xl-6 {
    margin-left: 50%;
  }
  .offset-xl-7 {
    margin-left: 58.33333333%;
  }
  .offset-xl-8 {
    margin-left: 66.66666667%;
  }
  .offset-xl-9 {
    margin-left: 75%;
  }
  .offset-xl-10 {
    margin-left: 83.33333333%;
  }
  .offset-xl-11 {
    margin-left: 91.66666667%;
  }
  .g-xl-0,
  .gx-xl-0 {
    --bs-gutter-x: 0;
  }
  .g-xl-0,
  .gy-xl-0 {
    --bs-gutter-y: 0;
  }
  .g-xl-1,
  .gx-xl-1 {
    --bs-gutter-x: 0.25rem;
  }
  .g-xl-1,
  .gy-xl-1 {
    --bs-gutter-y: 0.25rem;
  }
  .g-xl-2,
  .gx-xl-2 {
    --bs-gutter-x: 0.5rem;
  }
  .g-xl-2,
  .gy-xl-2 {
    --bs-gutter-y: 0.5rem;
  }
  .g-xl-3,
  .gx-xl-3 {
    --bs-gutter-x: 1rem;
  }
  .g-xl-3,
  .gy-xl-3 {
    --bs-gutter-y: 1rem;
  }
  .g-xl-4,
  .gx-xl-4 {
    --bs-gutter-x: 1.5rem;
  }
  .g-xl-4,
  .gy-xl-4 {
    --bs-gutter-y: 1.5rem;
  }
  .g-xl-5,
  .gx-xl-5 {
    --bs-gutter-x: 3rem;
  }
  .g-xl-5,
  .gy-xl-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 1400px) {
  .col-xxl {
    flex: 1 0 0%;
  }
  .row-cols-xxl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }
  .row-cols-xxl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }
  .row-cols-xxl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }
  .row-cols-xxl-3 > * {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .row-cols-xxl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }
  .row-cols-xxl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }
  .row-cols-xxl-6 > * {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-xxl-auto {
    flex: 0 0 auto;
    width: auto;
  }
  .col-xxl-1 {
    flex: 0 0 auto;
    width: 8.33333333%;
  }
  .col-xxl-2 {
    flex: 0 0 auto;
    width: 16.66666667%;
  }
  .col-xxl-3 {
    flex: 0 0 auto;
    width: 25%;
  }
  .col-xxl-4 {
    flex: 0 0 auto;
    width: 33.33333333%;
  }
  .col-xxl-5 {
    flex: 0 0 auto;
    width: 41.66666667%;
  }
  .col-xxl-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .col-xxl-7 {
    flex: 0 0 auto;
    width: 58.33333333%;
  }
  .col-xxl-8 {
    flex: 0 0 auto;
    width: 66.66666667%;
  }
  .col-xxl-9 {
    flex: 0 0 auto;
    width: 75%;
  }
  .col-xxl-10 {
    flex: 0 0 auto;
    width: 83.33333333%;
  }
  .col-xxl-11 {
    flex: 0 0 auto;
    width: 91.66666667%;
  }
  .col-xxl-12 {
    flex: 0 0 auto;
    width: 100%;
  }
  .offset-xxl-0 {
    margin-left: 0;
  }
  .offset-xxl-1 {
    margin-left: 8.33333333%;
  }
  .offset-xxl-2 {
    margin-left: 16.66666667%;
  }
  .offset-xxl-3 {
    margin-left: 25%;
  }
  .offset-xxl-4 {
    margin-left: 33.33333333%;
  }
  .offset-xxl-5 {
    margin-left: 41.66666667%;
  }
  .offset-xxl-6 {
    margin-left: 50%;
  }
  .offset-xxl-7 {
    margin-left: 58.33333333%;
  }
  .offset-xxl-8 {
    margin-left: 66.66666667%;
  }
  .offset-xxl-9 {
    margin-left: 75%;
  }
  .offset-xxl-10 {
    margin-left: 83.33333333%;
  }
  .offset-xxl-11 {
    margin-left: 91.66666667%;
  }
  .g-xxl-0,
  .gx-xxl-0 {
    --bs-gutter-x: 0;
  }
  .g-xxl-0,
  .gy-xxl-0 {
    --bs-gutter-y: 0;
  }
  .g-xxl-1,
  .gx-xxl-1 {
    --bs-gutter-x: 0.25rem;
  }
  .g-xxl-1,
  .gy-xxl-1 {
    --bs-gutter-y: 0.25rem;
  }
  .g-xxl-2,
  .gx-xxl-2 {
    --bs-gutter-x: 0.5rem;
  }
  .g-xxl-2,
  .gy-xxl-2 {
    --bs-gutter-y: 0.5rem;
  }
  .g-xxl-3,
  .gx-xxl-3 {
    --bs-gutter-x: 1rem;
  }
  .g-xxl-3,
  .gy-xxl-3 {
    --bs-gutter-y: 1rem;
  }
  .g-xxl-4,
  .gx-xxl-4 {
    --bs-gutter-x: 1.5rem;
  }
  .g-xxl-4,
  .gy-xxl-4 {
    --bs-gutter-y: 1.5rem;
  }
  .g-xxl-5,
  .gx-xxl-5 {
    --bs-gutter-x: 3rem;
  }
  .g-xxl-5,
  .gy-xxl-5 {
    --bs-gutter-y: 3rem;
  }
}
.table {
  --bs-table-color-type: initial;
  --bs-table-bg-type: initial;
  --bs-table-color-state: initial;
  --bs-table-bg-state: initial;
  --bs-table-color: var(--bs-emphasis-color);
  --bs-table-bg: var(--bs-body-bg);
  --bs-table-border-color: var(--bs-border-color);
  --bs-table-accent-bg: transparent;
  --bs-table-striped-color: var(--bs-emphasis-color);
  --bs-table-striped-bg: rgba(var(--bs-emphasis-color-rgb), 0.05);
  --bs-table-active-color: var(--bs-emphasis-color);
  --bs-table-active-bg: rgba(var(--bs-emphasis-color-rgb), 0.1);
  --bs-table-hover-color: var(--bs-emphasis-color);
  --bs-table-hover-bg: rgba(var(--bs-emphasis-color-rgb), 0.075);
  width: 100%;
  margin-bottom: 1rem;
  vertical-align: top;
  border-color: var(--bs-table-border-color);
}
.table > :not(caption) > * > * {
  padding: 0.5rem 0.5rem;
  color: var(--bs-table-color-state, var(--bs-table-color-type, var(--bs-table-color)));
  background-color: var(--bs-table-bg);
  border-bottom-width: var(--bs-border-width);
  box-shadow: inset 0 0 0 9999px var(--bs-table-bg-state, var(--bs-table-bg-type, var(--bs-table-accent-bg)));
}
.table > tbody {
  vertical-align: inherit;
}
.table > thead {
  vertical-align: bottom;
}

.table-group-divider {
  border-top: calc(var(--bs-border-width) * 2) solid currentcolor;
}

.caption-top {
  caption-side: top;
}

.table-sm > :not(caption) > * > * {
  padding: 0.25rem 0.25rem;
}

.table-bordered > :not(caption) > * {
  border-width: var(--bs-border-width) 0;
}
.table-bordered > :not(caption) > * > * {
  border-width: 0 var(--bs-border-width);
}

.table-borderless > :not(caption) > * > * {
  border-bottom-width: 0;
}
.table-borderless > :not(:first-child) {
  border-top-width: 0;
}

.table-striped > tbody > tr:nth-of-type(odd) > * {
  --bs-table-color-type: var(--bs-table-striped-color);
  --bs-table-bg-type: var(--bs-table-striped-bg);
}

.table-striped-columns > :not(caption) > tr > :nth-child(even) {
  --bs-table-color-type: var(--bs-table-striped-color);
  --bs-table-bg-type: var(--bs-table-striped-bg);
}

.table-active {
  --bs-table-color-state: var(--bs-table-active-color);
  --bs-table-bg-state: var(--bs-table-active-bg);
}

.table-hover > tbody > tr:hover > * {
  --bs-table-color-state: var(--bs-table-hover-color);
  --bs-table-bg-state: var(--bs-table-hover-bg);
}

.table-primary {
  --bs-table-color: #000;
  --bs-table-bg: #cfe2ff;
  --bs-table-border-color: #a6b5cc;
  --bs-table-striped-bg: #c5d7f2;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #bacbe6;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #bfd1ec;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-secondary {
  --bs-table-color: #000;
  --bs-table-bg: #e2e3e5;
  --bs-table-border-color: #b5b6b7;
  --bs-table-striped-bg: #d7d8da;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #cbccce;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #d1d2d4;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-success {
  --bs-table-color: #000;
  --bs-table-bg: #d1e7dd;
  --bs-table-border-color: #a7b9b1;
  --bs-table-striped-bg: #c7dbd2;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #bcd0c7;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #c1d6cc;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-info {
  --bs-table-color: #000;
  --bs-table-bg: #cff4fc;
  --bs-table-border-color: #a6c3ca;
  --bs-table-striped-bg: #c5e8ef;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #badce3;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #bfe2e9;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-warning {
  --bs-table-color: #000;
  --bs-table-bg: #fff3cd;
  --bs-table-border-color: #ccc2a4;
  --bs-table-striped-bg: #f2e7c3;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #e6dbb9;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #ece1be;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-danger {
  --bs-table-color: #000;
  --bs-table-bg: #f8d7da;
  --bs-table-border-color: #c6acae;
  --bs-table-striped-bg: #eccccf;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #dfc2c4;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #e5c7ca;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-light {
  --bs-table-color: #000;
  --bs-table-bg: #f8f9fa;
  --bs-table-border-color: #c6c7c8;
  --bs-table-striped-bg: #ecedee;
  --bs-table-striped-color: #000;
  --bs-table-active-bg: #dfe0e1;
  --bs-table-active-color: #000;
  --bs-table-hover-bg: #e5e6e7;
  --bs-table-hover-color: #000;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-dark {
  --bs-table-color: #fff;
  --bs-table-bg: #212529;
  --bs-table-border-color: #4d5154;
  --bs-table-striped-bg: #2c3034;
  --bs-table-striped-color: #fff;
  --bs-table-active-bg: #373b3e;
  --bs-table-active-color: #fff;
  --bs-table-hover-bg: #323539;
  --bs-table-hover-color: #fff;
  color: var(--bs-table-color);
  border-color: var(--bs-table-border-color);
}

.table-responsive {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

@media (max-width: 575.98px) {
  .table-responsive-sm {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 767.98px) {
  .table-responsive-md {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 991.98px) {
  .table-responsive-lg {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 1199.98px) {
  .table-responsive-xl {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
@media (max-width: 1399.98px) {
  .table-responsive-xxl {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}
.form-label {
  margin-bottom: 0.5rem;
}

.col-form-label {
  padding-top: calc(0.375rem + var(--bs-border-width));
  padding-bottom: calc(0.375rem + var(--bs-border-width));
  margin-bottom: 0;
  font-size: inherit;
  line-height: 1.5;
}

.col-form-label-lg {
  padding-top: calc(0.5rem + var(--bs-border-width));
  padding-bottom: calc(0.5rem + var(--bs-border-width));
  font-size: 1.25rem;
}

.col-form-label-sm {
  padding-top: calc(0.25rem + var(--bs-border-width));
  padding-bottom: calc(0.25rem + var(--bs-border-width));
  font-size: 0.875rem;
}

.form-text {
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-secondary-color);
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-body-bg);
  background-clip: padding-box;
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-control {
    transition: none;
  }
}
.form-control[type=file] {
  overflow: hidden;
}
.form-control[type=file]:not(:disabled):not([readonly]) {
  cursor: pointer;
}
.form-control:focus {
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.form-control::-webkit-date-and-time-value {
  min-width: 85px;
  height: 1.5em;
  margin: 0;
}
.form-control::-webkit-datetime-edit {
  display: block;
  padding: 0;
}
.form-control::-moz-placeholder {
  color: var(--bs-secondary-color);
  opacity: 1;
}
.form-control::placeholder {
  color: var(--bs-secondary-color);
  opacity: 1;
}
.form-control:disabled {
  background-color: var(--bs-secondary-bg);
  opacity: 1;
}
.form-control::-webkit-file-upload-button {
  padding: 0.375rem 0.75rem;
  margin: -0.375rem -0.75rem;
  -webkit-margin-end: 0.75rem;
  margin-inline-end: 0.75rem;
  color: var(--bs-body-color);
  background-color: var(--bs-tertiary-bg);
  pointer-events: none;
  border-color: inherit;
  border-style: solid;
  border-width: 0;
  border-inline-end-width: var(--bs-border-width);
  border-radius: 0;
  -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.form-control::file-selector-button {
  padding: 0.375rem 0.75rem;
  margin: -0.375rem -0.75rem;
  -webkit-margin-end: 0.75rem;
  margin-inline-end: 0.75rem;
  color: var(--bs-body-color);
  background-color: var(--bs-tertiary-bg);
  pointer-events: none;
  border-color: inherit;
  border-style: solid;
  border-width: 0;
  border-inline-end-width: var(--bs-border-width);
  border-radius: 0;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-control::-webkit-file-upload-button {
    -webkit-transition: none;
    transition: none;
  }
  .form-control::file-selector-button {
    transition: none;
  }
}
.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
  background-color: var(--bs-secondary-bg);
}
.form-control:hover:not(:disabled):not([readonly])::file-selector-button {
  background-color: var(--bs-secondary-bg);
}

.form-control-plaintext {
  display: block;
  width: 100%;
  padding: 0.375rem 0;
  margin-bottom: 0;
  line-height: 1.5;
  color: var(--bs-body-color);
  background-color: transparent;
  border: solid transparent;
  border-width: var(--bs-border-width) 0;
}
.form-control-plaintext:focus {
  outline: 0;
}
.form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {
  padding-right: 0;
  padding-left: 0;
}

.form-control-sm {
  min-height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}
.form-control-sm::-webkit-file-upload-button {
  padding: 0.25rem 0.5rem;
  margin: -0.25rem -0.5rem;
  -webkit-margin-end: 0.5rem;
  margin-inline-end: 0.5rem;
}
.form-control-sm::file-selector-button {
  padding: 0.25rem 0.5rem;
  margin: -0.25rem -0.5rem;
  -webkit-margin-end: 0.5rem;
  margin-inline-end: 0.5rem;
}

.form-control-lg {
  min-height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}
.form-control-lg::-webkit-file-upload-button {
  padding: 0.5rem 1rem;
  margin: -0.5rem -1rem;
  -webkit-margin-end: 1rem;
  margin-inline-end: 1rem;
}
.form-control-lg::file-selector-button {
  padding: 0.5rem 1rem;
  margin: -0.5rem -1rem;
  -webkit-margin-end: 1rem;
  margin-inline-end: 1rem;
}

textarea.form-control {
  min-height: calc(1.5em + 0.75rem + calc(var(--bs-border-width) * 2));
}
textarea.form-control-sm {
  min-height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
}
textarea.form-control-lg {
  min-height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
}

.form-control-color {
  width: 3rem;
  height: calc(1.5em + 0.75rem + calc(var(--bs-border-width) * 2));
  padding: 0.375rem;
}
.form-control-color:not(:disabled):not([readonly]) {
  cursor: pointer;
}
.form-control-color::-moz-color-swatch {
  border: 0 !important;
  border-radius: var(--bs-border-radius);
}
.form-control-color::-webkit-color-swatch {
  border: 0 !important;
  border-radius: var(--bs-border-radius);
}
.form-control-color.form-control-sm {
  height: calc(1.5em + 0.5rem + calc(var(--bs-border-width) * 2));
}
.form-control-color.form-control-lg {
  height: calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));
}

.form-select {
  --bs-form-select-bg-img: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
  display: block;
  width: 100%;
  padding: 0.375rem 2.25rem 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-body-bg);
  background-image: var(--bs-form-select-bg-img), var(--bs-form-select-bg-icon, none);
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 16px 12px;
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-select {
    transition: none;
  }
}
.form-select:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.form-select[multiple], .form-select[size]:not([size="1"]) {
  padding-right: 0.75rem;
  background-image: none;
}
.form-select:disabled {
  background-color: var(--bs-secondary-bg);
}
.form-select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--bs-body-color);
}

.form-select-sm {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-left: 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}

.form-select-lg {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}

[data-bs-theme=dark] .form-select {
  --bs-form-select-bg-img: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23dee2e6' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
}

.form-check {
  display: block;
  min-height: 1.5rem;
  padding-left: 1.5em;
  margin-bottom: 0.125rem;
}
.form-check .form-check-input {
  float: left;
  margin-left: -1.5em;
}

.form-check-reverse {
  padding-right: 1.5em;
  padding-left: 0;
  text-align: right;
}
.form-check-reverse .form-check-input {
  float: right;
  margin-right: -1.5em;
  margin-left: 0;
}

.form-check-input {
  --bs-form-check-bg: var(--bs-body-bg);
  flex-shrink: 0;
  width: 1em;
  height: 1em;
  margin-top: 0.25em;
  vertical-align: top;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--bs-form-check-bg);
  background-image: var(--bs-form-check-bg-image);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: var(--bs-border-width) solid var(--bs-border-color);
  -webkit-print-color-adjust: exact;
  color-adjust: exact;
  print-color-adjust: exact;
}
.form-check-input[type=checkbox] {
  border-radius: 0.25em;
}
.form-check-input[type=radio] {
  border-radius: 50%;
}
.form-check-input:active {
  filter: brightness(90%);
}
.form-check-input:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.form-check-input:checked {
  background-color: #0d6efd;
  border-color: #0d6efd;
}
.form-check-input:checked[type=checkbox] {
  --bs-form-check-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
}
.form-check-input:checked[type=radio] {
  --bs-form-check-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
}
.form-check-input[type=checkbox]:indeterminate {
  background-color: #0d6efd;
  border-color: #0d6efd;
  --bs-form-check-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
}
.form-check-input:disabled {
  pointer-events: none;
  filter: none;
  opacity: 0.5;
}
.form-check-input[disabled] ~ .form-check-label, .form-check-input:disabled ~ .form-check-label {
  cursor: default;
  opacity: 0.5;
}

.form-switch {
  padding-left: 2.5em;
}
.form-switch .form-check-input {
  --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
  width: 2em;
  margin-left: -2.5em;
  background-image: var(--bs-form-switch-bg);
  background-position: left center;
  border-radius: 2em;
  transition: background-position 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-switch .form-check-input {
    transition: none;
  }
}
.form-switch .form-check-input:focus {
  --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e");
}
.form-switch .form-check-input:checked {
  background-position: right center;
  --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
}
.form-switch.form-check-reverse {
  padding-right: 2.5em;
  padding-left: 0;
}
.form-switch.form-check-reverse .form-check-input {
  margin-right: -2.5em;
  margin-left: 0;
}

.form-check-inline {
  display: inline-block;
  margin-right: 1rem;
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}
.btn-check[disabled] + .btn, .btn-check:disabled + .btn {
  pointer-events: none;
  filter: none;
  opacity: 0.65;
}

[data-bs-theme=dark] .form-switch .form-check-input:not(:checked):not(:focus) {
  --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%28255, 255, 255, 0.25%29'/%3e%3c/svg%3e");
}

.form-range {
  width: 100%;
  height: 1.5rem;
  padding: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: transparent;
}
.form-range:focus {
  outline: 0;
}
.form-range:focus::-webkit-slider-thumb {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.form-range:focus::-moz-range-thumb {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.form-range::-moz-focus-outer {
  border: 0;
}
.form-range::-webkit-slider-thumb {
  width: 1rem;
  height: 1rem;
  margin-top: -0.25rem;
  -webkit-appearance: none;
  appearance: none;
  background-color: #0d6efd;
  border: 0;
  border-radius: 1rem;
  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-range::-webkit-slider-thumb {
    -webkit-transition: none;
    transition: none;
  }
}
.form-range::-webkit-slider-thumb:active {
  background-color: #b6d4fe;
}
.form-range::-webkit-slider-runnable-track {
  width: 100%;
  height: 0.5rem;
  color: transparent;
  cursor: pointer;
  background-color: var(--bs-secondary-bg);
  border-color: transparent;
  border-radius: 1rem;
}
.form-range::-moz-range-thumb {
  width: 1rem;
  height: 1rem;
  -moz-appearance: none;
  appearance: none;
  background-color: #0d6efd;
  border: 0;
  border-radius: 1rem;
  -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-range::-moz-range-thumb {
    -moz-transition: none;
    transition: none;
  }
}
.form-range::-moz-range-thumb:active {
  background-color: #b6d4fe;
}
.form-range::-moz-range-track {
  width: 100%;
  height: 0.5rem;
  color: transparent;
  cursor: pointer;
  background-color: var(--bs-secondary-bg);
  border-color: transparent;
  border-radius: 1rem;
}
.form-range:disabled {
  pointer-events: none;
}
.form-range:disabled::-webkit-slider-thumb {
  background-color: var(--bs-secondary-color);
}
.form-range:disabled::-moz-range-thumb {
  background-color: var(--bs-secondary-color);
}

.form-floating {
  position: relative;
}
.form-floating > .form-control,
.form-floating > .form-control-plaintext,
.form-floating > .form-select {
  height: calc(3.5rem + calc(var(--bs-border-width) * 2));
  min-height: calc(3.5rem + calc(var(--bs-border-width) * 2));
  line-height: 1.25;
}
.form-floating > label {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  height: 100%;
  padding: 1rem 0.75rem;
  overflow: hidden;
  text-align: start;
  text-overflow: ellipsis;
  white-space: nowrap;
  pointer-events: none;
  border: var(--bs-border-width) solid transparent;
  transform-origin: 0 0;
  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .form-floating > label {
    transition: none;
  }
}
.form-floating > .form-control,
.form-floating > .form-control-plaintext {
  padding: 1rem 0.75rem;
}
.form-floating > .form-control::-moz-placeholder, .form-floating > .form-control-plaintext::-moz-placeholder {
  color: transparent;
}
.form-floating > .form-control::placeholder,
.form-floating > .form-control-plaintext::placeholder {
  color: transparent;
}
.form-floating > .form-control:not(:-moz-placeholder-shown), .form-floating > .form-control-plaintext:not(:-moz-placeholder-shown) {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.form-floating > .form-control:focus, .form-floating > .form-control:not(:placeholder-shown),
.form-floating > .form-control-plaintext:focus,
.form-floating > .form-control-plaintext:not(:placeholder-shown) {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.form-floating > .form-control:-webkit-autofill,
.form-floating > .form-control-plaintext:-webkit-autofill {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.form-floating > .form-select {
  padding-top: 1.625rem;
  padding-bottom: 0.625rem;
}
.form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.form-floating > .form-control:focus ~ label,
.form-floating > .form-control:not(:placeholder-shown) ~ label,
.form-floating > .form-control-plaintext ~ label,
.form-floating > .form-select ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.form-floating > .form-control:not(:-moz-placeholder-shown) ~ label::after {
  position: absolute;
  inset: 1rem 0.375rem;
  z-index: -1;
  height: 1.5em;
  content: "";
  background-color: var(--bs-body-bg);
  border-radius: var(--bs-border-radius);
}
.form-floating > .form-control:focus ~ label::after,
.form-floating > .form-control:not(:placeholder-shown) ~ label::after,
.form-floating > .form-control-plaintext ~ label::after,
.form-floating > .form-select ~ label::after {
  position: absolute;
  inset: 1rem 0.375rem;
  z-index: -1;
  height: 1.5em;
  content: "";
  background-color: var(--bs-body-bg);
  border-radius: var(--bs-border-radius);
}
.form-floating > .form-control:-webkit-autofill ~ label {
  color: rgba(var(--bs-body-color-rgb), 0.65);
  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
}
.form-floating > .form-control-plaintext ~ label {
  border-width: var(--bs-border-width) 0;
}
.form-floating > :disabled ~ label,
.form-floating > .form-control:disabled ~ label {
  color: #6c757d;
}
.form-floating > :disabled ~ label::after,
.form-floating > .form-control:disabled ~ label::after {
  background-color: var(--bs-secondary-bg);
}

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  width: 100%;
}
.input-group > .form-control,
.input-group > .form-select,
.input-group > .form-floating {
  position: relative;
  flex: 1 1 auto;
  width: 1%;
  min-width: 0;
}
.input-group > .form-control:focus,
.input-group > .form-select:focus,
.input-group > .form-floating:focus-within {
  z-index: 5;
}
.input-group .btn {
  position: relative;
  z-index: 2;
}
.input-group .btn:focus {
  z-index: 5;
}

.input-group-text {
  display: flex;
  align-items: center;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
  text-align: center;
  white-space: nowrap;
  background-color: var(--bs-tertiary-bg);
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
}

.input-group-lg > .form-control,
.input-group-lg > .form-select,
.input-group-lg > .input-group-text,
.input-group-lg > .btn {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  border-radius: var(--bs-border-radius-lg);
}

.input-group-sm > .form-control,
.input-group-sm > .form-select,
.input-group-sm > .input-group-text,
.input-group-sm > .btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  border-radius: var(--bs-border-radius-sm);
}

.input-group-lg > .form-select,
.input-group-sm > .form-select {
  padding-right: 3rem;
}

.input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
.input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n+3),
.input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,
.input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.input-group.has-validation > :nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
.input-group.has-validation > .dropdown-toggle:nth-last-child(n+4),
.input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-control,
.input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-select {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
  margin-left: calc(var(--bs-border-width) * -1);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.input-group > .form-floating:not(:first-child) > .form-control,
.input-group > .form-floating:not(:first-child) > .form-select {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.valid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-form-valid-color);
}

.valid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  color: #fff;
  background-color: var(--bs-success);
  border-radius: var(--bs-border-radius);
}

.was-validated :valid ~ .valid-feedback,
.was-validated :valid ~ .valid-tooltip,
.is-valid ~ .valid-feedback,
.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .form-control:valid, .form-control.is-valid {
  border-color: var(--bs-form-valid-border-color);
  padding-right: calc(1.5em + 0.75rem);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-control:valid:focus, .form-control.is-valid:focus {
  border-color: var(--bs-form-valid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}

.was-validated textarea.form-control:valid, textarea.form-control.is-valid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}

.was-validated .form-select:valid, .form-select.is-valid {
  border-color: var(--bs-form-valid-border-color);
}
.was-validated .form-select:valid:not([multiple]):not([size]), .was-validated .form-select:valid:not([multiple])[size="1"], .form-select.is-valid:not([multiple]):not([size]), .form-select.is-valid:not([multiple])[size="1"] {
  --bs-form-select-bg-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
  padding-right: 4.125rem;
  background-position: right 0.75rem center, center right 2.25rem;
  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-select:valid:focus, .form-select.is-valid:focus {
  border-color: var(--bs-form-valid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}

.was-validated .form-control-color:valid, .form-control-color.is-valid {
  width: calc(3rem + calc(1.5em + 0.75rem));
}

.was-validated .form-check-input:valid, .form-check-input.is-valid {
  border-color: var(--bs-form-valid-border-color);
}
.was-validated .form-check-input:valid:checked, .form-check-input.is-valid:checked {
  background-color: var(--bs-form-valid-color);
}
.was-validated .form-check-input:valid:focus, .form-check-input.is-valid:focus {
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
}
.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {
  color: var(--bs-form-valid-color);
}

.form-check-inline .form-check-input ~ .valid-feedback {
  margin-left: 0.5em;
}

.was-validated .input-group > .form-control:not(:focus):valid, .input-group > .form-control:not(:focus).is-valid,
.was-validated .input-group > .form-select:not(:focus):valid,
.input-group > .form-select:not(:focus).is-valid,
.was-validated .input-group > .form-floating:not(:focus-within):valid,
.input-group > .form-floating:not(:focus-within).is-valid {
  z-index: 3;
}

.invalid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--bs-form-invalid-color);
}

.invalid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: 0.25rem 0.5rem;
  margin-top: 0.1rem;
  font-size: 0.875rem;
  color: #fff;
  background-color: var(--bs-danger);
  border-radius: var(--bs-border-radius);
}

.was-validated :invalid ~ .invalid-feedback,
.was-validated :invalid ~ .invalid-tooltip,
.is-invalid ~ .invalid-feedback,
.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .form-control:invalid, .form-control.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
  padding-right: calc(1.5em + 0.75rem);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {
  border-color: var(--bs-form-invalid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}

.was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {
  padding-right: calc(1.5em + 0.75rem);
  background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
}

.was-validated .form-select:invalid, .form-select.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
}
.was-validated .form-select:invalid:not([multiple]):not([size]), .was-validated .form-select:invalid:not([multiple])[size="1"], .form-select.is-invalid:not([multiple]):not([size]), .form-select.is-invalid:not([multiple])[size="1"] {
  --bs-form-select-bg-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
  padding-right: 4.125rem;
  background-position: right 0.75rem center, center right 2.25rem;
  background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
.was-validated .form-select:invalid:focus, .form-select.is-invalid:focus {
  border-color: var(--bs-form-invalid-border-color);
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}

.was-validated .form-control-color:invalid, .form-control-color.is-invalid {
  width: calc(3rem + calc(1.5em + 0.75rem));
}

.was-validated .form-check-input:invalid, .form-check-input.is-invalid {
  border-color: var(--bs-form-invalid-border-color);
}
.was-validated .form-check-input:invalid:checked, .form-check-input.is-invalid:checked {
  background-color: var(--bs-form-invalid-color);
}
.was-validated .form-check-input:invalid:focus, .form-check-input.is-invalid:focus {
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25);
}
.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {
  color: var(--bs-form-invalid-color);
}

.form-check-inline .form-check-input ~ .invalid-feedback {
  margin-left: 0.5em;
}

.was-validated .input-group > .form-control:not(:focus):invalid, .input-group > .form-control:not(:focus).is-invalid,
.was-validated .input-group > .form-select:not(:focus):invalid,
.input-group > .form-select:not(:focus).is-invalid,
.was-validated .input-group > .form-floating:not(:focus-within):invalid,
.input-group > .form-floating:not(:focus-within).is-invalid {
  z-index: 4;
}

.btn {
  --bs-btn-padding-x: 0.75rem;
  --bs-btn-padding-y: 0.375rem;
  --bs-btn-font-family: ;
  --bs-btn-font-size: 1rem;
  --bs-btn-font-weight: 400;
  --bs-btn-line-height: 1.5;
  --bs-btn-color: var(--bs-body-color);
  --bs-btn-bg: transparent;
  --bs-btn-border-width: var(--bs-border-width);
  --bs-btn-border-color: transparent;
  --bs-btn-border-radius: var(--bs-border-radius);
  --bs-btn-hover-border-color: transparent;
  --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
  --bs-btn-disabled-opacity: 0.65;
  --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);
  display: inline-block;
  padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);
  font-family: var(--bs-btn-font-family);
  font-size: var(--bs-btn-font-size);
  font-weight: var(--bs-btn-font-weight);
  line-height: var(--bs-btn-line-height);
  color: var(--bs-btn-color);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);
  border-radius: var(--bs-btn-border-radius);
  background-color: var(--bs-btn-bg);
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .btn {
    transition: none;
  }
}
.btn:hover {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
}
.btn-check + .btn:hover {
  color: var(--bs-btn-color);
  background-color: var(--bs-btn-bg);
  border-color: var(--bs-btn-border-color);
}
.btn:focus-visible {
  color: var(--bs-btn-hover-color);
  background-color: var(--bs-btn-hover-bg);
  border-color: var(--bs-btn-hover-border-color);
  outline: 0;
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.btn-check:focus-visible + .btn {
  border-color: var(--bs-btn-hover-border-color);
  outline: 0;
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.btn-check:checked + .btn, :not(.btn-check) + .btn:active, .btn:first-child:active, .btn.active, .btn.show {
  color: var(--bs-btn-active-color);
  background-color: var(--bs-btn-active-bg);
  border-color: var(--bs-btn-active-border-color);
}
.btn-check:checked + .btn:focus-visible, :not(.btn-check) + .btn:active:focus-visible, .btn:first-child:active:focus-visible, .btn.active:focus-visible, .btn.show:focus-visible {
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.btn-check:checked:focus-visible + .btn {
  box-shadow: var(--bs-btn-focus-box-shadow);
}
.btn:disabled, .btn.disabled, fieldset:disabled .btn {
  color: var(--bs-btn-disabled-color);
  pointer-events: none;
  background-color: var(--bs-btn-disabled-bg);
  border-color: var(--bs-btn-disabled-border-color);
  opacity: var(--bs-btn-disabled-opacity);
}

.btn-primary {
  --bs-btn-color: #fff;
  --bs-btn-bg: #0d6efd;
  --bs-btn-border-color: #0d6efd;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #0b5ed7;
  --bs-btn-hover-border-color: #0a58ca;
  --bs-btn-focus-shadow-rgb: 49, 132, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #0a58ca;
  --bs-btn-active-border-color: #0a53be;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #0d6efd;
  --bs-btn-disabled-border-color: #0d6efd;
}

.btn-secondary {
  --bs-btn-color: #fff;
  --bs-btn-bg: #6c757d;
  --bs-btn-border-color: #6c757d;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #5c636a;
  --bs-btn-hover-border-color: #565e64;
  --bs-btn-focus-shadow-rgb: 130, 138, 145;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #565e64;
  --bs-btn-active-border-color: #51585e;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #6c757d;
  --bs-btn-disabled-border-color: #6c757d;
}

.btn-success {
  --bs-btn-color: #fff;
  --bs-btn-bg: #198754;
  --bs-btn-border-color: #198754;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #157347;
  --bs-btn-hover-border-color: #146c43;
  --bs-btn-focus-shadow-rgb: 60, 153, 110;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #146c43;
  --bs-btn-active-border-color: #13653f;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #198754;
  --bs-btn-disabled-border-color: #198754;
}

.btn-info {
  --bs-btn-color: #000;
  --bs-btn-bg: #0dcaf0;
  --bs-btn-border-color: #0dcaf0;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #31d2f2;
  --bs-btn-hover-border-color: #25cff2;
  --bs-btn-focus-shadow-rgb: 11, 172, 204;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #3dd5f3;
  --bs-btn-active-border-color: #25cff2;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #0dcaf0;
  --bs-btn-disabled-border-color: #0dcaf0;
}

.btn-warning {
  --bs-btn-color: #000;
  --bs-btn-bg: #ffc107;
  --bs-btn-border-color: #ffc107;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #ffca2c;
  --bs-btn-hover-border-color: #ffc720;
  --bs-btn-focus-shadow-rgb: 217, 164, 6;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #ffcd39;
  --bs-btn-active-border-color: #ffc720;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #ffc107;
  --bs-btn-disabled-border-color: #ffc107;
}

.btn-danger {
  --bs-btn-color: #fff;
  --bs-btn-bg: #dc3545;
  --bs-btn-border-color: #dc3545;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #bb2d3b;
  --bs-btn-hover-border-color: #b02a37;
  --bs-btn-focus-shadow-rgb: 225, 83, 97;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #b02a37;
  --bs-btn-active-border-color: #a52834;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #dc3545;
  --bs-btn-disabled-border-color: #dc3545;
}

.btn-light {
  --bs-btn-color: #000;
  --bs-btn-bg: #f8f9fa;
  --bs-btn-border-color: #f8f9fa;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #d3d4d5;
  --bs-btn-hover-border-color: #c6c7c8;
  --bs-btn-focus-shadow-rgb: 211, 212, 213;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #c6c7c8;
  --bs-btn-active-border-color: #babbbc;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #000;
  --bs-btn-disabled-bg: #f8f9fa;
  --bs-btn-disabled-border-color: #f8f9fa;
}

.btn-dark {
  --bs-btn-color: #fff;
  --bs-btn-bg: #212529;
  --bs-btn-border-color: #212529;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #424649;
  --bs-btn-hover-border-color: #373b3e;
  --bs-btn-focus-shadow-rgb: 66, 70, 73;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #4d5154;
  --bs-btn-active-border-color: #373b3e;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #fff;
  --bs-btn-disabled-bg: #212529;
  --bs-btn-disabled-border-color: #212529;
}

.btn-outline-primary {
  --bs-btn-color: #0d6efd;
  --bs-btn-border-color: #0d6efd;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #0d6efd;
  --bs-btn-hover-border-color: #0d6efd;
  --bs-btn-focus-shadow-rgb: 13, 110, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #0d6efd;
  --bs-btn-active-border-color: #0d6efd;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #0d6efd;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #0d6efd;
  --bs-gradient: none;
}

.btn-outline-secondary {
  --bs-btn-color: #6c757d;
  --bs-btn-border-color: #6c757d;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #6c757d;
  --bs-btn-hover-border-color: #6c757d;
  --bs-btn-focus-shadow-rgb: 108, 117, 125;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #6c757d;
  --bs-btn-active-border-color: #6c757d;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #6c757d;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #6c757d;
  --bs-gradient: none;
}

.btn-outline-success {
  --bs-btn-color: #198754;
  --bs-btn-border-color: #198754;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #198754;
  --bs-btn-hover-border-color: #198754;
  --bs-btn-focus-shadow-rgb: 25, 135, 84;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #198754;
  --bs-btn-active-border-color: #198754;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #198754;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #198754;
  --bs-gradient: none;
}

.btn-outline-info {
  --bs-btn-color: #0dcaf0;
  --bs-btn-border-color: #0dcaf0;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #0dcaf0;
  --bs-btn-hover-border-color: #0dcaf0;
  --bs-btn-focus-shadow-rgb: 13, 202, 240;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #0dcaf0;
  --bs-btn-active-border-color: #0dcaf0;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #0dcaf0;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #0dcaf0;
  --bs-gradient: none;
}

.btn-outline-warning {
  --bs-btn-color: #ffc107;
  --bs-btn-border-color: #ffc107;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #ffc107;
  --bs-btn-hover-border-color: #ffc107;
  --bs-btn-focus-shadow-rgb: 255, 193, 7;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #ffc107;
  --bs-btn-active-border-color: #ffc107;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #ffc107;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #ffc107;
  --bs-gradient: none;
}

.btn-outline-danger {
  --bs-btn-color: #dc3545;
  --bs-btn-border-color: #dc3545;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #dc3545;
  --bs-btn-hover-border-color: #dc3545;
  --bs-btn-focus-shadow-rgb: 220, 53, 69;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #dc3545;
  --bs-btn-active-border-color: #dc3545;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #dc3545;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #dc3545;
  --bs-gradient: none;
}

.btn-outline-light {
  --bs-btn-color: #f8f9fa;
  --bs-btn-border-color: #f8f9fa;
  --bs-btn-hover-color: #000;
  --bs-btn-hover-bg: #f8f9fa;
  --bs-btn-hover-border-color: #f8f9fa;
  --bs-btn-focus-shadow-rgb: 248, 249, 250;
  --bs-btn-active-color: #000;
  --bs-btn-active-bg: #f8f9fa;
  --bs-btn-active-border-color: #f8f9fa;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #f8f9fa;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #f8f9fa;
  --bs-gradient: none;
}

.btn-outline-dark {
  --bs-btn-color: #212529;
  --bs-btn-border-color: #212529;
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: #212529;
  --bs-btn-hover-border-color: #212529;
  --bs-btn-focus-shadow-rgb: 33, 37, 41;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: #212529;
  --bs-btn-active-border-color: #212529;
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: #212529;
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: #212529;
  --bs-gradient: none;
}

.btn-link {
  --bs-btn-font-weight: 400;
  --bs-btn-color: var(--bs-link-color);
  --bs-btn-bg: transparent;
  --bs-btn-border-color: transparent;
  --bs-btn-hover-color: var(--bs-link-hover-color);
  --bs-btn-hover-border-color: transparent;
  --bs-btn-active-color: var(--bs-link-hover-color);
  --bs-btn-active-border-color: transparent;
  --bs-btn-disabled-color: #6c757d;
  --bs-btn-disabled-border-color: transparent;
  --bs-btn-box-shadow: 0 0 0 #000;
  --bs-btn-focus-shadow-rgb: 49, 132, 253;
  text-decoration: underline;
}
.btn-link:focus-visible {
  color: var(--bs-btn-color);
}
.btn-link:hover {
  color: var(--bs-btn-hover-color);
}

.btn-lg, .btn-group-lg > .btn {
  --bs-btn-padding-y: 0.5rem;
  --bs-btn-padding-x: 1rem;
  --bs-btn-font-size: 1.25rem;
  --bs-btn-border-radius: var(--bs-border-radius-lg);
}

.btn-sm, .btn-group-sm > .btn {
  --bs-btn-padding-y: 0.25rem;
  --bs-btn-padding-x: 0.5rem;
  --bs-btn-font-size: 0.875rem;
  --bs-btn-border-radius: var(--bs-border-radius-sm);
}

.fade {
  transition: opacity 0.15s linear;
}
@media (prefers-reduced-motion: reduce) {
  .fade {
    transition: none;
  }
}
.fade:not(.show) {
  opacity: 0;
}

.collapse:not(.show) {
  display: none;
}

.collapsing {
  height: 0;
  overflow: hidden;
  transition: height 0.35s ease;
}
@media (prefers-reduced-motion: reduce) {
  .collapsing {
    transition: none;
  }
}
.collapsing.collapse-horizontal {
  width: 0;
  height: auto;
  transition: width 0.35s ease;
}
@media (prefers-reduced-motion: reduce) {
  .collapsing.collapse-horizontal {
    transition: none;
  }
}

.dropup,
.dropend,
.dropdown,
.dropstart,
.dropup-center,
.dropdown-center {
  position: relative;
}

.dropdown-toggle {
  white-space: nowrap;
}
.dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid;
  border-right: 0.3em solid transparent;
  border-bottom: 0;
  border-left: 0.3em solid transparent;
}
.dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropdown-menu {
  --bs-dropdown-zindex: 1000;
  --bs-dropdown-min-width: 10rem;
  --bs-dropdown-padding-x: 0;
  --bs-dropdown-padding-y: 0.5rem;
  --bs-dropdown-spacer: 0.125rem;
  --bs-dropdown-font-size: 1rem;
  --bs-dropdown-color: var(--bs-body-color);
  --bs-dropdown-bg: var(--bs-body-bg);
  --bs-dropdown-border-color: var(--bs-border-color-translucent);
  --bs-dropdown-border-radius: var(--bs-border-radius);
  --bs-dropdown-border-width: var(--bs-border-width);
  --bs-dropdown-inner-border-radius: calc(var(--bs-border-radius) - var(--bs-border-width));
  --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
  --bs-dropdown-divider-margin-y: 0.5rem;
  --bs-dropdown-box-shadow: var(--bs-box-shadow);
  --bs-dropdown-link-color: var(--bs-body-color);
  --bs-dropdown-link-hover-color: var(--bs-body-color);
  --bs-dropdown-link-hover-bg: var(--bs-tertiary-bg);
  --bs-dropdown-link-active-color: #fff;
  --bs-dropdown-link-active-bg: #0d6efd;
  --bs-dropdown-link-disabled-color: var(--bs-tertiary-color);
  --bs-dropdown-item-padding-x: 1rem;
  --bs-dropdown-item-padding-y: 0.25rem;
  --bs-dropdown-header-color: #6c757d;
  --bs-dropdown-header-padding-x: 1rem;
  --bs-dropdown-header-padding-y: 0.5rem;
  position: absolute;
  z-index: var(--bs-dropdown-zindex);
  display: none;
  min-width: var(--bs-dropdown-min-width);
  padding: var(--bs-dropdown-padding-y) var(--bs-dropdown-padding-x);
  margin: 0;
  font-size: var(--bs-dropdown-font-size);
  color: var(--bs-dropdown-color);
  text-align: left;
  list-style: none;
  background-color: var(--bs-dropdown-bg);
  background-clip: padding-box;
  border: var(--bs-dropdown-border-width) solid var(--bs-dropdown-border-color);
  border-radius: var(--bs-dropdown-border-radius);
}
.dropdown-menu[data-bs-popper] {
  top: 100%;
  left: 0;
  margin-top: var(--bs-dropdown-spacer);
}

.dropdown-menu-start {
  --bs-position: start;
}
.dropdown-menu-start[data-bs-popper] {
  right: auto;
  left: 0;
}

.dropdown-menu-end {
  --bs-position: end;
}
.dropdown-menu-end[data-bs-popper] {
  right: 0;
  left: auto;
}

@media (min-width: 576px) {
  .dropdown-menu-sm-start {
    --bs-position: start;
  }
  .dropdown-menu-sm-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .dropdown-menu-sm-end {
    --bs-position: end;
  }
  .dropdown-menu-sm-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 768px) {
  .dropdown-menu-md-start {
    --bs-position: start;
  }
  .dropdown-menu-md-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .dropdown-menu-md-end {
    --bs-position: end;
  }
  .dropdown-menu-md-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 992px) {
  .dropdown-menu-lg-start {
    --bs-position: start;
  }
  .dropdown-menu-lg-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .dropdown-menu-lg-end {
    --bs-position: end;
  }
  .dropdown-menu-lg-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 1200px) {
  .dropdown-menu-xl-start {
    --bs-position: start;
  }
  .dropdown-menu-xl-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .dropdown-menu-xl-end {
    --bs-position: end;
  }
  .dropdown-menu-xl-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
@media (min-width: 1400px) {
  .dropdown-menu-xxl-start {
    --bs-position: start;
  }
  .dropdown-menu-xxl-start[data-bs-popper] {
    right: auto;
    left: 0;
  }
  .dropdown-menu-xxl-end {
    --bs-position: end;
  }
  .dropdown-menu-xxl-end[data-bs-popper] {
    right: 0;
    left: auto;
  }
}
.dropup .dropdown-menu[data-bs-popper] {
  top: auto;
  bottom: 100%;
  margin-top: 0;
  margin-bottom: var(--bs-dropdown-spacer);
}
.dropup .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0;
  border-right: 0.3em solid transparent;
  border-bottom: 0.3em solid;
  border-left: 0.3em solid transparent;
}
.dropup .dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropend .dropdown-menu[data-bs-popper] {
  top: 0;
  right: auto;
  left: 100%;
  margin-top: 0;
  margin-left: var(--bs-dropdown-spacer);
}
.dropend .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-right: 0;
  border-bottom: 0.3em solid transparent;
  border-left: 0.3em solid;
}
.dropend .dropdown-toggle:empty::after {
  margin-left: 0;
}
.dropend .dropdown-toggle::after {
  vertical-align: 0;
}

.dropstart .dropdown-menu[data-bs-popper] {
  top: 0;
  right: 100%;
  left: auto;
  margin-top: 0;
  margin-right: var(--bs-dropdown-spacer);
}
.dropstart .dropdown-toggle::after {
  display: inline-block;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
}
.dropstart .dropdown-toggle::after {
  display: none;
}
.dropstart .dropdown-toggle::before {
  display: inline-block;
  margin-right: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-right: 0.3em solid;
  border-bottom: 0.3em solid transparent;
}
.dropstart .dropdown-toggle:empty::after {
  margin-left: 0;
}
.dropstart .dropdown-toggle::before {
  vertical-align: 0;
}

.dropdown-divider {
  height: 0;
  margin: var(--bs-dropdown-divider-margin-y) 0;
  overflow: hidden;
  border-top: 1px solid var(--bs-dropdown-divider-bg);
  opacity: 1;
}

.dropdown-item {
  display: block;
  width: 100%;
  padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
  clear: both;
  font-weight: 400;
  color: var(--bs-dropdown-link-color);
  text-align: inherit;
  text-decoration: none;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
  border-radius: var(--bs-dropdown-item-border-radius, 0);
}
.dropdown-item:hover, .dropdown-item:focus {
  color: var(--bs-dropdown-link-hover-color);
  background-color: var(--bs-dropdown-link-hover-bg);
}
.dropdown-item.active, .dropdown-item:active {
  color: var(--bs-dropdown-link-active-color);
  text-decoration: none;
  background-color: var(--bs-dropdown-link-active-bg);
}
.dropdown-item.disabled, .dropdown-item:disabled {
  color: var(--bs-dropdown-link-disabled-color);
  pointer-events: none;
  background-color: transparent;
}

.dropdown-menu.show {
  display: block;
}

.dropdown-header {
  display: block;
  padding: var(--bs-dropdown-header-padding-y) var(--bs-dropdown-header-padding-x);
  margin-bottom: 0;
  font-size: 0.875rem;
  color: var(--bs-dropdown-header-color);
  white-space: nowrap;
}

.dropdown-item-text {
  display: block;
  padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
  color: var(--bs-dropdown-link-color);
}

.dropdown-menu-dark {
  --bs-dropdown-color: #dee2e6;
  --bs-dropdown-bg: #343a40;
  --bs-dropdown-border-color: var(--bs-border-color-translucent);
  --bs-dropdown-box-shadow: ;
  --bs-dropdown-link-color: #dee2e6;
  --bs-dropdown-link-hover-color: #fff;
  --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
  --bs-dropdown-link-hover-bg: rgba(255, 255, 255, 0.15);
  --bs-dropdown-link-active-color: #fff;
  --bs-dropdown-link-active-bg: #0d6efd;
  --bs-dropdown-link-disabled-color: #adb5bd;
  --bs-dropdown-header-color: #adb5bd;
}

.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}
.btn-group > .btn,
.btn-group-vertical > .btn {
  position: relative;
  flex: 1 1 auto;
}
.btn-group > .btn-check:checked + .btn,
.btn-group > .btn-check:focus + .btn,
.btn-group > .btn:hover,
.btn-group > .btn:focus,
.btn-group > .btn:active,
.btn-group > .btn.active,
.btn-group-vertical > .btn-check:checked + .btn,
.btn-group-vertical > .btn-check:focus + .btn,
.btn-group-vertical > .btn:hover,
.btn-group-vertical > .btn:focus,
.btn-group-vertical > .btn:active,
.btn-group-vertical > .btn.active {
  z-index: 1;
}

.btn-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
}
.btn-toolbar .input-group {
  width: auto;
}

.btn-group {
  border-radius: var(--bs-border-radius);
}
.btn-group > :not(.btn-check:first-child) + .btn,
.btn-group > .btn-group:not(:first-child) {
  margin-left: calc(var(--bs-border-width) * -1);
}
.btn-group > .btn:not(:last-child):not(.dropdown-toggle),
.btn-group > .btn.dropdown-toggle-split:first-child,
.btn-group > .btn-group:not(:last-child) > .btn {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn:nth-child(n+3),
.btn-group > :not(.btn-check) + .btn,
.btn-group > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.dropdown-toggle-split {
  padding-right: 0.5625rem;
  padding-left: 0.5625rem;
}
.dropdown-toggle-split::after, .dropup .dropdown-toggle-split::after, .dropend .dropdown-toggle-split::after {
  margin-left: 0;
}
.dropstart .dropdown-toggle-split::before {
  margin-right: 0;
}

.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {
  padding-right: 0.375rem;
  padding-left: 0.375rem;
}

.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}
.btn-group-vertical > .btn,
.btn-group-vertical > .btn-group {
  width: 100%;
}
.btn-group-vertical > .btn:not(:first-child),
.btn-group-vertical > .btn-group:not(:first-child) {
  margin-top: calc(var(--bs-border-width) * -1);
}
.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),
.btn-group-vertical > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group-vertical > .btn ~ .btn,
.btn-group-vertical > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.nav {
  --bs-nav-link-padding-x: 1rem;
  --bs-nav-link-padding-y: 0.5rem;
  --bs-nav-link-font-weight: ;
  --bs-nav-link-color: var(--bs-link-color);
  --bs-nav-link-hover-color: var(--bs-link-hover-color);
  --bs-nav-link-disabled-color: var(--bs-secondary-color);
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.nav-link {
  display: block;
  padding: var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x);
  font-size: var(--bs-nav-link-font-size);
  font-weight: var(--bs-nav-link-font-weight);
  color: var(--bs-nav-link-color);
  text-decoration: none;
  background: none;
  border: 0;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .nav-link {
    transition: none;
  }
}
.nav-link:hover, .nav-link:focus {
  color: var(--bs-nav-link-hover-color);
}
.nav-link:focus-visible {
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.nav-link.disabled, .nav-link:disabled {
  color: var(--bs-nav-link-disabled-color);
  pointer-events: none;
  cursor: default;
}

.nav-tabs {
  --bs-nav-tabs-border-width: var(--bs-border-width);
  --bs-nav-tabs-border-color: var(--bs-border-color);
  --bs-nav-tabs-border-radius: var(--bs-border-radius);
  --bs-nav-tabs-link-hover-border-color: var(--bs-secondary-bg) var(--bs-secondary-bg) var(--bs-border-color);
  --bs-nav-tabs-link-active-color: var(--bs-emphasis-color);
  --bs-nav-tabs-link-active-bg: var(--bs-body-bg);
  --bs-nav-tabs-link-active-border-color: var(--bs-border-color) var(--bs-border-color) var(--bs-body-bg);
  border-bottom: var(--bs-nav-tabs-border-width) solid var(--bs-nav-tabs-border-color);
}
.nav-tabs .nav-link {
  margin-bottom: calc(-1 * var(--bs-nav-tabs-border-width));
  border: var(--bs-nav-tabs-border-width) solid transparent;
  border-top-left-radius: var(--bs-nav-tabs-border-radius);
  border-top-right-radius: var(--bs-nav-tabs-border-radius);
}
.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {
  isolation: isolate;
  border-color: var(--bs-nav-tabs-link-hover-border-color);
}
.nav-tabs .nav-link.active,
.nav-tabs .nav-item.show .nav-link {
  color: var(--bs-nav-tabs-link-active-color);
  background-color: var(--bs-nav-tabs-link-active-bg);
  border-color: var(--bs-nav-tabs-link-active-border-color);
}
.nav-tabs .dropdown-menu {
  margin-top: calc(-1 * var(--bs-nav-tabs-border-width));
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.nav-pills {
  --bs-nav-pills-border-radius: var(--bs-border-radius);
  --bs-nav-pills-link-active-color: #fff;
  --bs-nav-pills-link-active-bg: #0d6efd;
}
.nav-pills .nav-link {
  border-radius: var(--bs-nav-pills-border-radius);
}
.nav-pills .nav-link.active,
.nav-pills .show > .nav-link {
  color: var(--bs-nav-pills-link-active-color);
  background-color: var(--bs-nav-pills-link-active-bg);
}

.nav-underline {
  --bs-nav-underline-gap: 1rem;
  --bs-nav-underline-border-width: 0.125rem;
  --bs-nav-underline-link-active-color: var(--bs-emphasis-color);
  gap: var(--bs-nav-underline-gap);
}
.nav-underline .nav-link {
  padding-right: 0;
  padding-left: 0;
  border-bottom: var(--bs-nav-underline-border-width) solid transparent;
}
.nav-underline .nav-link:hover, .nav-underline .nav-link:focus {
  border-bottom-color: currentcolor;
}
.nav-underline .nav-link.active,
.nav-underline .show > .nav-link {
  font-weight: 700;
  color: var(--bs-nav-underline-link-active-color);
  border-bottom-color: currentcolor;
}

.nav-fill > .nav-link,
.nav-fill .nav-item {
  flex: 1 1 auto;
  text-align: center;
}

.nav-justified > .nav-link,
.nav-justified .nav-item {
  flex-basis: 0;
  flex-grow: 1;
  text-align: center;
}

.nav-fill .nav-item .nav-link,
.nav-justified .nav-item .nav-link {
  width: 100%;
}

.tab-content > .tab-pane {
  display: none;
}
.tab-content > .active {
  display: block;
}

.navbar {
  --bs-navbar-padding-x: 0;
  --bs-navbar-padding-y: 0.5rem;
  --bs-navbar-color: rgba(var(--bs-emphasis-color-rgb), 0.65);
  --bs-navbar-hover-color: rgba(var(--bs-emphasis-color-rgb), 0.8);
  --bs-navbar-disabled-color: rgba(var(--bs-emphasis-color-rgb), 0.3);
  --bs-navbar-active-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-brand-padding-y: 0.3125rem;
  --bs-navbar-brand-margin-end: 1rem;
  --bs-navbar-brand-font-size: 1.25rem;
  --bs-navbar-brand-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-brand-hover-color: rgba(var(--bs-emphasis-color-rgb), 1);
  --bs-navbar-nav-link-padding-x: 0.5rem;
  --bs-navbar-toggler-padding-y: 0.25rem;
  --bs-navbar-toggler-padding-x: 0.75rem;
  --bs-navbar-toggler-font-size: 1.25rem;
  --bs-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2833, 37, 41, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
  --bs-navbar-toggler-border-color: rgba(var(--bs-emphasis-color-rgb), 0.15);
  --bs-navbar-toggler-border-radius: var(--bs-border-radius);
  --bs-navbar-toggler-focus-width: 0.25rem;
  --bs-navbar-toggler-transition: box-shadow 0.15s ease-in-out;
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  padding: var(--bs-navbar-padding-y) var(--bs-navbar-padding-x);
}
.navbar > .container,
.navbar > .container-fluid,
.navbar > .container-sm,
.navbar > .container-md,
.navbar > .container-lg,
.navbar > .container-xl,
.navbar > .container-xxl {
  display: flex;
  flex-wrap: inherit;
  align-items: center;
  justify-content: space-between;
}
.navbar-brand {
  padding-top: var(--bs-navbar-brand-padding-y);
  padding-bottom: var(--bs-navbar-brand-padding-y);
  margin-right: var(--bs-navbar-brand-margin-end);
  font-size: var(--bs-navbar-brand-font-size);
  color: var(--bs-navbar-brand-color);
  text-decoration: none;
  white-space: nowrap;
}
.navbar-brand:hover, .navbar-brand:focus {
  color: var(--bs-navbar-brand-hover-color);
}

.navbar-nav {
  --bs-nav-link-padding-x: 0;
  --bs-nav-link-padding-y: 0.5rem;
  --bs-nav-link-font-weight: ;
  --bs-nav-link-color: var(--bs-navbar-color);
  --bs-nav-link-hover-color: var(--bs-navbar-hover-color);
  --bs-nav-link-disabled-color: var(--bs-navbar-disabled-color);
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}
.navbar-nav .nav-link.active, .navbar-nav .nav-link.show {
  color: var(--bs-navbar-active-color);
}
.navbar-nav .dropdown-menu {
  position: static;
}

.navbar-text {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--bs-navbar-color);
}
.navbar-text a,
.navbar-text a:hover,
.navbar-text a:focus {
  color: var(--bs-navbar-active-color);
}

.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  align-items: center;
}

.navbar-toggler {
  padding: var(--bs-navbar-toggler-padding-y) var(--bs-navbar-toggler-padding-x);
  font-size: var(--bs-navbar-toggler-font-size);
  line-height: 1;
  color: var(--bs-navbar-color);
  background-color: transparent;
  border: var(--bs-border-width) solid var(--bs-navbar-toggler-border-color);
  border-radius: var(--bs-navbar-toggler-border-radius);
  transition: var(--bs-navbar-toggler-transition);
}
@media (prefers-reduced-motion: reduce) {
  .navbar-toggler {
    transition: none;
  }
}
.navbar-toggler:hover {
  text-decoration: none;
}
.navbar-toggler:focus {
  text-decoration: none;
  outline: 0;
  box-shadow: 0 0 0 var(--bs-navbar-toggler-focus-width);
}

.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  background-image: var(--bs-navbar-toggler-icon-bg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100%;
}

.navbar-nav-scroll {
  max-height: var(--bs-scroll-height, 75vh);
  overflow-y: auto;
}

@media (min-width: 576px) {
  .navbar-expand-sm {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .navbar-expand-sm .navbar-nav {
    flex-direction: row;
  }
  .navbar-expand-sm .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-sm .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .navbar-expand-sm .navbar-nav-scroll {
    overflow: visible;
  }
  .navbar-expand-sm .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .navbar-expand-sm .navbar-toggler {
    display: none;
  }
  .navbar-expand-sm .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .navbar-expand-sm .offcanvas .offcanvas-header {
    display: none;
  }
  .navbar-expand-sm .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 768px) {
  .navbar-expand-md {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .navbar-expand-md .navbar-nav {
    flex-direction: row;
  }
  .navbar-expand-md .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-md .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .navbar-expand-md .navbar-nav-scroll {
    overflow: visible;
  }
  .navbar-expand-md .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .navbar-expand-md .navbar-toggler {
    display: none;
  }
  .navbar-expand-md .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .navbar-expand-md .offcanvas .offcanvas-header {
    display: none;
  }
  .navbar-expand-md .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 992px) {
  .navbar-expand-lg {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .navbar-expand-lg .navbar-nav {
    flex-direction: row;
  }
  .navbar-expand-lg .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-lg .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .navbar-expand-lg .navbar-nav-scroll {
    overflow: visible;
  }
  .navbar-expand-lg .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .navbar-expand-lg .navbar-toggler {
    display: none;
  }
  .navbar-expand-lg .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .navbar-expand-lg .offcanvas .offcanvas-header {
    display: none;
  }
  .navbar-expand-lg .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 1200px) {
  .navbar-expand-xl {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .navbar-expand-xl .navbar-nav {
    flex-direction: row;
  }
  .navbar-expand-xl .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-xl .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .navbar-expand-xl .navbar-nav-scroll {
    overflow: visible;
  }
  .navbar-expand-xl .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .navbar-expand-xl .navbar-toggler {
    display: none;
  }
  .navbar-expand-xl .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .navbar-expand-xl .offcanvas .offcanvas-header {
    display: none;
  }
  .navbar-expand-xl .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
@media (min-width: 1400px) {
  .navbar-expand-xxl {
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  .navbar-expand-xxl .navbar-nav {
    flex-direction: row;
  }
  .navbar-expand-xxl .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-xxl .navbar-nav .nav-link {
    padding-right: var(--bs-navbar-nav-link-padding-x);
    padding-left: var(--bs-navbar-nav-link-padding-x);
  }
  .navbar-expand-xxl .navbar-nav-scroll {
    overflow: visible;
  }
  .navbar-expand-xxl .navbar-collapse {
    display: flex !important;
    flex-basis: auto;
  }
  .navbar-expand-xxl .navbar-toggler {
    display: none;
  }
  .navbar-expand-xxl .offcanvas {
    position: static;
    z-index: auto;
    flex-grow: 1;
    width: auto !important;
    height: auto !important;
    visibility: visible !important;
    background-color: transparent !important;
    border: 0 !important;
    transform: none !important;
    transition: none;
  }
  .navbar-expand-xxl .offcanvas .offcanvas-header {
    display: none;
  }
  .navbar-expand-xxl .offcanvas .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
  }
}
.navbar-expand {
  flex-wrap: nowrap;
  justify-content: flex-start;
}
.navbar-expand .navbar-nav {
  flex-direction: row;
}
.navbar-expand .navbar-nav .dropdown-menu {
  position: absolute;
}
.navbar-expand .navbar-nav .nav-link {
  padding-right: var(--bs-navbar-nav-link-padding-x);
  padding-left: var(--bs-navbar-nav-link-padding-x);
}
.navbar-expand .navbar-nav-scroll {
  overflow: visible;
}
.navbar-expand .navbar-collapse {
  display: flex !important;
  flex-basis: auto;
}
.navbar-expand .navbar-toggler {
  display: none;
}
.navbar-expand .offcanvas {
  position: static;
  z-index: auto;
  flex-grow: 1;
  width: auto !important;
  height: auto !important;
  visibility: visible !important;
  background-color: transparent !important;
  border: 0 !important;
  transform: none !important;
  transition: none;
}
.navbar-expand .offcanvas .offcanvas-header {
  display: none;
}
.navbar-expand .offcanvas .offcanvas-body {
  display: flex;
  flex-grow: 0;
  padding: 0;
  overflow-y: visible;
}

.navbar-dark,
.navbar[data-bs-theme=dark] {
  --bs-navbar-color: rgba(255, 255, 255, 0.55);
  --bs-navbar-hover-color: rgba(255, 255, 255, 0.75);
  --bs-navbar-disabled-color: rgba(255, 255, 255, 0.25);
  --bs-navbar-active-color: #fff;
  --bs-navbar-brand-color: #fff;
  --bs-navbar-brand-hover-color: #fff;
  --bs-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);
  --bs-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

[data-bs-theme=dark] .navbar-toggler-icon {
  --bs-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

.card {
  --bs-card-spacer-y: 1rem;
  --bs-card-spacer-x: 1rem;
  --bs-card-title-spacer-y: 0.5rem;
  --bs-card-title-color: ;
  --bs-card-subtitle-color: ;
  --bs-card-border-width: var(--bs-border-width);
  --bs-card-border-color: var(--bs-border-color-translucent);
  --bs-card-border-radius: var(--bs-border-radius);
  --bs-card-box-shadow: ;
  --bs-card-inner-border-radius: calc(var(--bs-border-radius) - (var(--bs-border-width)));
  --bs-card-cap-padding-y: 0.5rem;
  --bs-card-cap-padding-x: 1rem;
  --bs-card-cap-bg: rgba(var(--bs-body-color-rgb), 0.03);
  --bs-card-cap-color: ;
  --bs-card-height: ;
  --bs-card-color: ;
  --bs-card-bg: var(--bs-body-bg);
  --bs-card-img-overlay-padding: 1rem;
  --bs-card-group-margin: 0.75rem;
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  height: var(--bs-card-height);
  color: var(--bs-body-color);
  word-wrap: break-word;
  background-color: var(--bs-card-bg);
  background-clip: border-box;
  border: var(--bs-card-border-width) solid var(--bs-card-border-color);
  border-radius: var(--bs-card-border-radius);
}
.card > hr {
  margin-right: 0;
  margin-left: 0;
}
.card > .list-group {
  border-top: inherit;
  border-bottom: inherit;
}
.card > .list-group:first-child {
  border-top-width: 0;
  border-top-left-radius: var(--bs-card-inner-border-radius);
  border-top-right-radius: var(--bs-card-inner-border-radius);
}
.card > .list-group:last-child {
  border-bottom-width: 0;
  border-bottom-right-radius: var(--bs-card-inner-border-radius);
  border-bottom-left-radius: var(--bs-card-inner-border-radius);
}
.card > .card-header + .list-group,
.card > .list-group + .card-footer {
  border-top: 0;
}

.card-body {
  flex: 1 1 auto;
  padding: var(--bs-card-spacer-y) var(--bs-card-spacer-x);
  color: var(--bs-card-color);
}

.card-title {
  margin-bottom: var(--bs-card-title-spacer-y);
  color: var(--bs-card-title-color);
}

.card-subtitle {
  margin-top: calc(-0.5 * var(--bs-card-title-spacer-y));
  margin-bottom: 0;
  color: var(--bs-card-subtitle-color);
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link + .card-link {
  margin-left: var(--bs-card-spacer-x);
}

.card-header {
  padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
  margin-bottom: 0;
  color: var(--bs-card-cap-color);
  background-color: var(--bs-card-cap-bg);
  border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);
}
.card-header:first-child {
  border-radius: var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius) 0 0;
}

.card-footer {
  padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
  color: var(--bs-card-cap-color);
  background-color: var(--bs-card-cap-bg);
  border-top: var(--bs-card-border-width) solid var(--bs-card-border-color);
}
.card-footer:last-child {
  border-radius: 0 0 var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius);
}

.card-header-tabs {
  margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
  margin-bottom: calc(-1 * var(--bs-card-cap-padding-y));
  margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
  border-bottom: 0;
}
.card-header-tabs .nav-link.active {
  background-color: var(--bs-card-bg);
  border-bottom-color: var(--bs-card-bg);
}

.card-header-pills {
  margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
  margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
}

.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: var(--bs-card-img-overlay-padding);
  border-radius: var(--bs-card-inner-border-radius);
}

.card-img,
.card-img-top,
.card-img-bottom {
  width: 100%;
}

.card-img,
.card-img-top {
  border-top-left-radius: var(--bs-card-inner-border-radius);
  border-top-right-radius: var(--bs-card-inner-border-radius);
}

.card-img,
.card-img-bottom {
  border-bottom-right-radius: var(--bs-card-inner-border-radius);
  border-bottom-left-radius: var(--bs-card-inner-border-radius);
}

.card-group > .card {
  margin-bottom: var(--bs-card-group-margin);
}
@media (min-width: 576px) {
  .card-group {
    display: flex;
    flex-flow: row wrap;
  }
  .card-group > .card {
    flex: 1 0 0%;
    margin-bottom: 0;
  }
  .card-group > .card + .card {
    margin-left: 0;
    border-left: 0;
  }
  .card-group > .card:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .card-group > .card:not(:last-child) .card-img-top,
  .card-group > .card:not(:last-child) .card-header {
    border-top-right-radius: 0;
  }
  .card-group > .card:not(:last-child) .card-img-bottom,
  .card-group > .card:not(:last-child) .card-footer {
    border-bottom-right-radius: 0;
  }
  .card-group > .card:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  .card-group > .card:not(:first-child) .card-img-top,
  .card-group > .card:not(:first-child) .card-header {
    border-top-left-radius: 0;
  }
  .card-group > .card:not(:first-child) .card-img-bottom,
  .card-group > .card:not(:first-child) .card-footer {
    border-bottom-left-radius: 0;
  }
}

.accordion {
  --bs-accordion-color: var(--bs-body-color);
  --bs-accordion-bg: var(--bs-body-bg);
  --bs-accordion-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;
  --bs-accordion-border-color: var(--bs-border-color);
  --bs-accordion-border-width: var(--bs-border-width);
  --bs-accordion-border-radius: var(--bs-border-radius);
  --bs-accordion-inner-border-radius: calc(var(--bs-border-radius) - (var(--bs-border-width)));
  --bs-accordion-btn-padding-x: 1.25rem;
  --bs-accordion-btn-padding-y: 1rem;
  --bs-accordion-btn-color: var(--bs-body-color);
  --bs-accordion-btn-bg: var(--bs-accordion-bg);
  --bs-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='none' stroke='%23212529' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M2 5L8 11L14 5'/%3e%3c/svg%3e");
  --bs-accordion-btn-icon-width: 1.25rem;
  --bs-accordion-btn-icon-transform: rotate(-180deg);
  --bs-accordion-btn-icon-transition: transform 0.2s ease-in-out;
  --bs-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='none' stroke='%23052c65' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M2 5L8 11L14 5'/%3e%3c/svg%3e");
  --bs-accordion-btn-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-accordion-body-padding-x: 1.25rem;
  --bs-accordion-body-padding-y: 1rem;
  --bs-accordion-active-color: var(--bs-primary-text-emphasis);
  --bs-accordion-active-bg: var(--bs-primary-bg-subtle);
}

.accordion-button {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding: var(--bs-accordion-btn-padding-y) var(--bs-accordion-btn-padding-x);
  font-size: 1rem;
  color: var(--bs-accordion-btn-color);
  text-align: left;
  background-color: var(--bs-accordion-btn-bg);
  border: 0;
  border-radius: 0;
  overflow-anchor: none;
  transition: var(--bs-accordion-transition);
}
@media (prefers-reduced-motion: reduce) {
  .accordion-button {
    transition: none;
  }
}
.accordion-button:not(.collapsed) {
  color: var(--bs-accordion-active-color);
  background-color: var(--bs-accordion-active-bg);
  box-shadow: inset 0 calc(-1 * var(--bs-accordion-border-width)) 0 var(--bs-accordion-border-color);
}
.accordion-button:not(.collapsed)::after {
  background-image: var(--bs-accordion-btn-active-icon);
  transform: var(--bs-accordion-btn-icon-transform);
}
.accordion-button::after {
  flex-shrink: 0;
  width: var(--bs-accordion-btn-icon-width);
  height: var(--bs-accordion-btn-icon-width);
  margin-left: auto;
  content: "";
  background-image: var(--bs-accordion-btn-icon);
  background-repeat: no-repeat;
  background-size: var(--bs-accordion-btn-icon-width);
  transition: var(--bs-accordion-btn-icon-transition);
}
@media (prefers-reduced-motion: reduce) {
  .accordion-button::after {
    transition: none;
  }
}
.accordion-button:hover {
  z-index: 2;
}
.accordion-button:focus {
  z-index: 3;
  outline: 0;
  box-shadow: var(--bs-accordion-btn-focus-box-shadow);
}

.accordion-header {
  margin-bottom: 0;
}

.accordion-item {
  color: var(--bs-accordion-color);
  background-color: var(--bs-accordion-bg);
  border: var(--bs-accordion-border-width) solid var(--bs-accordion-border-color);
}
.accordion-item:first-of-type {
  border-top-left-radius: var(--bs-accordion-border-radius);
  border-top-right-radius: var(--bs-accordion-border-radius);
}
.accordion-item:first-of-type > .accordion-header .accordion-button {
  border-top-left-radius: var(--bs-accordion-inner-border-radius);
  border-top-right-radius: var(--bs-accordion-inner-border-radius);
}
.accordion-item:not(:first-of-type) {
  border-top: 0;
}
.accordion-item:last-of-type {
  border-bottom-right-radius: var(--bs-accordion-border-radius);
  border-bottom-left-radius: var(--bs-accordion-border-radius);
}
.accordion-item:last-of-type > .accordion-header .accordion-button.collapsed {
  border-bottom-right-radius: var(--bs-accordion-inner-border-radius);
  border-bottom-left-radius: var(--bs-accordion-inner-border-radius);
}
.accordion-item:last-of-type > .accordion-collapse {
  border-bottom-right-radius: var(--bs-accordion-border-radius);
  border-bottom-left-radius: var(--bs-accordion-border-radius);
}

.accordion-body {
  padding: var(--bs-accordion-body-padding-y) var(--bs-accordion-body-padding-x);
}

.accordion-flush > .accordion-item {
  border-right: 0;
  border-left: 0;
  border-radius: 0;
}
.accordion-flush > .accordion-item:first-child {
  border-top: 0;
}
.accordion-flush > .accordion-item:last-child {
  border-bottom: 0;
}
.accordion-flush > .accordion-item > .accordion-header .accordion-button, .accordion-flush > .accordion-item > .accordion-header .accordion-button.collapsed {
  border-radius: 0;
}
.accordion-flush > .accordion-item > .accordion-collapse {
  border-radius: 0;
}

[data-bs-theme=dark] .accordion-button::after {
  --bs-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%236ea8fe'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
  --bs-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%236ea8fe'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
}

.breadcrumb {
  --bs-breadcrumb-padding-x: 0;
  --bs-breadcrumb-padding-y: 0;
  --bs-breadcrumb-margin-bottom: 1rem;
  --bs-breadcrumb-bg: ;
  --bs-breadcrumb-border-radius: ;
  --bs-breadcrumb-divider-color: var(--bs-secondary-color);
  --bs-breadcrumb-item-padding-x: 0.5rem;
  --bs-breadcrumb-item-active-color: var(--bs-secondary-color);
  display: flex;
  flex-wrap: wrap;
  padding: var(--bs-breadcrumb-padding-y) var(--bs-breadcrumb-padding-x);
  margin-bottom: var(--bs-breadcrumb-margin-bottom);
  font-size: var(--bs-breadcrumb-font-size);
  list-style: none;
  background-color: var(--bs-breadcrumb-bg);
  border-radius: var(--bs-breadcrumb-border-radius);
}

.breadcrumb-item + .breadcrumb-item {
  padding-left: var(--bs-breadcrumb-item-padding-x);
}
.breadcrumb-item + .breadcrumb-item::before {
  float: left;
  padding-right: var(--bs-breadcrumb-item-padding-x);
  color: var(--bs-breadcrumb-divider-color);
  content: var(--bs-breadcrumb-divider, "/") /* rtl: var(--bs-breadcrumb-divider, "/") */;
}
.breadcrumb-item.active {
  color: var(--bs-breadcrumb-item-active-color);
}

.pagination {
  --bs-pagination-padding-x: 0.75rem;
  --bs-pagination-padding-y: 0.375rem;
  --bs-pagination-font-size: 1rem;
  --bs-pagination-color: var(--bs-link-color);
  --bs-pagination-bg: var(--bs-body-bg);
  --bs-pagination-border-width: var(--bs-border-width);
  --bs-pagination-border-color: var(--bs-border-color);
  --bs-pagination-border-radius: var(--bs-border-radius);
  --bs-pagination-hover-color: var(--bs-link-hover-color);
  --bs-pagination-hover-bg: var(--bs-tertiary-bg);
  --bs-pagination-hover-border-color: var(--bs-border-color);
  --bs-pagination-focus-color: var(--bs-link-hover-color);
  --bs-pagination-focus-bg: var(--bs-secondary-bg);
  --bs-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-pagination-active-color: #fff;
  --bs-pagination-active-bg: #0d6efd;
  --bs-pagination-active-border-color: #0d6efd;
  --bs-pagination-disabled-color: var(--bs-secondary-color);
  --bs-pagination-disabled-bg: var(--bs-secondary-bg);
  --bs-pagination-disabled-border-color: var(--bs-border-color);
  display: flex;
  padding-left: 0;
  list-style: none;
}

.page-link {
  position: relative;
  display: block;
  padding: var(--bs-pagination-padding-y) var(--bs-pagination-padding-x);
  font-size: var(--bs-pagination-font-size);
  color: var(--bs-pagination-color);
  text-decoration: none;
  background-color: var(--bs-pagination-bg);
  border: var(--bs-pagination-border-width) solid var(--bs-pagination-border-color);
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .page-link {
    transition: none;
  }
}
.page-link:hover {
  z-index: 2;
  color: var(--bs-pagination-hover-color);
  background-color: var(--bs-pagination-hover-bg);
  border-color: var(--bs-pagination-hover-border-color);
}
.page-link:focus {
  z-index: 3;
  color: var(--bs-pagination-focus-color);
  background-color: var(--bs-pagination-focus-bg);
  outline: 0;
  box-shadow: var(--bs-pagination-focus-box-shadow);
}
.page-link.active, .active > .page-link {
  z-index: 3;
  color: var(--bs-pagination-active-color);
  background-color: var(--bs-pagination-active-bg);
  border-color: var(--bs-pagination-active-border-color);
}
.page-link.disabled, .disabled > .page-link {
  color: var(--bs-pagination-disabled-color);
  pointer-events: none;
  background-color: var(--bs-pagination-disabled-bg);
  border-color: var(--bs-pagination-disabled-border-color);
}

.page-item:not(:first-child) .page-link {
  margin-left: calc(var(--bs-border-width) * -1);
}
.page-item:first-child .page-link {
  border-top-left-radius: var(--bs-pagination-border-radius);
  border-bottom-left-radius: var(--bs-pagination-border-radius);
}
.page-item:last-child .page-link {
  border-top-right-radius: var(--bs-pagination-border-radius);
  border-bottom-right-radius: var(--bs-pagination-border-radius);
}

.pagination-lg {
  --bs-pagination-padding-x: 1.5rem;
  --bs-pagination-padding-y: 0.75rem;
  --bs-pagination-font-size: 1.25rem;
  --bs-pagination-border-radius: var(--bs-border-radius-lg);
}

.pagination-sm {
  --bs-pagination-padding-x: 0.5rem;
  --bs-pagination-padding-y: 0.25rem;
  --bs-pagination-font-size: 0.875rem;
  --bs-pagination-border-radius: var(--bs-border-radius-sm);
}

.badge {
  --bs-badge-padding-x: 0.65em;
  --bs-badge-padding-y: 0.35em;
  --bs-badge-font-size: 0.75em;
  --bs-badge-font-weight: 700;
  --bs-badge-color: #fff;
  --bs-badge-border-radius: var(--bs-border-radius);
  display: inline-block;
  padding: var(--bs-badge-padding-y) var(--bs-badge-padding-x);
  font-size: var(--bs-badge-font-size);
  font-weight: var(--bs-badge-font-weight);
  line-height: 1;
  color: var(--bs-badge-color);
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: var(--bs-badge-border-radius);
}
.badge:empty {
  display: none;
}

.btn .badge {
  position: relative;
  top: -1px;
}

.alert {
  --bs-alert-bg: transparent;
  --bs-alert-padding-x: 1rem;
  --bs-alert-padding-y: 1rem;
  --bs-alert-margin-bottom: 1rem;
  --bs-alert-color: inherit;
  --bs-alert-border-color: transparent;
  --bs-alert-border: var(--bs-border-width) solid var(--bs-alert-border-color);
  --bs-alert-border-radius: var(--bs-border-radius);
  --bs-alert-link-color: inherit;
  position: relative;
  padding: var(--bs-alert-padding-y) var(--bs-alert-padding-x);
  margin-bottom: var(--bs-alert-margin-bottom);
  color: var(--bs-alert-color);
  background-color: var(--bs-alert-bg);
  border: var(--bs-alert-border);
  border-radius: var(--bs-alert-border-radius);
}

.alert-heading {
  color: inherit;
}

.alert-link {
  font-weight: 700;
  color: var(--bs-alert-link-color);
}

.alert-dismissible {
  padding-right: 3rem;
}
.alert-dismissible .btn-close {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  padding: 1.25rem 1rem;
}

.alert-primary {
  --bs-alert-color: var(--bs-primary-text-emphasis);
  --bs-alert-bg: var(--bs-primary-bg-subtle);
  --bs-alert-border-color: var(--bs-primary-border-subtle);
  --bs-alert-link-color: var(--bs-primary-text-emphasis);
}

.alert-secondary {
  --bs-alert-color: var(--bs-secondary-text-emphasis);
  --bs-alert-bg: var(--bs-secondary-bg-subtle);
  --bs-alert-border-color: var(--bs-secondary-border-subtle);
  --bs-alert-link-color: var(--bs-secondary-text-emphasis);
}

.alert-success {
  --bs-alert-color: var(--bs-success-text-emphasis);
  --bs-alert-bg: var(--bs-success-bg-subtle);
  --bs-alert-border-color: var(--bs-success-border-subtle);
  --bs-alert-link-color: var(--bs-success-text-emphasis);
}

.alert-info {
  --bs-alert-color: var(--bs-info-text-emphasis);
  --bs-alert-bg: var(--bs-info-bg-subtle);
  --bs-alert-border-color: var(--bs-info-border-subtle);
  --bs-alert-link-color: var(--bs-info-text-emphasis);
}

.alert-warning {
  --bs-alert-color: var(--bs-warning-text-emphasis);
  --bs-alert-bg: var(--bs-warning-bg-subtle);
  --bs-alert-border-color: var(--bs-warning-border-subtle);
  --bs-alert-link-color: var(--bs-warning-text-emphasis);
}

.alert-danger {
  --bs-alert-color: var(--bs-danger-text-emphasis);
  --bs-alert-bg: var(--bs-danger-bg-subtle);
  --bs-alert-border-color: var(--bs-danger-border-subtle);
  --bs-alert-link-color: var(--bs-danger-text-emphasis);
}

.alert-light {
  --bs-alert-color: var(--bs-light-text-emphasis);
  --bs-alert-bg: var(--bs-light-bg-subtle);
  --bs-alert-border-color: var(--bs-light-border-subtle);
  --bs-alert-link-color: var(--bs-light-text-emphasis);
}

.alert-dark {
  --bs-alert-color: var(--bs-dark-text-emphasis);
  --bs-alert-bg: var(--bs-dark-bg-subtle);
  --bs-alert-border-color: var(--bs-dark-border-subtle);
  --bs-alert-link-color: var(--bs-dark-text-emphasis);
}

@keyframes progress-bar-stripes {
  0% {
    background-position-x: 1rem;
  }
}
.progress,
.progress-stacked {
  --bs-progress-height: 1rem;
  --bs-progress-font-size: 0.75rem;
  --bs-progress-bg: var(--bs-secondary-bg);
  --bs-progress-border-radius: var(--bs-border-radius);
  --bs-progress-box-shadow: var(--bs-box-shadow-inset);
  --bs-progress-bar-color: #fff;
  --bs-progress-bar-bg: #0d6efd;
  --bs-progress-bar-transition: width 0.6s ease;
  display: flex;
  height: var(--bs-progress-height);
  overflow: hidden;
  font-size: var(--bs-progress-font-size);
  background-color: var(--bs-progress-bg);
  border-radius: var(--bs-progress-border-radius);
}

.progress-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: hidden;
  color: var(--bs-progress-bar-color);
  text-align: center;
  white-space: nowrap;
  background-color: var(--bs-progress-bar-bg);
  transition: var(--bs-progress-bar-transition);
}
@media (prefers-reduced-motion: reduce) {
  .progress-bar {
    transition: none;
  }
}

.progress-bar-striped {
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-size: var(--bs-progress-height) var(--bs-progress-height);
}

.progress-stacked > .progress {
  overflow: visible;
}

.progress-stacked > .progress > .progress-bar {
  width: 100%;
}

.progress-bar-animated {
  animation: 1s linear infinite progress-bar-stripes;
}
@media (prefers-reduced-motion: reduce) {
  .progress-bar-animated {
    animation: none;
  }
}

.list-group {
  --bs-list-group-color: var(--bs-body-color);
  --bs-list-group-bg: var(--bs-body-bg);
  --bs-list-group-border-color: var(--bs-border-color);
  --bs-list-group-border-width: var(--bs-border-width);
  --bs-list-group-border-radius: var(--bs-border-radius);
  --bs-list-group-item-padding-x: 1rem;
  --bs-list-group-item-padding-y: 0.5rem;
  --bs-list-group-action-color: var(--bs-secondary-color);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-tertiary-bg);
  --bs-list-group-action-active-color: var(--bs-body-color);
  --bs-list-group-action-active-bg: var(--bs-secondary-bg);
  --bs-list-group-disabled-color: var(--bs-secondary-color);
  --bs-list-group-disabled-bg: var(--bs-body-bg);
  --bs-list-group-active-color: #fff;
  --bs-list-group-active-bg: #0d6efd;
  --bs-list-group-active-border-color: #0d6efd;
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  border-radius: var(--bs-list-group-border-radius);
}

.list-group-numbered {
  list-style-type: none;
  counter-reset: section;
}
.list-group-numbered > .list-group-item::before {
  content: counters(section, ".") ". ";
  counter-increment: section;
}

.list-group-item-action {
  width: 100%;
  color: var(--bs-list-group-action-color);
  text-align: inherit;
}
.list-group-item-action:hover, .list-group-item-action:focus {
  z-index: 1;
  color: var(--bs-list-group-action-hover-color);
  text-decoration: none;
  background-color: var(--bs-list-group-action-hover-bg);
}
.list-group-item-action:active {
  color: var(--bs-list-group-action-active-color);
  background-color: var(--bs-list-group-action-active-bg);
}

.list-group-item {
  position: relative;
  display: block;
  padding: var(--bs-list-group-item-padding-y) var(--bs-list-group-item-padding-x);
  color: var(--bs-list-group-color);
  text-decoration: none;
  background-color: var(--bs-list-group-bg);
  border: var(--bs-list-group-border-width) solid var(--bs-list-group-border-color);
}
.list-group-item:first-child {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.list-group-item:last-child {
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
.list-group-item.disabled, .list-group-item:disabled {
  color: var(--bs-list-group-disabled-color);
  pointer-events: none;
  background-color: var(--bs-list-group-disabled-bg);
}
.list-group-item.active {
  z-index: 2;
  color: var(--bs-list-group-active-color);
  background-color: var(--bs-list-group-active-bg);
  border-color: var(--bs-list-group-active-border-color);
}
.list-group-item + .list-group-item {
  border-top-width: 0;
}
.list-group-item + .list-group-item.active {
  margin-top: calc(-1 * var(--bs-list-group-border-width));
  border-top-width: var(--bs-list-group-border-width);
}

.list-group-horizontal {
  flex-direction: row;
}
.list-group-horizontal > .list-group-item:first-child:not(:last-child) {
  border-bottom-left-radius: var(--bs-list-group-border-radius);
  border-top-right-radius: 0;
}
.list-group-horizontal > .list-group-item:last-child:not(:first-child) {
  border-top-right-radius: var(--bs-list-group-border-radius);
  border-bottom-left-radius: 0;
}
.list-group-horizontal > .list-group-item.active {
  margin-top: 0;
}
.list-group-horizontal > .list-group-item + .list-group-item {
  border-top-width: var(--bs-list-group-border-width);
  border-left-width: 0;
}
.list-group-horizontal > .list-group-item + .list-group-item.active {
  margin-left: calc(-1 * var(--bs-list-group-border-width));
  border-left-width: var(--bs-list-group-border-width);
}

@media (min-width: 576px) {
  .list-group-horizontal-sm {
    flex-direction: row;
  }
  .list-group-horizontal-sm > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .list-group-horizontal-sm > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .list-group-horizontal-sm > .list-group-item.active {
    margin-top: 0;
  }
  .list-group-horizontal-sm > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .list-group-horizontal-sm > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 768px) {
  .list-group-horizontal-md {
    flex-direction: row;
  }
  .list-group-horizontal-md > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .list-group-horizontal-md > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .list-group-horizontal-md > .list-group-item.active {
    margin-top: 0;
  }
  .list-group-horizontal-md > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .list-group-horizontal-md > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 992px) {
  .list-group-horizontal-lg {
    flex-direction: row;
  }
  .list-group-horizontal-lg > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .list-group-horizontal-lg > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .list-group-horizontal-lg > .list-group-item.active {
    margin-top: 0;
  }
  .list-group-horizontal-lg > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .list-group-horizontal-lg > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 1200px) {
  .list-group-horizontal-xl {
    flex-direction: row;
  }
  .list-group-horizontal-xl > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .list-group-horizontal-xl > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .list-group-horizontal-xl > .list-group-item.active {
    margin-top: 0;
  }
  .list-group-horizontal-xl > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .list-group-horizontal-xl > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
@media (min-width: 1400px) {
  .list-group-horizontal-xxl {
    flex-direction: row;
  }
  .list-group-horizontal-xxl > .list-group-item:first-child:not(:last-child) {
    border-bottom-left-radius: var(--bs-list-group-border-radius);
    border-top-right-radius: 0;
  }
  .list-group-horizontal-xxl > .list-group-item:last-child:not(:first-child) {
    border-top-right-radius: var(--bs-list-group-border-radius);
    border-bottom-left-radius: 0;
  }
  .list-group-horizontal-xxl > .list-group-item.active {
    margin-top: 0;
  }
  .list-group-horizontal-xxl > .list-group-item + .list-group-item {
    border-top-width: var(--bs-list-group-border-width);
    border-left-width: 0;
  }
  .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {
    margin-left: calc(-1 * var(--bs-list-group-border-width));
    border-left-width: var(--bs-list-group-border-width);
  }
}
.list-group-flush {
  border-radius: 0;
}
.list-group-flush > .list-group-item {
  border-width: 0 0 var(--bs-list-group-border-width);
}
.list-group-flush > .list-group-item:last-child {
  border-bottom-width: 0;
}

.list-group-item-primary {
  --bs-list-group-color: var(--bs-primary-text-emphasis);
  --bs-list-group-bg: var(--bs-primary-bg-subtle);
  --bs-list-group-border-color: var(--bs-primary-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-primary-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-primary-border-subtle);
  --bs-list-group-active-color: var(--bs-primary-bg-subtle);
  --bs-list-group-active-bg: var(--bs-primary-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-primary-text-emphasis);
}

.list-group-item-secondary {
  --bs-list-group-color: var(--bs-secondary-text-emphasis);
  --bs-list-group-bg: var(--bs-secondary-bg-subtle);
  --bs-list-group-border-color: var(--bs-secondary-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-secondary-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-secondary-border-subtle);
  --bs-list-group-active-color: var(--bs-secondary-bg-subtle);
  --bs-list-group-active-bg: var(--bs-secondary-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-secondary-text-emphasis);
}

.list-group-item-success {
  --bs-list-group-color: var(--bs-success-text-emphasis);
  --bs-list-group-bg: var(--bs-success-bg-subtle);
  --bs-list-group-border-color: var(--bs-success-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-success-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-success-border-subtle);
  --bs-list-group-active-color: var(--bs-success-bg-subtle);
  --bs-list-group-active-bg: var(--bs-success-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-success-text-emphasis);
}

.list-group-item-info {
  --bs-list-group-color: var(--bs-info-text-emphasis);
  --bs-list-group-bg: var(--bs-info-bg-subtle);
  --bs-list-group-border-color: var(--bs-info-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-info-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-info-border-subtle);
  --bs-list-group-active-color: var(--bs-info-bg-subtle);
  --bs-list-group-active-bg: var(--bs-info-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-info-text-emphasis);
}

.list-group-item-warning {
  --bs-list-group-color: var(--bs-warning-text-emphasis);
  --bs-list-group-bg: var(--bs-warning-bg-subtle);
  --bs-list-group-border-color: var(--bs-warning-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-warning-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-warning-border-subtle);
  --bs-list-group-active-color: var(--bs-warning-bg-subtle);
  --bs-list-group-active-bg: var(--bs-warning-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-warning-text-emphasis);
}

.list-group-item-danger {
  --bs-list-group-color: var(--bs-danger-text-emphasis);
  --bs-list-group-bg: var(--bs-danger-bg-subtle);
  --bs-list-group-border-color: var(--bs-danger-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-danger-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-danger-border-subtle);
  --bs-list-group-active-color: var(--bs-danger-bg-subtle);
  --bs-list-group-active-bg: var(--bs-danger-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-danger-text-emphasis);
}

.list-group-item-light {
  --bs-list-group-color: var(--bs-light-text-emphasis);
  --bs-list-group-bg: var(--bs-light-bg-subtle);
  --bs-list-group-border-color: var(--bs-light-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-light-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-light-border-subtle);
  --bs-list-group-active-color: var(--bs-light-bg-subtle);
  --bs-list-group-active-bg: var(--bs-light-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-light-text-emphasis);
}

.list-group-item-dark {
  --bs-list-group-color: var(--bs-dark-text-emphasis);
  --bs-list-group-bg: var(--bs-dark-bg-subtle);
  --bs-list-group-border-color: var(--bs-dark-border-subtle);
  --bs-list-group-action-hover-color: var(--bs-emphasis-color);
  --bs-list-group-action-hover-bg: var(--bs-dark-border-subtle);
  --bs-list-group-action-active-color: var(--bs-emphasis-color);
  --bs-list-group-action-active-bg: var(--bs-dark-border-subtle);
  --bs-list-group-active-color: var(--bs-dark-bg-subtle);
  --bs-list-group-active-bg: var(--bs-dark-text-emphasis);
  --bs-list-group-active-border-color: var(--bs-dark-text-emphasis);
}

.btn-close {
  --bs-btn-close-color: #000;
  --bs-btn-close-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e");
  --bs-btn-close-opacity: 0.5;
  --bs-btn-close-hover-opacity: 0.75;
  --bs-btn-close-focus-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  --bs-btn-close-focus-opacity: 1;
  --bs-btn-close-disabled-opacity: 0.25;
  --bs-btn-close-white-filter: invert(1) grayscale(100%) brightness(200%);
  box-sizing: content-box;
  width: 1em;
  height: 1em;
  padding: 0.25em 0.25em;
  color: var(--bs-btn-close-color);
  background: transparent var(--bs-btn-close-bg) center/1em auto no-repeat;
  border: 0;
  border-radius: 0.375rem;
  opacity: var(--bs-btn-close-opacity);
}
.btn-close:hover {
  color: var(--bs-btn-close-color);
  text-decoration: none;
  opacity: var(--bs-btn-close-hover-opacity);
}
.btn-close:focus {
  outline: 0;
  box-shadow: var(--bs-btn-close-focus-shadow);
  opacity: var(--bs-btn-close-focus-opacity);
}
.btn-close:disabled, .btn-close.disabled {
  pointer-events: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  opacity: var(--bs-btn-close-disabled-opacity);
}

.btn-close-white {
  filter: var(--bs-btn-close-white-filter);
}

[data-bs-theme=dark] .btn-close {
  filter: var(--bs-btn-close-white-filter);
}

.toast {
  --bs-toast-zindex: 1090;
  --bs-toast-padding-x: 0.75rem;
  --bs-toast-padding-y: 0.5rem;
  --bs-toast-spacing: 1.5rem;
  --bs-toast-max-width: 350px;
  --bs-toast-font-size: 0.875rem;
  --bs-toast-color: ;
  --bs-toast-bg: rgba(var(--bs-body-bg-rgb), 0.85);
  --bs-toast-border-width: var(--bs-border-width);
  --bs-toast-border-color: var(--bs-border-color-translucent);
  --bs-toast-border-radius: var(--bs-border-radius);
  --bs-toast-box-shadow: var(--bs-box-shadow);
  --bs-toast-header-color: var(--bs-secondary-color);
  --bs-toast-header-bg: rgba(var(--bs-body-bg-rgb), 0.85);
  --bs-toast-header-border-color: var(--bs-border-color-translucent);
  width: var(--bs-toast-max-width);
  max-width: 100%;
  font-size: var(--bs-toast-font-size);
  color: var(--bs-toast-color);
  pointer-events: auto;
  background-color: var(--bs-toast-bg);
  background-clip: padding-box;
  border: var(--bs-toast-border-width) solid var(--bs-toast-border-color);
  box-shadow: var(--bs-toast-box-shadow);
  border-radius: var(--bs-toast-border-radius);
}
.toast.showing {
  opacity: 0;
}
.toast:not(.show) {
  display: none;
}

.toast-container {
  --bs-toast-zindex: 1090;
  position: absolute;
  z-index: var(--bs-toast-zindex);
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 100%;
  pointer-events: none;
}
.toast-container > :not(:last-child) {
  margin-bottom: var(--bs-toast-spacing);
}

.toast-header {
  display: flex;
  align-items: center;
  padding: var(--bs-toast-padding-y) var(--bs-toast-padding-x);
  color: var(--bs-toast-header-color);
  background-color: var(--bs-toast-header-bg);
  background-clip: padding-box;
  border-bottom: var(--bs-toast-border-width) solid var(--bs-toast-header-border-color);
  border-top-left-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
  border-top-right-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
}
.toast-header .btn-close {
  margin-right: calc(-0.5 * var(--bs-toast-padding-x));
  margin-left: var(--bs-toast-padding-x);
}

.toast-body {
  padding: var(--bs-toast-padding-x);
  word-wrap: break-word;
}

.modal {
  --bs-modal-zindex: 1055;
  --bs-modal-width: 500px;
  --bs-modal-padding: 1rem;
  --bs-modal-margin: 0.5rem;
  --bs-modal-color: ;
  --bs-modal-bg: var(--bs-body-bg);
  --bs-modal-border-color: var(--bs-border-color-translucent);
  --bs-modal-border-width: var(--bs-border-width);
  --bs-modal-border-radius: var(--bs-border-radius-lg);
  --bs-modal-box-shadow: var(--bs-box-shadow-sm);
  --bs-modal-inner-border-radius: calc(var(--bs-border-radius-lg) - (var(--bs-border-width)));
  --bs-modal-header-padding-x: 1rem;
  --bs-modal-header-padding-y: 1rem;
  --bs-modal-header-padding: 1rem 1rem;
  --bs-modal-header-border-color: var(--bs-border-color);
  --bs-modal-header-border-width: var(--bs-border-width);
  --bs-modal-title-line-height: 1.5;
  --bs-modal-footer-gap: 0.5rem;
  --bs-modal-footer-bg: ;
  --bs-modal-footer-border-color: var(--bs-border-color);
  --bs-modal-footer-border-width: var(--bs-border-width);
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--bs-modal-zindex);
  display: none;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}

.modal-dialog {
  position: relative;
  width: auto;
  margin: var(--bs-modal-margin);
  pointer-events: none;
}
.modal.fade .modal-dialog {
  transition: transform 0.3s ease-out;
  transform: translate(0, -50px);
}
@media (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog {
    transition: none;
  }
}
.modal.show .modal-dialog {
  transform: none;
}
.modal.modal-static .modal-dialog {
  transform: scale(1.02);
}

.modal-dialog-scrollable {
  height: calc(100% - var(--bs-modal-margin) * 2);
}
.modal-dialog-scrollable .modal-content {
  max-height: 100%;
  overflow: hidden;
}
.modal-dialog-scrollable .modal-body {
  overflow-y: auto;
}

.modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - var(--bs-modal-margin) * 2);
}

.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  color: var(--bs-modal-color);
  pointer-events: auto;
  background-color: var(--bs-modal-bg);
  background-clip: padding-box;
  border: var(--bs-modal-border-width) solid var(--bs-modal-border-color);
  border-radius: var(--bs-modal-border-radius);
  outline: 0;
}

.modal-backdrop {
  --bs-backdrop-zindex: 1050;
  --bs-backdrop-bg: #000;
  --bs-backdrop-opacity: 0.5;
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--bs-backdrop-zindex);
  width: 100vw;
  height: 100vh;
  background-color: var(--bs-backdrop-bg);
}
.modal-backdrop.fade {
  opacity: 0;
}
.modal-backdrop.show {
  opacity: var(--bs-backdrop-opacity);
}

.modal-header {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  padding: var(--bs-modal-header-padding);
  border-bottom: var(--bs-modal-header-border-width) solid var(--bs-modal-header-border-color);
  border-top-left-radius: var(--bs-modal-inner-border-radius);
  border-top-right-radius: var(--bs-modal-inner-border-radius);
}
.modal-header .btn-close {
  padding: calc(var(--bs-modal-header-padding-y) * 0.5) calc(var(--bs-modal-header-padding-x) * 0.5);
  margin: calc(-0.5 * var(--bs-modal-header-padding-y)) calc(-0.5 * var(--bs-modal-header-padding-x)) calc(-0.5 * var(--bs-modal-header-padding-y)) auto;
}

.modal-title {
  margin-bottom: 0;
  line-height: var(--bs-modal-title-line-height);
}

.modal-body {
  position: relative;
  flex: 1 1 auto;
  padding: var(--bs-modal-padding);
}

.modal-footer {
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
  padding: calc(var(--bs-modal-padding) - var(--bs-modal-footer-gap) * 0.5);
  background-color: var(--bs-modal-footer-bg);
  border-top: var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color);
  border-bottom-right-radius: var(--bs-modal-inner-border-radius);
  border-bottom-left-radius: var(--bs-modal-inner-border-radius);
}
.modal-footer > * {
  margin: calc(var(--bs-modal-footer-gap) * 0.5);
}

@media (min-width: 576px) {
  .modal {
    --bs-modal-margin: 1.75rem;
    --bs-modal-box-shadow: var(--bs-box-shadow);
  }
  .modal-dialog {
    max-width: var(--bs-modal-width);
    margin-right: auto;
    margin-left: auto;
  }
  .modal-sm {
    --bs-modal-width: 300px;
  }
}
@media (min-width: 992px) {
  .modal-lg,
  .modal-xl {
    --bs-modal-width: 800px;
  }
}
@media (min-width: 1200px) {
  .modal-xl {
    --bs-modal-width: 1140px;
  }
}
.modal-fullscreen {
  width: 100vw;
  max-width: none;
  height: 100%;
  margin: 0;
}
.modal-fullscreen .modal-content {
  height: 100%;
  border: 0;
  border-radius: 0;
}
.modal-fullscreen .modal-header,
.modal-fullscreen .modal-footer {
  border-radius: 0;
}
.modal-fullscreen .modal-body {
  overflow-y: auto;
}

@media (max-width: 575.98px) {
  .modal-fullscreen-sm-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-fullscreen-sm-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .modal-fullscreen-sm-down .modal-header,
  .modal-fullscreen-sm-down .modal-footer {
    border-radius: 0;
  }
  .modal-fullscreen-sm-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 767.98px) {
  .modal-fullscreen-md-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-fullscreen-md-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .modal-fullscreen-md-down .modal-header,
  .modal-fullscreen-md-down .modal-footer {
    border-radius: 0;
  }
  .modal-fullscreen-md-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 991.98px) {
  .modal-fullscreen-lg-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-fullscreen-lg-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .modal-fullscreen-lg-down .modal-header,
  .modal-fullscreen-lg-down .modal-footer {
    border-radius: 0;
  }
  .modal-fullscreen-lg-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 1199.98px) {
  .modal-fullscreen-xl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-fullscreen-xl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .modal-fullscreen-xl-down .modal-header,
  .modal-fullscreen-xl-down .modal-footer {
    border-radius: 0;
  }
  .modal-fullscreen-xl-down .modal-body {
    overflow-y: auto;
  }
}
@media (max-width: 1399.98px) {
  .modal-fullscreen-xxl-down {
    width: 100vw;
    max-width: none;
    height: 100%;
    margin: 0;
  }
  .modal-fullscreen-xxl-down .modal-content {
    height: 100%;
    border: 0;
    border-radius: 0;
  }
  .modal-fullscreen-xxl-down .modal-header,
  .modal-fullscreen-xxl-down .modal-footer {
    border-radius: 0;
  }
  .modal-fullscreen-xxl-down .modal-body {
    overflow-y: auto;
  }
}
.tooltip {
  --bs-tooltip-zindex: 1080;
  --bs-tooltip-max-width: 200px;
  --bs-tooltip-padding-x: 0.5rem;
  --bs-tooltip-padding-y: 0.25rem;
  --bs-tooltip-margin: ;
  --bs-tooltip-font-size: 0.875rem;
  --bs-tooltip-color: var(--bs-body-bg);
  --bs-tooltip-bg: var(--bs-emphasis-color);
  --bs-tooltip-border-radius: var(--bs-border-radius);
  --bs-tooltip-opacity: 0.9;
  --bs-tooltip-arrow-width: 0.8rem;
  --bs-tooltip-arrow-height: 0.4rem;
  z-index: var(--bs-tooltip-zindex);
  display: block;
  margin: var(--bs-tooltip-margin);
  font-family: var(--bs-font-sans-serif);
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;
  font-size: var(--bs-tooltip-font-size);
  word-wrap: break-word;
  opacity: 0;
}
.tooltip.show {
  opacity: var(--bs-tooltip-opacity);
}
.tooltip .tooltip-arrow {
  display: block;
  width: var(--bs-tooltip-arrow-width);
  height: var(--bs-tooltip-arrow-height);
}
.tooltip .tooltip-arrow::before {
  position: absolute;
  content: "";
  border-color: transparent;
  border-style: solid;
}

.bs-tooltip-top .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow {
  bottom: calc(-1 * var(--bs-tooltip-arrow-height));
}
.bs-tooltip-top .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {
  top: -1px;
  border-width: var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
  border-top-color: var(--bs-tooltip-bg);
}

/* rtl:begin:ignore */
.bs-tooltip-end .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow {
  left: calc(-1 * var(--bs-tooltip-arrow-height));
  width: var(--bs-tooltip-arrow-height);
  height: var(--bs-tooltip-arrow-width);
}
.bs-tooltip-end .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {
  right: -1px;
  border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
  border-right-color: var(--bs-tooltip-bg);
}

/* rtl:end:ignore */
.bs-tooltip-bottom .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow {
  top: calc(-1 * var(--bs-tooltip-arrow-height));
}
.bs-tooltip-bottom .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {
  bottom: -1px;
  border-width: 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
  border-bottom-color: var(--bs-tooltip-bg);
}

/* rtl:begin:ignore */
.bs-tooltip-start .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow {
  right: calc(-1 * var(--bs-tooltip-arrow-height));
  width: var(--bs-tooltip-arrow-height);
  height: var(--bs-tooltip-arrow-width);
}
.bs-tooltip-start .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before {
  left: -1px;
  border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
  border-left-color: var(--bs-tooltip-bg);
}

/* rtl:end:ignore */
.tooltip-inner {
  max-width: var(--bs-tooltip-max-width);
  padding: var(--bs-tooltip-padding-y) var(--bs-tooltip-padding-x);
  color: var(--bs-tooltip-color);
  text-align: center;
  background-color: var(--bs-tooltip-bg);
  border-radius: var(--bs-tooltip-border-radius);
}

.popover {
  --bs-popover-zindex: 1070;
  --bs-popover-max-width: 276px;
  --bs-popover-font-size: 0.875rem;
  --bs-popover-bg: var(--bs-body-bg);
  --bs-popover-border-width: var(--bs-border-width);
  --bs-popover-border-color: var(--bs-border-color-translucent);
  --bs-popover-border-radius: var(--bs-border-radius-lg);
  --bs-popover-inner-border-radius: calc(var(--bs-border-radius-lg) - var(--bs-border-width));
  --bs-popover-box-shadow: var(--bs-box-shadow);
  --bs-popover-header-padding-x: 1rem;
  --bs-popover-header-padding-y: 0.5rem;
  --bs-popover-header-font-size: 1rem;
  --bs-popover-header-color: inherit;
  --bs-popover-header-bg: var(--bs-secondary-bg);
  --bs-popover-body-padding-x: 1rem;
  --bs-popover-body-padding-y: 1rem;
  --bs-popover-body-color: var(--bs-body-color);
  --bs-popover-arrow-width: 1rem;
  --bs-popover-arrow-height: 0.5rem;
  --bs-popover-arrow-border: var(--bs-popover-border-color);
  z-index: var(--bs-popover-zindex);
  display: block;
  max-width: var(--bs-popover-max-width);
  font-family: var(--bs-font-sans-serif);
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;
  font-size: var(--bs-popover-font-size);
  word-wrap: break-word;
  background-color: var(--bs-popover-bg);
  background-clip: padding-box;
  border: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
  border-radius: var(--bs-popover-border-radius);
}
.popover .popover-arrow {
  display: block;
  width: var(--bs-popover-arrow-width);
  height: var(--bs-popover-arrow-height);
}
.popover .popover-arrow::before, .popover .popover-arrow::after {
  position: absolute;
  display: block;
  content: "";
  border-color: transparent;
  border-style: solid;
  border-width: 0;
}

.bs-popover-top > .popover-arrow, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow {
  bottom: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
}
.bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before, .bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
  border-width: var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
}
.bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before {
  bottom: 0;
  border-top-color: var(--bs-popover-arrow-border);
}
.bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
  bottom: var(--bs-popover-border-width);
  border-top-color: var(--bs-popover-bg);
}

/* rtl:begin:ignore */
.bs-popover-end > .popover-arrow, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow {
  left: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
  width: var(--bs-popover-arrow-height);
  height: var(--bs-popover-arrow-width);
}
.bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before, .bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
  border-width: calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
}
.bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before {
  left: 0;
  border-right-color: var(--bs-popover-arrow-border);
}
.bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
  left: var(--bs-popover-border-width);
  border-right-color: var(--bs-popover-bg);
}

/* rtl:end:ignore */
.bs-popover-bottom > .popover-arrow, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow {
  top: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
}
.bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before, .bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
  border-width: 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
}
.bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before {
  top: 0;
  border-bottom-color: var(--bs-popover-arrow-border);
}
.bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
  top: var(--bs-popover-border-width);
  border-bottom-color: var(--bs-popover-bg);
}
.bs-popover-bottom .popover-header::before, .bs-popover-auto[data-popper-placement^=bottom] .popover-header::before {
  position: absolute;
  top: 0;
  left: 50%;
  display: block;
  width: var(--bs-popover-arrow-width);
  margin-left: calc(-0.5 * var(--bs-popover-arrow-width));
  content: "";
  border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-header-bg);
}

/* rtl:begin:ignore */
.bs-popover-start > .popover-arrow, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow {
  right: calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));
  width: var(--bs-popover-arrow-height);
  height: var(--bs-popover-arrow-width);
}
.bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before, .bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
  border-width: calc(var(--bs-popover-arrow-width) * 0.5) 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
}
.bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before {
  right: 0;
  border-left-color: var(--bs-popover-arrow-border);
}
.bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
  right: var(--bs-popover-border-width);
  border-left-color: var(--bs-popover-bg);
}

/* rtl:end:ignore */
.popover-header {
  padding: var(--bs-popover-header-padding-y) var(--bs-popover-header-padding-x);
  margin-bottom: 0;
  font-size: var(--bs-popover-header-font-size);
  color: var(--bs-popover-header-color);
  background-color: var(--bs-popover-header-bg);
  border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
  border-top-left-radius: var(--bs-popover-inner-border-radius);
  border-top-right-radius: var(--bs-popover-inner-border-radius);
}
.popover-header:empty {
  display: none;
}

.popover-body {
  padding: var(--bs-popover-body-padding-y) var(--bs-popover-body-padding-x);
  color: var(--bs-popover-body-color);
}

.carousel {
  position: relative;
}

.carousel.pointer-event {
  touch-action: pan-y;
}

.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
}
.carousel-inner::after {
  display: block;
  clear: both;
  content: "";
}

.carousel-item {
  position: relative;
  display: none;
  float: left;
  width: 100%;
  margin-right: -100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transition: transform 0.6s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
  .carousel-item {
    transition: none;
  }
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
}

.carousel-item-next:not(.carousel-item-start),
.active.carousel-item-end {
  transform: translateX(100%);
}

.carousel-item-prev:not(.carousel-item-end),
.active.carousel-item-start {
  transform: translateX(-100%);
}

.carousel-fade .carousel-item {
  opacity: 0;
  transition-property: opacity;
  transform: none;
}
.carousel-fade .carousel-item.active,
.carousel-fade .carousel-item-next.carousel-item-start,
.carousel-fade .carousel-item-prev.carousel-item-end {
  z-index: 1;
  opacity: 1;
}
.carousel-fade .active.carousel-item-start,
.carousel-fade .active.carousel-item-end {
  z-index: 0;
  opacity: 0;
  transition: opacity 0s 0.6s;
}
@media (prefers-reduced-motion: reduce) {
  .carousel-fade .active.carousel-item-start,
  .carousel-fade .active.carousel-item-end {
    transition: none;
  }
}

.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 15%;
  padding: 0;
  color: #fff;
  text-align: center;
  background: none;
  border: 0;
  opacity: 0.5;
  transition: opacity 0.15s ease;
}
@media (prefers-reduced-motion: reduce) {
  .carousel-control-prev,
  .carousel-control-next {
    transition: none;
  }
}
.carousel-control-prev:hover, .carousel-control-prev:focus,
.carousel-control-next:hover,
.carousel-control-next:focus {
  color: #fff;
  text-decoration: none;
  outline: 0;
  opacity: 0.9;
}

.carousel-control-prev {
  left: 0;
}

.carousel-control-next {
  right: 0;
}

.carousel-control-prev-icon,
.carousel-control-next-icon {
  display: inline-block;
  width: 2rem;
  height: 2rem;
  background-repeat: no-repeat;
  background-position: 50%;
  background-size: 100% 100%;
}

.carousel-control-prev-icon {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e") /*rtl:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e")*/;
}

.carousel-control-next-icon {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e") /*rtl:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e")*/;
}

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 2;
  display: flex;
  justify-content: center;
  padding: 0;
  margin-right: 15%;
  margin-bottom: 1rem;
  margin-left: 15%;
}
.carousel-indicators [data-bs-target] {
  box-sizing: content-box;
  flex: 0 1 auto;
  width: 30px;
  height: 3px;
  padding: 0;
  margin-right: 3px;
  margin-left: 3px;
  text-indent: -999px;
  cursor: pointer;
  background-color: #fff;
  background-clip: padding-box;
  border: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  opacity: 0.5;
  transition: opacity 0.6s ease;
}
@media (prefers-reduced-motion: reduce) {
  .carousel-indicators [data-bs-target] {
    transition: none;
  }
}
.carousel-indicators .active {
  opacity: 1;
}

.carousel-caption {
  position: absolute;
  right: 15%;
  bottom: 1.25rem;
  left: 15%;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  color: #fff;
  text-align: center;
}

.carousel-dark .carousel-control-prev-icon,
.carousel-dark .carousel-control-next-icon {
  filter: invert(1) grayscale(100);
}
.carousel-dark .carousel-indicators [data-bs-target] {
  background-color: #000;
}
.carousel-dark .carousel-caption {
  color: #000;
}

[data-bs-theme=dark] .carousel .carousel-control-prev-icon,
[data-bs-theme=dark] .carousel .carousel-control-next-icon, [data-bs-theme=dark].carousel .carousel-control-prev-icon,
[data-bs-theme=dark].carousel .carousel-control-next-icon {
  filter: invert(1) grayscale(100);
}
[data-bs-theme=dark] .carousel .carousel-indicators [data-bs-target], [data-bs-theme=dark].carousel .carousel-indicators [data-bs-target] {
  background-color: #000;
}
[data-bs-theme=dark] .carousel .carousel-caption, [data-bs-theme=dark].carousel .carousel-caption {
  color: #000;
}

.spinner-grow,
.spinner-border {
  display: inline-block;
  width: var(--bs-spinner-width);
  height: var(--bs-spinner-height);
  vertical-align: var(--bs-spinner-vertical-align);
  border-radius: 50%;
  animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);
}

@keyframes spinner-border {
  to {
    transform: rotate(360deg) /* rtl:ignore */;
  }
}
.spinner-border {
  --bs-spinner-width: 2rem;
  --bs-spinner-height: 2rem;
  --bs-spinner-vertical-align: -0.125em;
  --bs-spinner-border-width: 0.25em;
  --bs-spinner-animation-speed: 0.75s;
  --bs-spinner-animation-name: spinner-border;
  border: var(--bs-spinner-border-width) solid currentcolor;
  border-right-color: transparent;
}

.spinner-border-sm {
  --bs-spinner-width: 1rem;
  --bs-spinner-height: 1rem;
  --bs-spinner-border-width: 0.2em;
}

@keyframes spinner-grow {
  0% {
    transform: scale(0);
  }
  50% {
    opacity: 1;
    transform: none;
  }
}
.spinner-grow {
  --bs-spinner-width: 2rem;
  --bs-spinner-height: 2rem;
  --bs-spinner-vertical-align: -0.125em;
  --bs-spinner-animation-speed: 0.75s;
  --bs-spinner-animation-name: spinner-grow;
  background-color: currentcolor;
  opacity: 0;
}

.spinner-grow-sm {
  --bs-spinner-width: 1rem;
  --bs-spinner-height: 1rem;
}

@media (prefers-reduced-motion: reduce) {
  .spinner-border,
  .spinner-grow {
    --bs-spinner-animation-speed: 1.5s;
  }
}
.offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {
  --bs-offcanvas-zindex: 1045;
  --bs-offcanvas-width: 400px;
  --bs-offcanvas-height: 30vh;
  --bs-offcanvas-padding-x: 1rem;
  --bs-offcanvas-padding-y: 1rem;
  --bs-offcanvas-color: var(--bs-body-color);
  --bs-offcanvas-bg: var(--bs-body-bg);
  --bs-offcanvas-border-width: var(--bs-border-width);
  --bs-offcanvas-border-color: var(--bs-border-color-translucent);
  --bs-offcanvas-box-shadow: var(--bs-box-shadow-sm);
  --bs-offcanvas-transition: transform 0.3s ease-in-out;
  --bs-offcanvas-title-line-height: 1.5;
}

@media (max-width: 575.98px) {
  .offcanvas-sm {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {
  .offcanvas-sm {
    transition: none;
  }
}
@media (max-width: 575.98px) {
  .offcanvas-sm.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .offcanvas-sm.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .offcanvas-sm.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .offcanvas-sm.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {
    visibility: visible;
  }
}
@media (min-width: 576px) {
  .offcanvas-sm {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-sm .offcanvas-header {
    display: none;
  }
  .offcanvas-sm .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}

@media (max-width: 767.98px) {
  .offcanvas-md {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {
  .offcanvas-md {
    transition: none;
  }
}
@media (max-width: 767.98px) {
  .offcanvas-md.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .offcanvas-md.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .offcanvas-md.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .offcanvas-md.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {
    visibility: visible;
  }
}
@media (min-width: 768px) {
  .offcanvas-md {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-md .offcanvas-header {
    display: none;
  }
  .offcanvas-md .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}

@media (max-width: 991.98px) {
  .offcanvas-lg {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {
  .offcanvas-lg {
    transition: none;
  }
}
@media (max-width: 991.98px) {
  .offcanvas-lg.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .offcanvas-lg.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .offcanvas-lg.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .offcanvas-lg.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {
    visibility: visible;
  }
}
@media (min-width: 992px) {
  .offcanvas-lg {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-lg .offcanvas-header {
    display: none;
  }
  .offcanvas-lg .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}

@media (max-width: 1199.98px) {
  .offcanvas-xl {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {
  .offcanvas-xl {
    transition: none;
  }
}
@media (max-width: 1199.98px) {
  .offcanvas-xl.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .offcanvas-xl.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .offcanvas-xl.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .offcanvas-xl.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {
    visibility: visible;
  }
}
@media (min-width: 1200px) {
  .offcanvas-xl {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-xl .offcanvas-header {
    display: none;
  }
  .offcanvas-xl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}

@media (max-width: 1399.98px) {
  .offcanvas-xxl {
    position: fixed;
    bottom: 0;
    z-index: var(--bs-offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--bs-offcanvas-color);
    visibility: hidden;
    background-color: var(--bs-offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--bs-offcanvas-transition);
  }
}
@media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {
  .offcanvas-xxl {
    transition: none;
  }
}
@media (max-width: 1399.98px) {
  .offcanvas-xxl.offcanvas-start {
    top: 0;
    left: 0;
    width: var(--bs-offcanvas-width);
    border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(-100%);
  }
  .offcanvas-xxl.offcanvas-end {
    top: 0;
    right: 0;
    width: var(--bs-offcanvas-width);
    border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateX(100%);
  }
  .offcanvas-xxl.offcanvas-top {
    top: 0;
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(-100%);
  }
  .offcanvas-xxl.offcanvas-bottom {
    right: 0;
    left: 0;
    height: var(--bs-offcanvas-height);
    max-height: 100%;
    border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
    transform: translateY(100%);
  }
  .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {
    visibility: visible;
  }
}
@media (min-width: 1400px) {
  .offcanvas-xxl {
    --bs-offcanvas-height: auto;
    --bs-offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-xxl .offcanvas-header {
    display: none;
  }
  .offcanvas-xxl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}

.offcanvas {
  position: fixed;
  bottom: 0;
  z-index: var(--bs-offcanvas-zindex);
  display: flex;
  flex-direction: column;
  max-width: 100%;
  color: var(--bs-offcanvas-color);
  visibility: hidden;
  background-color: var(--bs-offcanvas-bg);
  background-clip: padding-box;
  outline: 0;
  transition: var(--bs-offcanvas-transition);
}
@media (prefers-reduced-motion: reduce) {
  .offcanvas {
    transition: none;
  }
}
.offcanvas.offcanvas-start {
  top: 0;
  left: 0;
  width: var(--bs-offcanvas-width);
  border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateX(-100%);
}
.offcanvas.offcanvas-end {
  top: 0;
  right: 0;
  width: var(--bs-offcanvas-width);
  border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateX(100%);
}
.offcanvas.offcanvas-top {
  top: 0;
  right: 0;
  left: 0;
  height: var(--bs-offcanvas-height);
  max-height: 100%;
  border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateY(-100%);
}
.offcanvas.offcanvas-bottom {
  right: 0;
  left: 0;
  height: var(--bs-offcanvas-height);
  max-height: 100%;
  border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
  transform: translateY(100%);
}
.offcanvas.showing, .offcanvas.show:not(.hiding) {
  transform: none;
}
.offcanvas.showing, .offcanvas.hiding, .offcanvas.show {
  visibility: visible;
}

.offcanvas-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1040;
  width: 100vw;
  height: 100vh;
  background-color: #000;
}
.offcanvas-backdrop.fade {
  opacity: 0;
}
.offcanvas-backdrop.show {
  opacity: 0.5;
}

.offcanvas-header {
  display: flex;
  align-items: center;
  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
}
.offcanvas-header .btn-close {
  padding: calc(var(--bs-offcanvas-padding-y) * 0.5) calc(var(--bs-offcanvas-padding-x) * 0.5);
  margin: calc(-0.5 * var(--bs-offcanvas-padding-y)) calc(-0.5 * var(--bs-offcanvas-padding-x)) calc(-0.5 * var(--bs-offcanvas-padding-y)) auto;
}

.offcanvas-title {
  margin-bottom: 0;
  line-height: var(--bs-offcanvas-title-line-height);
}

.offcanvas-body {
  flex-grow: 1;
  padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
  overflow-y: auto;
}

.placeholder {
  display: inline-block;
  min-height: 1em;
  vertical-align: middle;
  cursor: wait;
  background-color: currentcolor;
  opacity: 0.5;
}
.placeholder.btn::before {
  display: inline-block;
  content: "";
}

.placeholder-xs {
  min-height: 0.6em;
}

.placeholder-sm {
  min-height: 0.8em;
}

.placeholder-lg {
  min-height: 1.2em;
}

.placeholder-glow .placeholder {
  animation: placeholder-glow 2s ease-in-out infinite;
}

@keyframes placeholder-glow {
  50% {
    opacity: 0.2;
  }
}
.placeholder-wave {
  -webkit-mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
  mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
  -webkit-mask-size: 200% 100%;
  mask-size: 200% 100%;
  animation: placeholder-wave 2s linear infinite;
}

@keyframes placeholder-wave {
  100% {
    -webkit-mask-position: -200% 0%;
    mask-position: -200% 0%;
  }
}
.clearfix::after {
  display: block;
  clear: both;
  content: "";
}

.text-bg-primary {
  color: #fff !important;
  background-color: RGBA(var(--bs-primary-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-secondary {
  color: #fff !important;
  background-color: RGBA(var(--bs-secondary-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-success {
  color: #fff !important;
  background-color: RGBA(var(--bs-success-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-info {
  color: #000 !important;
  background-color: RGBA(var(--bs-info-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-warning {
  color: #000 !important;
  background-color: RGBA(var(--bs-warning-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-danger {
  color: #fff !important;
  background-color: RGBA(var(--bs-danger-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-light {
  color: #000 !important;
  background-color: RGBA(var(--bs-light-rgb), var(--bs-bg-opacity, 1)) !important;
}

.text-bg-dark {
  color: #fff !important;
  background-color: RGBA(var(--bs-dark-rgb), var(--bs-bg-opacity, 1)) !important;
}

.link-primary {
  color: RGBA(var(--bs-primary-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-primary-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-primary-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-primary:hover, .link-primary:focus {
  color: RGBA(10, 88, 202, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(10, 88, 202, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(10, 88, 202, var(--bs-link-underline-opacity, 1)) !important;
}

.link-secondary {
  color: RGBA(var(--bs-secondary-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-secondary-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-secondary-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-secondary:hover, .link-secondary:focus {
  color: RGBA(86, 94, 100, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(86, 94, 100, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(86, 94, 100, var(--bs-link-underline-opacity, 1)) !important;
}

.link-success {
  color: RGBA(var(--bs-success-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-success-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-success-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-success:hover, .link-success:focus {
  color: RGBA(20, 108, 67, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(20, 108, 67, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(20, 108, 67, var(--bs-link-underline-opacity, 1)) !important;
}

.link-info {
  color: RGBA(var(--bs-info-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-info-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-info-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-info:hover, .link-info:focus {
  color: RGBA(61, 213, 243, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(61, 213, 243, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(61, 213, 243, var(--bs-link-underline-opacity, 1)) !important;
}

.link-warning {
  color: RGBA(var(--bs-warning-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-warning-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-warning-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-warning:hover, .link-warning:focus {
  color: RGBA(255, 205, 57, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(255, 205, 57, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(255, 205, 57, var(--bs-link-underline-opacity, 1)) !important;
}

.link-danger {
  color: RGBA(var(--bs-danger-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-danger-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-danger-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-danger:hover, .link-danger:focus {
  color: RGBA(176, 42, 55, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(176, 42, 55, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(176, 42, 55, var(--bs-link-underline-opacity, 1)) !important;
}

.link-light {
  color: RGBA(var(--bs-light-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-light-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-light-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-light:hover, .link-light:focus {
  color: RGBA(249, 250, 251, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(249, 250, 251, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(249, 250, 251, var(--bs-link-underline-opacity, 1)) !important;
}

.link-dark {
  color: RGBA(var(--bs-dark-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-dark-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-dark-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-dark:hover, .link-dark:focus {
  color: RGBA(26, 30, 33, var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(26, 30, 33, var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(26, 30, 33, var(--bs-link-underline-opacity, 1)) !important;
}

.link-body-emphasis {
  color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-opacity, 1)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
}
.link-body-emphasis:hover, .link-body-emphasis:focus {
  color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-opacity, 0.75)) !important;
  -webkit-text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 0.75)) !important;
  text-decoration-color: RGBA(var(--bs-emphasis-color-rgb), var(--bs-link-underline-opacity, 0.75)) !important;
}

.focus-ring:focus {
  outline: 0;
  box-shadow: var(--bs-focus-ring-x, 0) var(--bs-focus-ring-y, 0) var(--bs-focus-ring-blur, 0) var(--bs-focus-ring-width) var(--bs-focus-ring-color);
}

.icon-link {
  display: inline-flex;
  gap: 0.375rem;
  align-items: center;
  -webkit-text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 0.5));
  text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-opacity, 0.5));
  text-underline-offset: 0.25em;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
.icon-link > .bi {
  flex-shrink: 0;
  width: 1em;
  height: 1em;
  fill: currentcolor;
  transition: 0.2s ease-in-out transform;
}
@media (prefers-reduced-motion: reduce) {
  .icon-link > .bi {
    transition: none;
  }
}

.icon-link-hover:hover > .bi, .icon-link-hover:focus-visible > .bi {
  transform: var(--bs-icon-link-transform, translate3d(0.25em, 0, 0));
}

.ratio {
  position: relative;
  width: 100%;
}
.ratio::before {
  display: block;
  padding-top: var(--bs-aspect-ratio);
  content: "";
}
.ratio > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.ratio-1x1 {
  --bs-aspect-ratio: 100%;
}

.ratio-4x3 {
  --bs-aspect-ratio: 75%;
}

.ratio-16x9 {
  --bs-aspect-ratio: 56.25%;
}

.ratio-21x9 {
  --bs-aspect-ratio: 42.8571428571%;
}

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1030;
}

.sticky-top {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 1020;
}

.sticky-bottom {
  position: -webkit-sticky;
  position: sticky;
  bottom: 0;
  z-index: 1020;
}

@media (min-width: 576px) {
  .sticky-sm-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .sticky-sm-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 768px) {
  .sticky-md-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .sticky-md-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 992px) {
  .sticky-lg-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .sticky-lg-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 1200px) {
  .sticky-xl-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .sticky-xl-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
@media (min-width: 1400px) {
  .sticky-xxl-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  .sticky-xxl-bottom {
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
}
.hstack {
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
}

.vstack {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  align-self: stretch;
}

.visually-hidden,
.visually-hidden-focusable:not(:focus):not(:focus-within) {
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
.visually-hidden:not(caption),
.visually-hidden-focusable:not(:focus):not(:focus-within):not(caption) {
  position: absolute !important;
}

.stretched-link::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  content: "";
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.vr {
  display: inline-block;
  align-self: stretch;
  width: var(--bs-border-width);
  min-height: 1em;
  background-color: currentcolor;
  opacity: 0.25;
}

.align-baseline {
  vertical-align: baseline !important;
}

.align-top {
  vertical-align: top !important;
}

.align-middle {
  vertical-align: middle !important;
}

.align-bottom {
  vertical-align: bottom !important;
}

.align-text-bottom {
  vertical-align: text-bottom !important;
}

.align-text-top {
  vertical-align: text-top !important;
}

.float-start {
  float: left !important;
}

.float-end {
  float: right !important;
}

.float-none {
  float: none !important;
}

.object-fit-contain {
  -o-object-fit: contain !important;
  object-fit: contain !important;
}

.object-fit-cover {
  -o-object-fit: cover !important;
  object-fit: cover !important;
}

.object-fit-fill {
  -o-object-fit: fill !important;
  object-fit: fill !important;
}

.object-fit-scale {
  -o-object-fit: scale-down !important;
  object-fit: scale-down !important;
}

.object-fit-none {
  -o-object-fit: none !important;
  object-fit: none !important;
}

.opacity-0 {
  opacity: 0 !important;
}

.opacity-25 {
  opacity: 0.25 !important;
}

.opacity-50 {
  opacity: 0.5 !important;
}

.opacity-75 {
  opacity: 0.75 !important;
}

.opacity-100 {
  opacity: 1 !important;
}

.overflow-auto {
  overflow: auto !important;
}

.overflow-hidden {
  overflow: hidden !important;
}

.overflow-visible {
  overflow: visible !important;
}

.overflow-scroll {
  overflow: scroll !important;
}

.overflow-x-auto {
  overflow-x: auto !important;
}

.overflow-x-hidden {
  overflow-x: hidden !important;
}

.overflow-x-visible {
  overflow-x: visible !important;
}

.overflow-x-scroll {
  overflow-x: scroll !important;
}

.overflow-y-auto {
  overflow-y: auto !important;
}

.overflow-y-hidden {
  overflow-y: hidden !important;
}

.overflow-y-visible {
  overflow-y: visible !important;
}

.overflow-y-scroll {
  overflow-y: scroll !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-grid {
  display: grid !important;
}

.d-inline-grid {
  display: inline-grid !important;
}

.d-table {
  display: table !important;
}

.d-table-row {
  display: table-row !important;
}

.d-table-cell {
  display: table-cell !important;
}

.d-flex {
  display: flex !important;
}

.d-inline-flex {
  display: inline-flex !important;
}

.d-none {
  display: none !important;
}

.shadow {
  box-shadow: var(--bs-box-shadow) !important;
}

.shadow-sm {
  box-shadow: var(--bs-box-shadow-sm) !important;
}

.shadow-lg {
  box-shadow: var(--bs-box-shadow-lg) !important;
}

.shadow-none {
  box-shadow: none !important;
}

.focus-ring-primary {
  --bs-focus-ring-color: rgba(var(--bs-primary-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-secondary {
  --bs-focus-ring-color: rgba(var(--bs-secondary-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-success {
  --bs-focus-ring-color: rgba(var(--bs-success-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-info {
  --bs-focus-ring-color: rgba(var(--bs-info-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-warning {
  --bs-focus-ring-color: rgba(var(--bs-warning-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-danger {
  --bs-focus-ring-color: rgba(var(--bs-danger-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-light {
  --bs-focus-ring-color: rgba(var(--bs-light-rgb), var(--bs-focus-ring-opacity));
}

.focus-ring-dark {
  --bs-focus-ring-color: rgba(var(--bs-dark-rgb), var(--bs-focus-ring-opacity));
}

.position-static {
  position: static !important;
}

.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

.position-fixed {
  position: fixed !important;
}

.position-sticky {
  position: -webkit-sticky !important;
  position: sticky !important;
}

.top-0 {
  top: 0 !important;
}

.top-50 {
  top: 50% !important;
}

.top-100 {
  top: 100% !important;
}

.bottom-0 {
  bottom: 0 !important;
}

.bottom-50 {
  bottom: 50% !important;
}

.bottom-100 {
  bottom: 100% !important;
}

.start-0 {
  left: 0 !important;
}

.start-50 {
  left: 50% !important;
}

.start-100 {
  left: 100% !important;
}

.end-0 {
  right: 0 !important;
}

.end-50 {
  right: 50% !important;
}

.end-100 {
  right: 100% !important;
}

.translate-middle {
  transform: translate(-50%, -50%) !important;
}

.translate-middle-x {
  transform: translateX(-50%) !important;
}

.translate-middle-y {
  transform: translateY(-50%) !important;
}

.border {
  border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}

.border-0 {
  border: 0 !important;
}

.border-top {
  border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}

.border-top-0 {
  border-top: 0 !important;
}

.border-end {
  border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}

.border-end-0 {
  border-right: 0 !important;
}

.border-bottom {
  border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}

.border-bottom-0 {
  border-bottom: 0 !important;
}

.border-start {
  border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
}

.border-start-0 {
  border-left: 0 !important;
}

.border-primary {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-primary-rgb), var(--bs-border-opacity)) !important;
}

.border-secondary {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;
}

.border-success {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;
}

.border-info {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-info-rgb), var(--bs-border-opacity)) !important;
}

.border-warning {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-warning-rgb), var(--bs-border-opacity)) !important;
}

.border-danger {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-danger-rgb), var(--bs-border-opacity)) !important;
}

.border-light {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-light-rgb), var(--bs-border-opacity)) !important;
}

.border-dark {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-dark-rgb), var(--bs-border-opacity)) !important;
}

.border-black {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-black-rgb), var(--bs-border-opacity)) !important;
}

.border-white {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-white-rgb), var(--bs-border-opacity)) !important;
}

.border-primary-subtle {
  border-color: var(--bs-primary-border-subtle) !important;
}

.border-secondary-subtle {
  border-color: var(--bs-secondary-border-subtle) !important;
}

.border-success-subtle {
  border-color: var(--bs-success-border-subtle) !important;
}

.border-info-subtle {
  border-color: var(--bs-info-border-subtle) !important;
}

.border-warning-subtle {
  border-color: var(--bs-warning-border-subtle) !important;
}

.border-danger-subtle {
  border-color: var(--bs-danger-border-subtle) !important;
}

.border-light-subtle {
  border-color: var(--bs-light-border-subtle) !important;
}

.border-dark-subtle {
  border-color: var(--bs-dark-border-subtle) !important;
}

.border-1 {
  border-width: 1px !important;
}

.border-2 {
  border-width: 2px !important;
}

.border-3 {
  border-width: 3px !important;
}

.border-4 {
  border-width: 4px !important;
}

.border-5 {
  border-width: 5px !important;
}

.border-opacity-10 {
  --bs-border-opacity: 0.1;
}

.border-opacity-25 {
  --bs-border-opacity: 0.25;
}

.border-opacity-50 {
  --bs-border-opacity: 0.5;
}

.border-opacity-75 {
  --bs-border-opacity: 0.75;
}

.border-opacity-100 {
  --bs-border-opacity: 1;
}

.w-25 {
  width: 25% !important;
}

.w-50 {
  width: 50% !important;
}

.w-75 {
  width: 75% !important;
}

.w-100 {
  width: 100% !important;
}

.w-auto {
  width: auto !important;
}

.mw-100 {
  max-width: 100% !important;
}

.vw-100 {
  width: 100vw !important;
}

.min-vw-100 {
  min-width: 100vw !important;
}

.h-25 {
  height: 25% !important;
}

.h-50 {
  height: 50% !important;
}

.h-75 {
  height: 75% !important;
}

.h-100 {
  height: 100% !important;
}

.h-auto {
  height: auto !important;
}

.mh-100 {
  max-height: 100% !important;
}

.vh-100 {
  height: 100vh !important;
}

.min-vh-100 {
  min-height: 100vh !important;
}

.flex-fill {
  flex: 1 1 auto !important;
}

.flex-row {
  flex-direction: row !important;
}

.flex-column {
  flex-direction: column !important;
}

.flex-row-reverse {
  flex-direction: row-reverse !important;
}

.flex-column-reverse {
  flex-direction: column-reverse !important;
}

.flex-grow-0 {
  flex-grow: 0 !important;
}

.flex-grow-1 {
  flex-grow: 1 !important;
}

.flex-shrink-0 {
  flex-shrink: 0 !important;
}

.flex-shrink-1 {
  flex-shrink: 1 !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

.justify-content-evenly {
  justify-content: space-evenly !important;
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-end {
  align-items: flex-end !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-baseline {
  align-items: baseline !important;
}

.align-items-stretch {
  align-items: stretch !important;
}

.align-content-start {
  align-content: flex-start !important;
}

.align-content-end {
  align-content: flex-end !important;
}

.align-content-center {
  align-content: center !important;
}

.align-content-between {
  align-content: space-between !important;
}

.align-content-around {
  align-content: space-around !important;
}

.align-content-stretch {
  align-content: stretch !important;
}

.align-self-auto {
  align-self: auto !important;
}

.align-self-start {
  align-self: flex-start !important;
}

.align-self-end {
  align-self: flex-end !important;
}

.align-self-center {
  align-self: center !important;
}

.align-self-baseline {
  align-self: baseline !important;
}

.align-self-stretch {
  align-self: stretch !important;
}

.order-first {
  order: -1 !important;
}

.order-0 {
  order: 0 !important;
}

.order-1 {
  order: 1 !important;
}

.order-2 {
  order: 2 !important;
}

.order-3 {
  order: 3 !important;
}

.order-4 {
  order: 4 !important;
}

.order-5 {
  order: 5 !important;
}

.order-last {
  order: 6 !important;
}

.m-0 {
  margin: 0 !important;
}

.m-1 {
  margin: 0.25rem !important;
}

.m-2 {
  margin: 0.5rem !important;
}

.m-3 {
  margin: 1rem !important;
}

.m-4 {
  margin: 1.5rem !important;
}

.m-5 {
  margin: 3rem !important;
}

.m-auto {
  margin: auto !important;
}

.mx-0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

.mx-1 {
  margin-right: 0.25rem !important;
  margin-left: 0.25rem !important;
}

.mx-2 {
  margin-right: 0.5rem !important;
  margin-left: 0.5rem !important;
}

.mx-3 {
  margin-right: 1rem !important;
  margin-left: 1rem !important;
}

.mx-4 {
  margin-right: 1.5rem !important;
  margin-left: 1.5rem !important;
}

.mx-5 {
  margin-right: 3rem !important;
  margin-left: 3rem !important;
}

.mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}

.my-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.my-1 {
  margin-top: 0.25rem !important;
  margin-bottom: 0.25rem !important;
}

.my-2 {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}

.my-3 {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}

.my-4 {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}

.my-5 {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}

.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

.mt-0 {
  margin-top: 0 !important;
}

.mt-1 {
  margin-top: 0.25rem !important;
}

.mt-2 {
  margin-top: 0.5rem !important;
}

.mt-3 {
  margin-top: 1rem !important;
}

.mt-4 {
  margin-top: 1.5rem !important;
}

.mt-5 {
  margin-top: 3rem !important;
}

.mt-auto {
  margin-top: auto !important;
}

.me-0 {
  margin-right: 0 !important;
}

.me-1 {
  margin-right: 0.25rem !important;
}

.me-2 {
  margin-right: 0.5rem !important;
}

.me-3 {
  margin-right: 1rem !important;
}

.me-4 {
  margin-right: 1.5rem !important;
}

.me-5 {
  margin-right: 3rem !important;
}

.me-auto {
  margin-right: auto !important;
}

.mb-0 {
  margin-bottom: 0 !important;
}

.mb-1 {
  margin-bottom: 0.25rem !important;
}

.mb-2 {
  margin-bottom: 0.5rem !important;
}

.mb-3 {
  margin-bottom: 1rem !important;
}

.mb-4 {
  margin-bottom: 1.5rem !important;
}

.mb-5 {
  margin-bottom: 3rem !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.ms-0 {
  margin-left: 0 !important;
}

.ms-1 {
  margin-left: 0.25rem !important;
}

.ms-2 {
  margin-left: 0.5rem !important;
}

.ms-3 {
  margin-left: 1rem !important;
}

.ms-4 {
  margin-left: 1.5rem !important;
}

.ms-5 {
  margin-left: 3rem !important;
}

.ms-auto {
  margin-left: auto !important;
}

.p-0 {
  padding: 0 !important;
}

.p-1 {
  padding: 0.25rem !important;
}

.p-2 {
  padding: 0.5rem !important;
}

.p-3 {
  padding: 1rem !important;
}

.p-4 {
  padding: 1.5rem !important;
}

.p-5 {
  padding: 3rem !important;
}

.px-0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.px-1 {
  padding-right: 0.25rem !important;
  padding-left: 0.25rem !important;
}

.px-2 {
  padding-right: 0.5rem !important;
  padding-left: 0.5rem !important;
}

.px-3 {
  padding-right: 1rem !important;
  padding-left: 1rem !important;
}

.px-4 {
  padding-right: 1.5rem !important;
  padding-left: 1.5rem !important;
}

.px-5 {
  padding-right: 3rem !important;
  padding-left: 3rem !important;
}

.py-0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}

.py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}

.py-3 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}

.py-4 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}

.py-5 {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}

.pt-0 {
  padding-top: 0 !important;
}

.pt-1 {
  padding-top: 0.25rem !important;
}

.pt-2 {
  padding-top: 0.5rem !important;
}

.pt-3 {
  padding-top: 1rem !important;
}

.pt-4 {
  padding-top: 1.5rem !important;
}

.pt-5 {
  padding-top: 3rem !important;
}

.pe-0 {
  padding-right: 0 !important;
}

.pe-1 {
  padding-right: 0.25rem !important;
}

.pe-2 {
  padding-right: 0.5rem !important;
}

.pe-3 {
  padding-right: 1rem !important;
}

.pe-4 {
  padding-right: 1.5rem !important;
}

.pe-5 {
  padding-right: 3rem !important;
}

.pb-0 {
  padding-bottom: 0 !important;
}

.pb-1 {
  padding-bottom: 0.25rem !important;
}

.pb-2 {
  padding-bottom: 0.5rem !important;
}

.pb-3 {
  padding-bottom: 1rem !important;
}

.pb-4 {
  padding-bottom: 1.5rem !important;
}

.pb-5 {
  padding-bottom: 3rem !important;
}

.ps-0 {
  padding-left: 0 !important;
}

.ps-1 {
  padding-left: 0.25rem !important;
}

.ps-2 {
  padding-left: 0.5rem !important;
}

.ps-3 {
  padding-left: 1rem !important;
}

.ps-4 {
  padding-left: 1.5rem !important;
}

.ps-5 {
  padding-left: 3rem !important;
}

.gap-0 {
  gap: 0 !important;
}

.gap-1 {
  gap: 0.25rem !important;
}

.gap-2 {
  gap: 0.5rem !important;
}

.gap-3 {
  gap: 1rem !important;
}

.gap-4 {
  gap: 1.5rem !important;
}

.gap-5 {
  gap: 3rem !important;
}

.row-gap-0 {
  row-gap: 0 !important;
}

.row-gap-1 {
  row-gap: 0.25rem !important;
}

.row-gap-2 {
  row-gap: 0.5rem !important;
}

.row-gap-3 {
  row-gap: 1rem !important;
}

.row-gap-4 {
  row-gap: 1.5rem !important;
}

.row-gap-5 {
  row-gap: 3rem !important;
}

.column-gap-0 {
  -moz-column-gap: 0 !important;
  column-gap: 0 !important;
}

.column-gap-1 {
  -moz-column-gap: 0.25rem !important;
  column-gap: 0.25rem !important;
}

.column-gap-2 {
  -moz-column-gap: 0.5rem !important;
  column-gap: 0.5rem !important;
}

.column-gap-3 {
  -moz-column-gap: 1rem !important;
  column-gap: 1rem !important;
}

.column-gap-4 {
  -moz-column-gap: 1.5rem !important;
  column-gap: 1.5rem !important;
}

.column-gap-5 {
  -moz-column-gap: 3rem !important;
  column-gap: 3rem !important;
}

.font-monospace {
  font-family: var(--bs-font-monospace) !important;
}

.fs-1 {
  font-size: calc(1.375rem + 1.5vw) !important;
}

.fs-2 {
  font-size: calc(1.325rem + 0.9vw) !important;
}

.fs-3 {
  font-size: calc(1.3rem + 0.6vw) !important;
}

.fs-4 {
  font-size: calc(1.275rem + 0.3vw) !important;
}

.fs-5 {
  font-size: 1.25rem !important;
}

.fs-6 {
  font-size: 1rem !important;
}

.fst-italic {
  font-style: italic !important;
}

.fst-normal {
  font-style: normal !important;
}

.fw-lighter {
  font-weight: lighter !important;
}

.fw-light {
  font-weight: 300 !important;
}

.fw-normal {
  font-weight: 400 !important;
}

.fw-medium {
  font-weight: 500 !important;
}

.fw-semibold {
  font-weight: 600 !important;
}

.fw-bold {
  font-weight: 700 !important;
}

.fw-bolder {
  font-weight: bolder !important;
}

.lh-1 {
  line-height: 1 !important;
}

.lh-sm {
  line-height: 1.25 !important;
}

.lh-base {
  line-height: 1.5 !important;
}

.lh-lg {
  line-height: 2 !important;
}

.text-start {
  text-align: left !important;
}

.text-end {
  text-align: right !important;
}

.text-center {
  text-align: center !important;
}

.text-decoration-none {
  text-decoration: none !important;
}

.text-decoration-underline {
  text-decoration: underline !important;
}

.text-decoration-line-through {
  text-decoration: line-through !important;
}

.text-lowercase {
  text-transform: lowercase !important;
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-capitalize {
  text-transform: capitalize !important;
}

.text-wrap {
  white-space: normal !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

/* rtl:begin:remove */
.text-break {
  word-wrap: break-word !important;
  word-break: break-word !important;
}

/* rtl:end:remove */
.text-primary {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;
}

.text-secondary {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;
}

.text-success {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;
}

.text-info {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;
}

.text-warning {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;
}

.text-danger {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;
}

.text-light {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;
}

.text-dark {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;
}

.text-black {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;
}

.text-white {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;
}

.text-body {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity)) !important;
}

.text-muted {
  --bs-text-opacity: 1;
  color: var(--bs-secondary-color) !important;
}

.text-black-50 {
  --bs-text-opacity: 1;
  color: rgba(0, 0, 0, 0.5) !important;
}

.text-white-50 {
  --bs-text-opacity: 1;
  color: rgba(255, 255, 255, 0.5) !important;
}

.text-body-secondary {
  --bs-text-opacity: 1;
  color: var(--bs-secondary-color) !important;
}

.text-body-tertiary {
  --bs-text-opacity: 1;
  color: var(--bs-tertiary-color) !important;
}

.text-body-emphasis {
  --bs-text-opacity: 1;
  color: var(--bs-emphasis-color) !important;
}

.text-reset {
  --bs-text-opacity: 1;
  color: inherit !important;
}

.text-opacity-25 {
  --bs-text-opacity: 0.25;
}

.text-opacity-50 {
  --bs-text-opacity: 0.5;
}

.text-opacity-75 {
  --bs-text-opacity: 0.75;
}

.text-opacity-100 {
  --bs-text-opacity: 1;
}

.text-primary-emphasis {
  color: var(--bs-primary-text-emphasis) !important;
}

.text-secondary-emphasis {
  color: var(--bs-secondary-text-emphasis) !important;
}

.text-success-emphasis {
  color: var(--bs-success-text-emphasis) !important;
}

.text-info-emphasis {
  color: var(--bs-info-text-emphasis) !important;
}

.text-warning-emphasis {
  color: var(--bs-warning-text-emphasis) !important;
}

.text-danger-emphasis {
  color: var(--bs-danger-text-emphasis) !important;
}

.text-light-emphasis {
  color: var(--bs-light-text-emphasis) !important;
}

.text-dark-emphasis {
  color: var(--bs-dark-text-emphasis) !important;
}

.link-opacity-10 {
  --bs-link-opacity: 0.1;
}

.link-opacity-10-hover:hover {
  --bs-link-opacity: 0.1;
}

.link-opacity-25 {
  --bs-link-opacity: 0.25;
}

.link-opacity-25-hover:hover {
  --bs-link-opacity: 0.25;
}

.link-opacity-50 {
  --bs-link-opacity: 0.5;
}

.link-opacity-50-hover:hover {
  --bs-link-opacity: 0.5;
}

.link-opacity-75 {
  --bs-link-opacity: 0.75;
}

.link-opacity-75-hover:hover {
  --bs-link-opacity: 0.75;
}

.link-opacity-100 {
  --bs-link-opacity: 1;
}

.link-opacity-100-hover:hover {
  --bs-link-opacity: 1;
}

.link-offset-1 {
  text-underline-offset: 0.125em !important;
}

.link-offset-1-hover:hover {
  text-underline-offset: 0.125em !important;
}

.link-offset-2 {
  text-underline-offset: 0.25em !important;
}

.link-offset-2-hover:hover {
  text-underline-offset: 0.25em !important;
}

.link-offset-3 {
  text-underline-offset: 0.375em !important;
}

.link-offset-3-hover:hover {
  text-underline-offset: 0.375em !important;
}

.link-underline-primary {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-primary-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-primary-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-secondary {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-secondary-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-secondary-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-success {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-success-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-success-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-info {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-info-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-info-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-warning {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-warning-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-warning-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-danger {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-danger-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-danger-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-light {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-light-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-light-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline-dark {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-dark-rgb), var(--bs-link-underline-opacity)) !important;
  text-decoration-color: rgba(var(--bs-dark-rgb), var(--bs-link-underline-opacity)) !important;
}

.link-underline {
  --bs-link-underline-opacity: 1;
  -webkit-text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
  text-decoration-color: rgba(var(--bs-link-color-rgb), var(--bs-link-underline-opacity, 1)) !important;
}

.link-underline-opacity-0 {
  --bs-link-underline-opacity: 0;
}

.link-underline-opacity-0-hover:hover {
  --bs-link-underline-opacity: 0;
}

.link-underline-opacity-10 {
  --bs-link-underline-opacity: 0.1;
}

.link-underline-opacity-10-hover:hover {
  --bs-link-underline-opacity: 0.1;
}

.link-underline-opacity-25 {
  --bs-link-underline-opacity: 0.25;
}

.link-underline-opacity-25-hover:hover {
  --bs-link-underline-opacity: 0.25;
}

.link-underline-opacity-50 {
  --bs-link-underline-opacity: 0.5;
}

.link-underline-opacity-50-hover:hover {
  --bs-link-underline-opacity: 0.5;
}

.link-underline-opacity-75 {
  --bs-link-underline-opacity: 0.75;
}

.link-underline-opacity-75-hover:hover {
  --bs-link-underline-opacity: 0.75;
}

.link-underline-opacity-100 {
  --bs-link-underline-opacity: 1;
}

.link-underline-opacity-100-hover:hover {
  --bs-link-underline-opacity: 1;
}

.bg-primary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;
}

.bg-secondary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;
}

.bg-success {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;
}

.bg-info {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;
}

.bg-warning {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;
}

.bg-danger {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;
}

.bg-light {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;
}

.bg-dark {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;
}

.bg-black {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;
}

.bg-white {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;
}

.bg-body {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity)) !important;
}

.bg-transparent {
  --bs-bg-opacity: 1;
  background-color: transparent !important;
}

.bg-body-secondary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-secondary-bg-rgb), var(--bs-bg-opacity)) !important;
}

.bg-body-tertiary {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-tertiary-bg-rgb), var(--bs-bg-opacity)) !important;
}

.bg-opacity-10 {
  --bs-bg-opacity: 0.1;
}

.bg-opacity-25 {
  --bs-bg-opacity: 0.25;
}

.bg-opacity-50 {
  --bs-bg-opacity: 0.5;
}

.bg-opacity-75 {
  --bs-bg-opacity: 0.75;
}

.bg-opacity-100 {
  --bs-bg-opacity: 1;
}

.bg-primary-subtle {
  background-color: var(--bs-primary-bg-subtle) !important;
}

.bg-secondary-subtle {
  background-color: var(--bs-secondary-bg-subtle) !important;
}

.bg-success-subtle {
  background-color: var(--bs-success-bg-subtle) !important;
}

.bg-info-subtle {
  background-color: var(--bs-info-bg-subtle) !important;
}

.bg-warning-subtle {
  background-color: var(--bs-warning-bg-subtle) !important;
}

.bg-danger-subtle {
  background-color: var(--bs-danger-bg-subtle) !important;
}

.bg-light-subtle {
  background-color: var(--bs-light-bg-subtle) !important;
}

.bg-dark-subtle {
  background-color: var(--bs-dark-bg-subtle) !important;
}

.bg-gradient {
  background-image: var(--bs-gradient) !important;
}

.user-select-all {
  -webkit-user-select: all !important;
  -moz-user-select: all !important;
  user-select: all !important;
}

.user-select-auto {
  -webkit-user-select: auto !important;
  -moz-user-select: auto !important;
  user-select: auto !important;
}

.user-select-none {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  user-select: none !important;
}

.pe-none {
  pointer-events: none !important;
}

.pe-auto {
  pointer-events: auto !important;
}

.rounded {
  border-radius: var(--bs-border-radius) !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

.rounded-1 {
  border-radius: var(--bs-border-radius-sm) !important;
}

.rounded-2 {
  border-radius: var(--bs-border-radius) !important;
}

.rounded-3 {
  border-radius: var(--bs-border-radius-lg) !important;
}

.rounded-4 {
  border-radius: var(--bs-border-radius-xl) !important;
}

.rounded-5 {
  border-radius: var(--bs-border-radius-xxl) !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-pill {
  border-radius: var(--bs-border-radius-pill) !important;
}

.rounded-top {
  border-top-left-radius: var(--bs-border-radius) !important;
  border-top-right-radius: var(--bs-border-radius) !important;
}

.rounded-top-0 {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.rounded-top-1 {
  border-top-left-radius: var(--bs-border-radius-sm) !important;
  border-top-right-radius: var(--bs-border-radius-sm) !important;
}

.rounded-top-2 {
  border-top-left-radius: var(--bs-border-radius) !important;
  border-top-right-radius: var(--bs-border-radius) !important;
}

.rounded-top-3 {
  border-top-left-radius: var(--bs-border-radius-lg) !important;
  border-top-right-radius: var(--bs-border-radius-lg) !important;
}

.rounded-top-4 {
  border-top-left-radius: var(--bs-border-radius-xl) !important;
  border-top-right-radius: var(--bs-border-radius-xl) !important;
}

.rounded-top-5 {
  border-top-left-radius: var(--bs-border-radius-xxl) !important;
  border-top-right-radius: var(--bs-border-radius-xxl) !important;
}

.rounded-top-circle {
  border-top-left-radius: 50% !important;
  border-top-right-radius: 50% !important;
}

.rounded-top-pill {
  border-top-left-radius: var(--bs-border-radius-pill) !important;
  border-top-right-radius: var(--bs-border-radius-pill) !important;
}

.rounded-end {
  border-top-right-radius: var(--bs-border-radius) !important;
  border-bottom-right-radius: var(--bs-border-radius) !important;
}

.rounded-end-0 {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.rounded-end-1 {
  border-top-right-radius: var(--bs-border-radius-sm) !important;
  border-bottom-right-radius: var(--bs-border-radius-sm) !important;
}

.rounded-end-2 {
  border-top-right-radius: var(--bs-border-radius) !important;
  border-bottom-right-radius: var(--bs-border-radius) !important;
}

.rounded-end-3 {
  border-top-right-radius: var(--bs-border-radius-lg) !important;
  border-bottom-right-radius: var(--bs-border-radius-lg) !important;
}

.rounded-end-4 {
  border-top-right-radius: var(--bs-border-radius-xl) !important;
  border-bottom-right-radius: var(--bs-border-radius-xl) !important;
}

.rounded-end-5 {
  border-top-right-radius: var(--bs-border-radius-xxl) !important;
  border-bottom-right-radius: var(--bs-border-radius-xxl) !important;
}

.rounded-end-circle {
  border-top-right-radius: 50% !important;
  border-bottom-right-radius: 50% !important;
}

.rounded-end-pill {
  border-top-right-radius: var(--bs-border-radius-pill) !important;
  border-bottom-right-radius: var(--bs-border-radius-pill) !important;
}

.rounded-bottom {
  border-bottom-right-radius: var(--bs-border-radius) !important;
  border-bottom-left-radius: var(--bs-border-radius) !important;
}

.rounded-bottom-0 {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.rounded-bottom-1 {
  border-bottom-right-radius: var(--bs-border-radius-sm) !important;
  border-bottom-left-radius: var(--bs-border-radius-sm) !important;
}

.rounded-bottom-2 {
  border-bottom-right-radius: var(--bs-border-radius) !important;
  border-bottom-left-radius: var(--bs-border-radius) !important;
}

.rounded-bottom-3 {
  border-bottom-right-radius: var(--bs-border-radius-lg) !important;
  border-bottom-left-radius: var(--bs-border-radius-lg) !important;
}

.rounded-bottom-4 {
  border-bottom-right-radius: var(--bs-border-radius-xl) !important;
  border-bottom-left-radius: var(--bs-border-radius-xl) !important;
}

.rounded-bottom-5 {
  border-bottom-right-radius: var(--bs-border-radius-xxl) !important;
  border-bottom-left-radius: var(--bs-border-radius-xxl) !important;
}

.rounded-bottom-circle {
  border-bottom-right-radius: 50% !important;
  border-bottom-left-radius: 50% !important;
}

.rounded-bottom-pill {
  border-bottom-right-radius: var(--bs-border-radius-pill) !important;
  border-bottom-left-radius: var(--bs-border-radius-pill) !important;
}

.rounded-start {
  border-bottom-left-radius: var(--bs-border-radius) !important;
  border-top-left-radius: var(--bs-border-radius) !important;
}

.rounded-start-0 {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}

.rounded-start-1 {
  border-bottom-left-radius: var(--bs-border-radius-sm) !important;
  border-top-left-radius: var(--bs-border-radius-sm) !important;
}

.rounded-start-2 {
  border-bottom-left-radius: var(--bs-border-radius) !important;
  border-top-left-radius: var(--bs-border-radius) !important;
}

.rounded-start-3 {
  border-bottom-left-radius: var(--bs-border-radius-lg) !important;
  border-top-left-radius: var(--bs-border-radius-lg) !important;
}

.rounded-start-4 {
  border-bottom-left-radius: var(--bs-border-radius-xl) !important;
  border-top-left-radius: var(--bs-border-radius-xl) !important;
}

.rounded-start-5 {
  border-bottom-left-radius: var(--bs-border-radius-xxl) !important;
  border-top-left-radius: var(--bs-border-radius-xxl) !important;
}

.rounded-start-circle {
  border-bottom-left-radius: 50% !important;
  border-top-left-radius: 50% !important;
}

.rounded-start-pill {
  border-bottom-left-radius: var(--bs-border-radius-pill) !important;
  border-top-left-radius: var(--bs-border-radius-pill) !important;
}

.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

.z-n1 {
  z-index: -1 !important;
}

.z-0 {
  z-index: 0 !important;
}

.z-1 {
  z-index: 1 !important;
}

.z-2 {
  z-index: 2 !important;
}

.z-3 {
  z-index: 3 !important;
}

@media (min-width: 576px) {
  .float-sm-start {
    float: left !important;
  }
  .float-sm-end {
    float: right !important;
  }
  .float-sm-none {
    float: none !important;
  }
  .object-fit-sm-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .object-fit-sm-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .object-fit-sm-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .object-fit-sm-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .object-fit-sm-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .d-sm-inline {
    display: inline !important;
  }
  .d-sm-inline-block {
    display: inline-block !important;
  }
  .d-sm-block {
    display: block !important;
  }
  .d-sm-grid {
    display: grid !important;
  }
  .d-sm-inline-grid {
    display: inline-grid !important;
  }
  .d-sm-table {
    display: table !important;
  }
  .d-sm-table-row {
    display: table-row !important;
  }
  .d-sm-table-cell {
    display: table-cell !important;
  }
  .d-sm-flex {
    display: flex !important;
  }
  .d-sm-inline-flex {
    display: inline-flex !important;
  }
  .d-sm-none {
    display: none !important;
  }
  .flex-sm-fill {
    flex: 1 1 auto !important;
  }
  .flex-sm-row {
    flex-direction: row !important;
  }
  .flex-sm-column {
    flex-direction: column !important;
  }
  .flex-sm-row-reverse {
    flex-direction: row-reverse !important;
  }
  .flex-sm-column-reverse {
    flex-direction: column-reverse !important;
  }
  .flex-sm-grow-0 {
    flex-grow: 0 !important;
  }
  .flex-sm-grow-1 {
    flex-grow: 1 !important;
  }
  .flex-sm-shrink-0 {
    flex-shrink: 0 !important;
  }
  .flex-sm-shrink-1 {
    flex-shrink: 1 !important;
  }
  .flex-sm-wrap {
    flex-wrap: wrap !important;
  }
  .flex-sm-nowrap {
    flex-wrap: nowrap !important;
  }
  .flex-sm-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-sm-start {
    justify-content: flex-start !important;
  }
  .justify-content-sm-end {
    justify-content: flex-end !important;
  }
  .justify-content-sm-center {
    justify-content: center !important;
  }
  .justify-content-sm-between {
    justify-content: space-between !important;
  }
  .justify-content-sm-around {
    justify-content: space-around !important;
  }
  .justify-content-sm-evenly {
    justify-content: space-evenly !important;
  }
  .align-items-sm-start {
    align-items: flex-start !important;
  }
  .align-items-sm-end {
    align-items: flex-end !important;
  }
  .align-items-sm-center {
    align-items: center !important;
  }
  .align-items-sm-baseline {
    align-items: baseline !important;
  }
  .align-items-sm-stretch {
    align-items: stretch !important;
  }
  .align-content-sm-start {
    align-content: flex-start !important;
  }
  .align-content-sm-end {
    align-content: flex-end !important;
  }
  .align-content-sm-center {
    align-content: center !important;
  }
  .align-content-sm-between {
    align-content: space-between !important;
  }
  .align-content-sm-around {
    align-content: space-around !important;
  }
  .align-content-sm-stretch {
    align-content: stretch !important;
  }
  .align-self-sm-auto {
    align-self: auto !important;
  }
  .align-self-sm-start {
    align-self: flex-start !important;
  }
  .align-self-sm-end {
    align-self: flex-end !important;
  }
  .align-self-sm-center {
    align-self: center !important;
  }
  .align-self-sm-baseline {
    align-self: baseline !important;
  }
  .align-self-sm-stretch {
    align-self: stretch !important;
  }
  .order-sm-first {
    order: -1 !important;
  }
  .order-sm-0 {
    order: 0 !important;
  }
  .order-sm-1 {
    order: 1 !important;
  }
  .order-sm-2 {
    order: 2 !important;
  }
  .order-sm-3 {
    order: 3 !important;
  }
  .order-sm-4 {
    order: 4 !important;
  }
  .order-sm-5 {
    order: 5 !important;
  }
  .order-sm-last {
    order: 6 !important;
  }
  .m-sm-0 {
    margin: 0 !important;
  }
  .m-sm-1 {
    margin: 0.25rem !important;
  }
  .m-sm-2 {
    margin: 0.5rem !important;
  }
  .m-sm-3 {
    margin: 1rem !important;
  }
  .m-sm-4 {
    margin: 1.5rem !important;
  }
  .m-sm-5 {
    margin: 3rem !important;
  }
  .m-sm-auto {
    margin: auto !important;
  }
  .mx-sm-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .mx-sm-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .mx-sm-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .mx-sm-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .mx-sm-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .mx-sm-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .mx-sm-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .my-sm-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .my-sm-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .my-sm-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .my-sm-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .my-sm-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .my-sm-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .my-sm-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .mt-sm-0 {
    margin-top: 0 !important;
  }
  .mt-sm-1 {
    margin-top: 0.25rem !important;
  }
  .mt-sm-2 {
    margin-top: 0.5rem !important;
  }
  .mt-sm-3 {
    margin-top: 1rem !important;
  }
  .mt-sm-4 {
    margin-top: 1.5rem !important;
  }
  .mt-sm-5 {
    margin-top: 3rem !important;
  }
  .mt-sm-auto {
    margin-top: auto !important;
  }
  .me-sm-0 {
    margin-right: 0 !important;
  }
  .me-sm-1 {
    margin-right: 0.25rem !important;
  }
  .me-sm-2 {
    margin-right: 0.5rem !important;
  }
  .me-sm-3 {
    margin-right: 1rem !important;
  }
  .me-sm-4 {
    margin-right: 1.5rem !important;
  }
  .me-sm-5 {
    margin-right: 3rem !important;
  }
  .me-sm-auto {
    margin-right: auto !important;
  }
  .mb-sm-0 {
    margin-bottom: 0 !important;
  }
  .mb-sm-1 {
    margin-bottom: 0.25rem !important;
  }
  .mb-sm-2 {
    margin-bottom: 0.5rem !important;
  }
  .mb-sm-3 {
    margin-bottom: 1rem !important;
  }
  .mb-sm-4 {
    margin-bottom: 1.5rem !important;
  }
  .mb-sm-5 {
    margin-bottom: 3rem !important;
  }
  .mb-sm-auto {
    margin-bottom: auto !important;
  }
  .ms-sm-0 {
    margin-left: 0 !important;
  }
  .ms-sm-1 {
    margin-left: 0.25rem !important;
  }
  .ms-sm-2 {
    margin-left: 0.5rem !important;
  }
  .ms-sm-3 {
    margin-left: 1rem !important;
  }
  .ms-sm-4 {
    margin-left: 1.5rem !important;
  }
  .ms-sm-5 {
    margin-left: 3rem !important;
  }
  .ms-sm-auto {
    margin-left: auto !important;
  }
  .p-sm-0 {
    padding: 0 !important;
  }
  .p-sm-1 {
    padding: 0.25rem !important;
  }
  .p-sm-2 {
    padding: 0.5rem !important;
  }
  .p-sm-3 {
    padding: 1rem !important;
  }
  .p-sm-4 {
    padding: 1.5rem !important;
  }
  .p-sm-5 {
    padding: 3rem !important;
  }
  .px-sm-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .px-sm-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .px-sm-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .px-sm-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .px-sm-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .px-sm-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .py-sm-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .py-sm-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .py-sm-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .py-sm-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .py-sm-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .py-sm-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .pt-sm-0 {
    padding-top: 0 !important;
  }
  .pt-sm-1 {
    padding-top: 0.25rem !important;
  }
  .pt-sm-2 {
    padding-top: 0.5rem !important;
  }
  .pt-sm-3 {
    padding-top: 1rem !important;
  }
  .pt-sm-4 {
    padding-top: 1.5rem !important;
  }
  .pt-sm-5 {
    padding-top: 3rem !important;
  }
  .pe-sm-0 {
    padding-right: 0 !important;
  }
  .pe-sm-1 {
    padding-right: 0.25rem !important;
  }
  .pe-sm-2 {
    padding-right: 0.5rem !important;
  }
  .pe-sm-3 {
    padding-right: 1rem !important;
  }
  .pe-sm-4 {
    padding-right: 1.5rem !important;
  }
  .pe-sm-5 {
    padding-right: 3rem !important;
  }
  .pb-sm-0 {
    padding-bottom: 0 !important;
  }
  .pb-sm-1 {
    padding-bottom: 0.25rem !important;
  }
  .pb-sm-2 {
    padding-bottom: 0.5rem !important;
  }
  .pb-sm-3 {
    padding-bottom: 1rem !important;
  }
  .pb-sm-4 {
    padding-bottom: 1.5rem !important;
  }
  .pb-sm-5 {
    padding-bottom: 3rem !important;
  }
  .ps-sm-0 {
    padding-left: 0 !important;
  }
  .ps-sm-1 {
    padding-left: 0.25rem !important;
  }
  .ps-sm-2 {
    padding-left: 0.5rem !important;
  }
  .ps-sm-3 {
    padding-left: 1rem !important;
  }
  .ps-sm-4 {
    padding-left: 1.5rem !important;
  }
  .ps-sm-5 {
    padding-left: 3rem !important;
  }
  .gap-sm-0 {
    gap: 0 !important;
  }
  .gap-sm-1 {
    gap: 0.25rem !important;
  }
  .gap-sm-2 {
    gap: 0.5rem !important;
  }
  .gap-sm-3 {
    gap: 1rem !important;
  }
  .gap-sm-4 {
    gap: 1.5rem !important;
  }
  .gap-sm-5 {
    gap: 3rem !important;
  }
  .row-gap-sm-0 {
    row-gap: 0 !important;
  }
  .row-gap-sm-1 {
    row-gap: 0.25rem !important;
  }
  .row-gap-sm-2 {
    row-gap: 0.5rem !important;
  }
  .row-gap-sm-3 {
    row-gap: 1rem !important;
  }
  .row-gap-sm-4 {
    row-gap: 1.5rem !important;
  }
  .row-gap-sm-5 {
    row-gap: 3rem !important;
  }
  .column-gap-sm-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .column-gap-sm-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .column-gap-sm-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .column-gap-sm-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .column-gap-sm-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .column-gap-sm-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .text-sm-start {
    text-align: left !important;
  }
  .text-sm-end {
    text-align: right !important;
  }
  .text-sm-center {
    text-align: center !important;
  }
}
@media (min-width: 768px) {
  .float-md-start {
    float: left !important;
  }
  .float-md-end {
    float: right !important;
  }
  .float-md-none {
    float: none !important;
  }
  .object-fit-md-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .object-fit-md-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .object-fit-md-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .object-fit-md-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .object-fit-md-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .d-md-inline {
    display: inline !important;
  }
  .d-md-inline-block {
    display: inline-block !important;
  }
  .d-md-block {
    display: block !important;
  }
  .d-md-grid {
    display: grid !important;
  }
  .d-md-inline-grid {
    display: inline-grid !important;
  }
  .d-md-table {
    display: table !important;
  }
  .d-md-table-row {
    display: table-row !important;
  }
  .d-md-table-cell {
    display: table-cell !important;
  }
  .d-md-flex {
    display: flex !important;
  }
  .d-md-inline-flex {
    display: inline-flex !important;
  }
  .d-md-none {
    display: none !important;
  }
  .flex-md-fill {
    flex: 1 1 auto !important;
  }
  .flex-md-row {
    flex-direction: row !important;
  }
  .flex-md-column {
    flex-direction: column !important;
  }
  .flex-md-row-reverse {
    flex-direction: row-reverse !important;
  }
  .flex-md-column-reverse {
    flex-direction: column-reverse !important;
  }
  .flex-md-grow-0 {
    flex-grow: 0 !important;
  }
  .flex-md-grow-1 {
    flex-grow: 1 !important;
  }
  .flex-md-shrink-0 {
    flex-shrink: 0 !important;
  }
  .flex-md-shrink-1 {
    flex-shrink: 1 !important;
  }
  .flex-md-wrap {
    flex-wrap: wrap !important;
  }
  .flex-md-nowrap {
    flex-wrap: nowrap !important;
  }
  .flex-md-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-md-start {
    justify-content: flex-start !important;
  }
  .justify-content-md-end {
    justify-content: flex-end !important;
  }
  .justify-content-md-center {
    justify-content: center !important;
  }
  .justify-content-md-between {
    justify-content: space-between !important;
  }
  .justify-content-md-around {
    justify-content: space-around !important;
  }
  .justify-content-md-evenly {
    justify-content: space-evenly !important;
  }
  .align-items-md-start {
    align-items: flex-start !important;
  }
  .align-items-md-end {
    align-items: flex-end !important;
  }
  .align-items-md-center {
    align-items: center !important;
  }
  .align-items-md-baseline {
    align-items: baseline !important;
  }
  .align-items-md-stretch {
    align-items: stretch !important;
  }
  .align-content-md-start {
    align-content: flex-start !important;
  }
  .align-content-md-end {
    align-content: flex-end !important;
  }
  .align-content-md-center {
    align-content: center !important;
  }
  .align-content-md-between {
    align-content: space-between !important;
  }
  .align-content-md-around {
    align-content: space-around !important;
  }
  .align-content-md-stretch {
    align-content: stretch !important;
  }
  .align-self-md-auto {
    align-self: auto !important;
  }
  .align-self-md-start {
    align-self: flex-start !important;
  }
  .align-self-md-end {
    align-self: flex-end !important;
  }
  .align-self-md-center {
    align-self: center !important;
  }
  .align-self-md-baseline {
    align-self: baseline !important;
  }
  .align-self-md-stretch {
    align-self: stretch !important;
  }
  .order-md-first {
    order: -1 !important;
  }
  .order-md-0 {
    order: 0 !important;
  }
  .order-md-1 {
    order: 1 !important;
  }
  .order-md-2 {
    order: 2 !important;
  }
  .order-md-3 {
    order: 3 !important;
  }
  .order-md-4 {
    order: 4 !important;
  }
  .order-md-5 {
    order: 5 !important;
  }
  .order-md-last {
    order: 6 !important;
  }
  .m-md-0 {
    margin: 0 !important;
  }
  .m-md-1 {
    margin: 0.25rem !important;
  }
  .m-md-2 {
    margin: 0.5rem !important;
  }
  .m-md-3 {
    margin: 1rem !important;
  }
  .m-md-4 {
    margin: 1.5rem !important;
  }
  .m-md-5 {
    margin: 3rem !important;
  }
  .m-md-auto {
    margin: auto !important;
  }
  .mx-md-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .mx-md-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .mx-md-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .mx-md-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .mx-md-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .mx-md-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .mx-md-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .my-md-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .my-md-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .my-md-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .my-md-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .my-md-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .my-md-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .my-md-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .mt-md-0 {
    margin-top: 0 !important;
  }
  .mt-md-1 {
    margin-top: 0.25rem !important;
  }
  .mt-md-2 {
    margin-top: 0.5rem !important;
  }
  .mt-md-3 {
    margin-top: 1rem !important;
  }
  .mt-md-4 {
    margin-top: 1.5rem !important;
  }
  .mt-md-5 {
    margin-top: 3rem !important;
  }
  .mt-md-auto {
    margin-top: auto !important;
  }
  .me-md-0 {
    margin-right: 0 !important;
  }
  .me-md-1 {
    margin-right: 0.25rem !important;
  }
  .me-md-2 {
    margin-right: 0.5rem !important;
  }
  .me-md-3 {
    margin-right: 1rem !important;
  }
  .me-md-4 {
    margin-right: 1.5rem !important;
  }
  .me-md-5 {
    margin-right: 3rem !important;
  }
  .me-md-auto {
    margin-right: auto !important;
  }
  .mb-md-0 {
    margin-bottom: 0 !important;
  }
  .mb-md-1 {
    margin-bottom: 0.25rem !important;
  }
  .mb-md-2 {
    margin-bottom: 0.5rem !important;
  }
  .mb-md-3 {
    margin-bottom: 1rem !important;
  }
  .mb-md-4 {
    margin-bottom: 1.5rem !important;
  }
  .mb-md-5 {
    margin-bottom: 3rem !important;
  }
  .mb-md-auto {
    margin-bottom: auto !important;
  }
  .ms-md-0 {
    margin-left: 0 !important;
  }
  .ms-md-1 {
    margin-left: 0.25rem !important;
  }
  .ms-md-2 {
    margin-left: 0.5rem !important;
  }
  .ms-md-3 {
    margin-left: 1rem !important;
  }
  .ms-md-4 {
    margin-left: 1.5rem !important;
  }
  .ms-md-5 {
    margin-left: 3rem !important;
  }
  .ms-md-auto {
    margin-left: auto !important;
  }
  .p-md-0 {
    padding: 0 !important;
  }
  .p-md-1 {
    padding: 0.25rem !important;
  }
  .p-md-2 {
    padding: 0.5rem !important;
  }
  .p-md-3 {
    padding: 1rem !important;
  }
  .p-md-4 {
    padding: 1.5rem !important;
  }
  .p-md-5 {
    padding: 3rem !important;
  }
  .px-md-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .px-md-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .px-md-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .px-md-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .px-md-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .px-md-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .py-md-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .py-md-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .py-md-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .py-md-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .py-md-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .py-md-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .pt-md-0 {
    padding-top: 0 !important;
  }
  .pt-md-1 {
    padding-top: 0.25rem !important;
  }
  .pt-md-2 {
    padding-top: 0.5rem !important;
  }
  .pt-md-3 {
    padding-top: 1rem !important;
  }
  .pt-md-4 {
    padding-top: 1.5rem !important;
  }
  .pt-md-5 {
    padding-top: 3rem !important;
  }
  .pe-md-0 {
    padding-right: 0 !important;
  }
  .pe-md-1 {
    padding-right: 0.25rem !important;
  }
  .pe-md-2 {
    padding-right: 0.5rem !important;
  }
  .pe-md-3 {
    padding-right: 1rem !important;
  }
  .pe-md-4 {
    padding-right: 1.5rem !important;
  }
  .pe-md-5 {
    padding-right: 3rem !important;
  }
  .pb-md-0 {
    padding-bottom: 0 !important;
  }
  .pb-md-1 {
    padding-bottom: 0.25rem !important;
  }
  .pb-md-2 {
    padding-bottom: 0.5rem !important;
  }
  .pb-md-3 {
    padding-bottom: 1rem !important;
  }
  .pb-md-4 {
    padding-bottom: 1.5rem !important;
  }
  .pb-md-5 {
    padding-bottom: 3rem !important;
  }
  .ps-md-0 {
    padding-left: 0 !important;
  }
  .ps-md-1 {
    padding-left: 0.25rem !important;
  }
  .ps-md-2 {
    padding-left: 0.5rem !important;
  }
  .ps-md-3 {
    padding-left: 1rem !important;
  }
  .ps-md-4 {
    padding-left: 1.5rem !important;
  }
  .ps-md-5 {
    padding-left: 3rem !important;
  }
  .gap-md-0 {
    gap: 0 !important;
  }
  .gap-md-1 {
    gap: 0.25rem !important;
  }
  .gap-md-2 {
    gap: 0.5rem !important;
  }
  .gap-md-3 {
    gap: 1rem !important;
  }
  .gap-md-4 {
    gap: 1.5rem !important;
  }
  .gap-md-5 {
    gap: 3rem !important;
  }
  .row-gap-md-0 {
    row-gap: 0 !important;
  }
  .row-gap-md-1 {
    row-gap: 0.25rem !important;
  }
  .row-gap-md-2 {
    row-gap: 0.5rem !important;
  }
  .row-gap-md-3 {
    row-gap: 1rem !important;
  }
  .row-gap-md-4 {
    row-gap: 1.5rem !important;
  }
  .row-gap-md-5 {
    row-gap: 3rem !important;
  }
  .column-gap-md-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .column-gap-md-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .column-gap-md-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .column-gap-md-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .column-gap-md-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .column-gap-md-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .text-md-start {
    text-align: left !important;
  }
  .text-md-end {
    text-align: right !important;
  }
  .text-md-center {
    text-align: center !important;
  }
}
@media (min-width: 992px) {
  .float-lg-start {
    float: left !important;
  }
  .float-lg-end {
    float: right !important;
  }
  .float-lg-none {
    float: none !important;
  }
  .object-fit-lg-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .object-fit-lg-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .object-fit-lg-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .object-fit-lg-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .object-fit-lg-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .d-lg-inline {
    display: inline !important;
  }
  .d-lg-inline-block {
    display: inline-block !important;
  }
  .d-lg-block {
    display: block !important;
  }
  .d-lg-grid {
    display: grid !important;
  }
  .d-lg-inline-grid {
    display: inline-grid !important;
  }
  .d-lg-table {
    display: table !important;
  }
  .d-lg-table-row {
    display: table-row !important;
  }
  .d-lg-table-cell {
    display: table-cell !important;
  }
  .d-lg-flex {
    display: flex !important;
  }
  .d-lg-inline-flex {
    display: inline-flex !important;
  }
  .d-lg-none {
    display: none !important;
  }
  .flex-lg-fill {
    flex: 1 1 auto !important;
  }
  .flex-lg-row {
    flex-direction: row !important;
  }
  .flex-lg-column {
    flex-direction: column !important;
  }
  .flex-lg-row-reverse {
    flex-direction: row-reverse !important;
  }
  .flex-lg-column-reverse {
    flex-direction: column-reverse !important;
  }
  .flex-lg-grow-0 {
    flex-grow: 0 !important;
  }
  .flex-lg-grow-1 {
    flex-grow: 1 !important;
  }
  .flex-lg-shrink-0 {
    flex-shrink: 0 !important;
  }
  .flex-lg-shrink-1 {
    flex-shrink: 1 !important;
  }
  .flex-lg-wrap {
    flex-wrap: wrap !important;
  }
  .flex-lg-nowrap {
    flex-wrap: nowrap !important;
  }
  .flex-lg-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-lg-start {
    justify-content: flex-start !important;
  }
  .justify-content-lg-end {
    justify-content: flex-end !important;
  }
  .justify-content-lg-center {
    justify-content: center !important;
  }
  .justify-content-lg-between {
    justify-content: space-between !important;
  }
  .justify-content-lg-around {
    justify-content: space-around !important;
  }
  .justify-content-lg-evenly {
    justify-content: space-evenly !important;
  }
  .align-items-lg-start {
    align-items: flex-start !important;
  }
  .align-items-lg-end {
    align-items: flex-end !important;
  }
  .align-items-lg-center {
    align-items: center !important;
  }
  .align-items-lg-baseline {
    align-items: baseline !important;
  }
  .align-items-lg-stretch {
    align-items: stretch !important;
  }
  .align-content-lg-start {
    align-content: flex-start !important;
  }
  .align-content-lg-end {
    align-content: flex-end !important;
  }
  .align-content-lg-center {
    align-content: center !important;
  }
  .align-content-lg-between {
    align-content: space-between !important;
  }
  .align-content-lg-around {
    align-content: space-around !important;
  }
  .align-content-lg-stretch {
    align-content: stretch !important;
  }
  .align-self-lg-auto {
    align-self: auto !important;
  }
  .align-self-lg-start {
    align-self: flex-start !important;
  }
  .align-self-lg-end {
    align-self: flex-end !important;
  }
  .align-self-lg-center {
    align-self: center !important;
  }
  .align-self-lg-baseline {
    align-self: baseline !important;
  }
  .align-self-lg-stretch {
    align-self: stretch !important;
  }
  .order-lg-first {
    order: -1 !important;
  }
  .order-lg-0 {
    order: 0 !important;
  }
  .order-lg-1 {
    order: 1 !important;
  }
  .order-lg-2 {
    order: 2 !important;
  }
  .order-lg-3 {
    order: 3 !important;
  }
  .order-lg-4 {
    order: 4 !important;
  }
  .order-lg-5 {
    order: 5 !important;
  }
  .order-lg-last {
    order: 6 !important;
  }
  .m-lg-0 {
    margin: 0 !important;
  }
  .m-lg-1 {
    margin: 0.25rem !important;
  }
  .m-lg-2 {
    margin: 0.5rem !important;
  }
  .m-lg-3 {
    margin: 1rem !important;
  }
  .m-lg-4 {
    margin: 1.5rem !important;
  }
  .m-lg-5 {
    margin: 3rem !important;
  }
  .m-lg-auto {
    margin: auto !important;
  }
  .mx-lg-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .mx-lg-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .mx-lg-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .mx-lg-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .mx-lg-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .mx-lg-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .mx-lg-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .my-lg-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .my-lg-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .my-lg-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .my-lg-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .my-lg-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .my-lg-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .my-lg-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .mt-lg-0 {
    margin-top: 0 !important;
  }
  .mt-lg-1 {
    margin-top: 0.25rem !important;
  }
  .mt-lg-2 {
    margin-top: 0.5rem !important;
  }
  .mt-lg-3 {
    margin-top: 1rem !important;
  }
  .mt-lg-4 {
    margin-top: 1.5rem !important;
  }
  .mt-lg-5 {
    margin-top: 3rem !important;
  }
  .mt-lg-auto {
    margin-top: auto !important;
  }
  .me-lg-0 {
    margin-right: 0 !important;
  }
  .me-lg-1 {
    margin-right: 0.25rem !important;
  }
  .me-lg-2 {
    margin-right: 0.5rem !important;
  }
  .me-lg-3 {
    margin-right: 1rem !important;
  }
  .me-lg-4 {
    margin-right: 1.5rem !important;
  }
  .me-lg-5 {
    margin-right: 3rem !important;
  }
  .me-lg-auto {
    margin-right: auto !important;
  }
  .mb-lg-0 {
    margin-bottom: 0 !important;
  }
  .mb-lg-1 {
    margin-bottom: 0.25rem !important;
  }
  .mb-lg-2 {
    margin-bottom: 0.5rem !important;
  }
  .mb-lg-3 {
    margin-bottom: 1rem !important;
  }
  .mb-lg-4 {
    margin-bottom: 1.5rem !important;
  }
  .mb-lg-5 {
    margin-bottom: 3rem !important;
  }
  .mb-lg-auto {
    margin-bottom: auto !important;
  }
  .ms-lg-0 {
    margin-left: 0 !important;
  }
  .ms-lg-1 {
    margin-left: 0.25rem !important;
  }
  .ms-lg-2 {
    margin-left: 0.5rem !important;
  }
  .ms-lg-3 {
    margin-left: 1rem !important;
  }
  .ms-lg-4 {
    margin-left: 1.5rem !important;
  }
  .ms-lg-5 {
    margin-left: 3rem !important;
  }
  .ms-lg-auto {
    margin-left: auto !important;
  }
  .p-lg-0 {
    padding: 0 !important;
  }
  .p-lg-1 {
    padding: 0.25rem !important;
  }
  .p-lg-2 {
    padding: 0.5rem !important;
  }
  .p-lg-3 {
    padding: 1rem !important;
  }
  .p-lg-4 {
    padding: 1.5rem !important;
  }
  .p-lg-5 {
    padding: 3rem !important;
  }
  .px-lg-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .px-lg-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .px-lg-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .px-lg-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .px-lg-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .px-lg-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .py-lg-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .py-lg-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .py-lg-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .py-lg-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .py-lg-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .py-lg-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .pt-lg-0 {
    padding-top: 0 !important;
  }
  .pt-lg-1 {
    padding-top: 0.25rem !important;
  }
  .pt-lg-2 {
    padding-top: 0.5rem !important;
  }
  .pt-lg-3 {
    padding-top: 1rem !important;
  }
  .pt-lg-4 {
    padding-top: 1.5rem !important;
  }
  .pt-lg-5 {
    padding-top: 3rem !important;
  }
  .pe-lg-0 {
    padding-right: 0 !important;
  }
  .pe-lg-1 {
    padding-right: 0.25rem !important;
  }
  .pe-lg-2 {
    padding-right: 0.5rem !important;
  }
  .pe-lg-3 {
    padding-right: 1rem !important;
  }
  .pe-lg-4 {
    padding-right: 1.5rem !important;
  }
  .pe-lg-5 {
    padding-right: 3rem !important;
  }
  .pb-lg-0 {
    padding-bottom: 0 !important;
  }
  .pb-lg-1 {
    padding-bottom: 0.25rem !important;
  }
  .pb-lg-2 {
    padding-bottom: 0.5rem !important;
  }
  .pb-lg-3 {
    padding-bottom: 1rem !important;
  }
  .pb-lg-4 {
    padding-bottom: 1.5rem !important;
  }
  .pb-lg-5 {
    padding-bottom: 3rem !important;
  }
  .ps-lg-0 {
    padding-left: 0 !important;
  }
  .ps-lg-1 {
    padding-left: 0.25rem !important;
  }
  .ps-lg-2 {
    padding-left: 0.5rem !important;
  }
  .ps-lg-3 {
    padding-left: 1rem !important;
  }
  .ps-lg-4 {
    padding-left: 1.5rem !important;
  }
  .ps-lg-5 {
    padding-left: 3rem !important;
  }
  .gap-lg-0 {
    gap: 0 !important;
  }
  .gap-lg-1 {
    gap: 0.25rem !important;
  }
  .gap-lg-2 {
    gap: 0.5rem !important;
  }
  .gap-lg-3 {
    gap: 1rem !important;
  }
  .gap-lg-4 {
    gap: 1.5rem !important;
  }
  .gap-lg-5 {
    gap: 3rem !important;
  }
  .row-gap-lg-0 {
    row-gap: 0 !important;
  }
  .row-gap-lg-1 {
    row-gap: 0.25rem !important;
  }
  .row-gap-lg-2 {
    row-gap: 0.5rem !important;
  }
  .row-gap-lg-3 {
    row-gap: 1rem !important;
  }
  .row-gap-lg-4 {
    row-gap: 1.5rem !important;
  }
  .row-gap-lg-5 {
    row-gap: 3rem !important;
  }
  .column-gap-lg-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .column-gap-lg-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .column-gap-lg-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .column-gap-lg-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .column-gap-lg-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .column-gap-lg-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .text-lg-start {
    text-align: left !important;
  }
  .text-lg-end {
    text-align: right !important;
  }
  .text-lg-center {
    text-align: center !important;
  }
}
@media (min-width: 1200px) {
  .float-xl-start {
    float: left !important;
  }
  .float-xl-end {
    float: right !important;
  }
  .float-xl-none {
    float: none !important;
  }
  .object-fit-xl-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .object-fit-xl-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .object-fit-xl-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .object-fit-xl-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .object-fit-xl-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .d-xl-inline {
    display: inline !important;
  }
  .d-xl-inline-block {
    display: inline-block !important;
  }
  .d-xl-block {
    display: block !important;
  }
  .d-xl-grid {
    display: grid !important;
  }
  .d-xl-inline-grid {
    display: inline-grid !important;
  }
  .d-xl-table {
    display: table !important;
  }
  .d-xl-table-row {
    display: table-row !important;
  }
  .d-xl-table-cell {
    display: table-cell !important;
  }
  .d-xl-flex {
    display: flex !important;
  }
  .d-xl-inline-flex {
    display: inline-flex !important;
  }
  .d-xl-none {
    display: none !important;
  }
  .flex-xl-fill {
    flex: 1 1 auto !important;
  }
  .flex-xl-row {
    flex-direction: row !important;
  }
  .flex-xl-column {
    flex-direction: column !important;
  }
  .flex-xl-row-reverse {
    flex-direction: row-reverse !important;
  }
  .flex-xl-column-reverse {
    flex-direction: column-reverse !important;
  }
  .flex-xl-grow-0 {
    flex-grow: 0 !important;
  }
  .flex-xl-grow-1 {
    flex-grow: 1 !important;
  }
  .flex-xl-shrink-0 {
    flex-shrink: 0 !important;
  }
  .flex-xl-shrink-1 {
    flex-shrink: 1 !important;
  }
  .flex-xl-wrap {
    flex-wrap: wrap !important;
  }
  .flex-xl-nowrap {
    flex-wrap: nowrap !important;
  }
  .flex-xl-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-xl-start {
    justify-content: flex-start !important;
  }
  .justify-content-xl-end {
    justify-content: flex-end !important;
  }
  .justify-content-xl-center {
    justify-content: center !important;
  }
  .justify-content-xl-between {
    justify-content: space-between !important;
  }
  .justify-content-xl-around {
    justify-content: space-around !important;
  }
  .justify-content-xl-evenly {
    justify-content: space-evenly !important;
  }
  .align-items-xl-start {
    align-items: flex-start !important;
  }
  .align-items-xl-end {
    align-items: flex-end !important;
  }
  .align-items-xl-center {
    align-items: center !important;
  }
  .align-items-xl-baseline {
    align-items: baseline !important;
  }
  .align-items-xl-stretch {
    align-items: stretch !important;
  }
  .align-content-xl-start {
    align-content: flex-start !important;
  }
  .align-content-xl-end {
    align-content: flex-end !important;
  }
  .align-content-xl-center {
    align-content: center !important;
  }
  .align-content-xl-between {
    align-content: space-between !important;
  }
  .align-content-xl-around {
    align-content: space-around !important;
  }
  .align-content-xl-stretch {
    align-content: stretch !important;
  }
  .align-self-xl-auto {
    align-self: auto !important;
  }
  .align-self-xl-start {
    align-self: flex-start !important;
  }
  .align-self-xl-end {
    align-self: flex-end !important;
  }
  .align-self-xl-center {
    align-self: center !important;
  }
  .align-self-xl-baseline {
    align-self: baseline !important;
  }
  .align-self-xl-stretch {
    align-self: stretch !important;
  }
  .order-xl-first {
    order: -1 !important;
  }
  .order-xl-0 {
    order: 0 !important;
  }
  .order-xl-1 {
    order: 1 !important;
  }
  .order-xl-2 {
    order: 2 !important;
  }
  .order-xl-3 {
    order: 3 !important;
  }
  .order-xl-4 {
    order: 4 !important;
  }
  .order-xl-5 {
    order: 5 !important;
  }
  .order-xl-last {
    order: 6 !important;
  }
  .m-xl-0 {
    margin: 0 !important;
  }
  .m-xl-1 {
    margin: 0.25rem !important;
  }
  .m-xl-2 {
    margin: 0.5rem !important;
  }
  .m-xl-3 {
    margin: 1rem !important;
  }
  .m-xl-4 {
    margin: 1.5rem !important;
  }
  .m-xl-5 {
    margin: 3rem !important;
  }
  .m-xl-auto {
    margin: auto !important;
  }
  .mx-xl-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .mx-xl-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .mx-xl-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .mx-xl-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .mx-xl-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .mx-xl-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .mx-xl-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .my-xl-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .my-xl-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .my-xl-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .my-xl-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .my-xl-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .my-xl-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .my-xl-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .mt-xl-0 {
    margin-top: 0 !important;
  }
  .mt-xl-1 {
    margin-top: 0.25rem !important;
  }
  .mt-xl-2 {
    margin-top: 0.5rem !important;
  }
  .mt-xl-3 {
    margin-top: 1rem !important;
  }
  .mt-xl-4 {
    margin-top: 1.5rem !important;
  }
  .mt-xl-5 {
    margin-top: 3rem !important;
  }
  .mt-xl-auto {
    margin-top: auto !important;
  }
  .me-xl-0 {
    margin-right: 0 !important;
  }
  .me-xl-1 {
    margin-right: 0.25rem !important;
  }
  .me-xl-2 {
    margin-right: 0.5rem !important;
  }
  .me-xl-3 {
    margin-right: 1rem !important;
  }
  .me-xl-4 {
    margin-right: 1.5rem !important;
  }
  .me-xl-5 {
    margin-right: 3rem !important;
  }
  .me-xl-auto {
    margin-right: auto !important;
  }
  .mb-xl-0 {
    margin-bottom: 0 !important;
  }
  .mb-xl-1 {
    margin-bottom: 0.25rem !important;
  }
  .mb-xl-2 {
    margin-bottom: 0.5rem !important;
  }
  .mb-xl-3 {
    margin-bottom: 1rem !important;
  }
  .mb-xl-4 {
    margin-bottom: 1.5rem !important;
  }
  .mb-xl-5 {
    margin-bottom: 3rem !important;
  }
  .mb-xl-auto {
    margin-bottom: auto !important;
  }
  .ms-xl-0 {
    margin-left: 0 !important;
  }
  .ms-xl-1 {
    margin-left: 0.25rem !important;
  }
  .ms-xl-2 {
    margin-left: 0.5rem !important;
  }
  .ms-xl-3 {
    margin-left: 1rem !important;
  }
  .ms-xl-4 {
    margin-left: 1.5rem !important;
  }
  .ms-xl-5 {
    margin-left: 3rem !important;
  }
  .ms-xl-auto {
    margin-left: auto !important;
  }
  .p-xl-0 {
    padding: 0 !important;
  }
  .p-xl-1 {
    padding: 0.25rem !important;
  }
  .p-xl-2 {
    padding: 0.5rem !important;
  }
  .p-xl-3 {
    padding: 1rem !important;
  }
  .p-xl-4 {
    padding: 1.5rem !important;
  }
  .p-xl-5 {
    padding: 3rem !important;
  }
  .px-xl-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .px-xl-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .px-xl-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .px-xl-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .px-xl-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .px-xl-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .py-xl-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .py-xl-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .py-xl-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .py-xl-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .py-xl-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .py-xl-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .pt-xl-0 {
    padding-top: 0 !important;
  }
  .pt-xl-1 {
    padding-top: 0.25rem !important;
  }
  .pt-xl-2 {
    padding-top: 0.5rem !important;
  }
  .pt-xl-3 {
    padding-top: 1rem !important;
  }
  .pt-xl-4 {
    padding-top: 1.5rem !important;
  }
  .pt-xl-5 {
    padding-top: 3rem !important;
  }
  .pe-xl-0 {
    padding-right: 0 !important;
  }
  .pe-xl-1 {
    padding-right: 0.25rem !important;
  }
  .pe-xl-2 {
    padding-right: 0.5rem !important;
  }
  .pe-xl-3 {
    padding-right: 1rem !important;
  }
  .pe-xl-4 {
    padding-right: 1.5rem !important;
  }
  .pe-xl-5 {
    padding-right: 3rem !important;
  }
  .pb-xl-0 {
    padding-bottom: 0 !important;
  }
  .pb-xl-1 {
    padding-bottom: 0.25rem !important;
  }
  .pb-xl-2 {
    padding-bottom: 0.5rem !important;
  }
  .pb-xl-3 {
    padding-bottom: 1rem !important;
  }
  .pb-xl-4 {
    padding-bottom: 1.5rem !important;
  }
  .pb-xl-5 {
    padding-bottom: 3rem !important;
  }
  .ps-xl-0 {
    padding-left: 0 !important;
  }
  .ps-xl-1 {
    padding-left: 0.25rem !important;
  }
  .ps-xl-2 {
    padding-left: 0.5rem !important;
  }
  .ps-xl-3 {
    padding-left: 1rem !important;
  }
  .ps-xl-4 {
    padding-left: 1.5rem !important;
  }
  .ps-xl-5 {
    padding-left: 3rem !important;
  }
  .gap-xl-0 {
    gap: 0 !important;
  }
  .gap-xl-1 {
    gap: 0.25rem !important;
  }
  .gap-xl-2 {
    gap: 0.5rem !important;
  }
  .gap-xl-3 {
    gap: 1rem !important;
  }
  .gap-xl-4 {
    gap: 1.5rem !important;
  }
  .gap-xl-5 {
    gap: 3rem !important;
  }
  .row-gap-xl-0 {
    row-gap: 0 !important;
  }
  .row-gap-xl-1 {
    row-gap: 0.25rem !important;
  }
  .row-gap-xl-2 {
    row-gap: 0.5rem !important;
  }
  .row-gap-xl-3 {
    row-gap: 1rem !important;
  }
  .row-gap-xl-4 {
    row-gap: 1.5rem !important;
  }
  .row-gap-xl-5 {
    row-gap: 3rem !important;
  }
  .column-gap-xl-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .column-gap-xl-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .column-gap-xl-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .column-gap-xl-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .column-gap-xl-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .column-gap-xl-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .text-xl-start {
    text-align: left !important;
  }
  .text-xl-end {
    text-align: right !important;
  }
  .text-xl-center {
    text-align: center !important;
  }
}
@media (min-width: 1400px) {
  .float-xxl-start {
    float: left !important;
  }
  .float-xxl-end {
    float: right !important;
  }
  .float-xxl-none {
    float: none !important;
  }
  .object-fit-xxl-contain {
    -o-object-fit: contain !important;
    object-fit: contain !important;
  }
  .object-fit-xxl-cover {
    -o-object-fit: cover !important;
    object-fit: cover !important;
  }
  .object-fit-xxl-fill {
    -o-object-fit: fill !important;
    object-fit: fill !important;
  }
  .object-fit-xxl-scale {
    -o-object-fit: scale-down !important;
    object-fit: scale-down !important;
  }
  .object-fit-xxl-none {
    -o-object-fit: none !important;
    object-fit: none !important;
  }
  .d-xxl-inline {
    display: inline !important;
  }
  .d-xxl-inline-block {
    display: inline-block !important;
  }
  .d-xxl-block {
    display: block !important;
  }
  .d-xxl-grid {
    display: grid !important;
  }
  .d-xxl-inline-grid {
    display: inline-grid !important;
  }
  .d-xxl-table {
    display: table !important;
  }
  .d-xxl-table-row {
    display: table-row !important;
  }
  .d-xxl-table-cell {
    display: table-cell !important;
  }
  .d-xxl-flex {
    display: flex !important;
  }
  .d-xxl-inline-flex {
    display: inline-flex !important;
  }
  .d-xxl-none {
    display: none !important;
  }
  .flex-xxl-fill {
    flex: 1 1 auto !important;
  }
  .flex-xxl-row {
    flex-direction: row !important;
  }
  .flex-xxl-column {
    flex-direction: column !important;
  }
  .flex-xxl-row-reverse {
    flex-direction: row-reverse !important;
  }
  .flex-xxl-column-reverse {
    flex-direction: column-reverse !important;
  }
  .flex-xxl-grow-0 {
    flex-grow: 0 !important;
  }
  .flex-xxl-grow-1 {
    flex-grow: 1 !important;
  }
  .flex-xxl-shrink-0 {
    flex-shrink: 0 !important;
  }
  .flex-xxl-shrink-1 {
    flex-shrink: 1 !important;
  }
  .flex-xxl-wrap {
    flex-wrap: wrap !important;
  }
  .flex-xxl-nowrap {
    flex-wrap: nowrap !important;
  }
  .flex-xxl-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-xxl-start {
    justify-content: flex-start !important;
  }
  .justify-content-xxl-end {
    justify-content: flex-end !important;
  }
  .justify-content-xxl-center {
    justify-content: center !important;
  }
  .justify-content-xxl-between {
    justify-content: space-between !important;
  }
  .justify-content-xxl-around {
    justify-content: space-around !important;
  }
  .justify-content-xxl-evenly {
    justify-content: space-evenly !important;
  }
  .align-items-xxl-start {
    align-items: flex-start !important;
  }
  .align-items-xxl-end {
    align-items: flex-end !important;
  }
  .align-items-xxl-center {
    align-items: center !important;
  }
  .align-items-xxl-baseline {
    align-items: baseline !important;
  }
  .align-items-xxl-stretch {
    align-items: stretch !important;
  }
  .align-content-xxl-start {
    align-content: flex-start !important;
  }
  .align-content-xxl-end {
    align-content: flex-end !important;
  }
  .align-content-xxl-center {
    align-content: center !important;
  }
  .align-content-xxl-between {
    align-content: space-between !important;
  }
  .align-content-xxl-around {
    align-content: space-around !important;
  }
  .align-content-xxl-stretch {
    align-content: stretch !important;
  }
  .align-self-xxl-auto {
    align-self: auto !important;
  }
  .align-self-xxl-start {
    align-self: flex-start !important;
  }
  .align-self-xxl-end {
    align-self: flex-end !important;
  }
  .align-self-xxl-center {
    align-self: center !important;
  }
  .align-self-xxl-baseline {
    align-self: baseline !important;
  }
  .align-self-xxl-stretch {
    align-self: stretch !important;
  }
  .order-xxl-first {
    order: -1 !important;
  }
  .order-xxl-0 {
    order: 0 !important;
  }
  .order-xxl-1 {
    order: 1 !important;
  }
  .order-xxl-2 {
    order: 2 !important;
  }
  .order-xxl-3 {
    order: 3 !important;
  }
  .order-xxl-4 {
    order: 4 !important;
  }
  .order-xxl-5 {
    order: 5 !important;
  }
  .order-xxl-last {
    order: 6 !important;
  }
  .m-xxl-0 {
    margin: 0 !important;
  }
  .m-xxl-1 {
    margin: 0.25rem !important;
  }
  .m-xxl-2 {
    margin: 0.5rem !important;
  }
  .m-xxl-3 {
    margin: 1rem !important;
  }
  .m-xxl-4 {
    margin: 1.5rem !important;
  }
  .m-xxl-5 {
    margin: 3rem !important;
  }
  .m-xxl-auto {
    margin: auto !important;
  }
  .mx-xxl-0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
  .mx-xxl-1 {
    margin-right: 0.25rem !important;
    margin-left: 0.25rem !important;
  }
  .mx-xxl-2 {
    margin-right: 0.5rem !important;
    margin-left: 0.5rem !important;
  }
  .mx-xxl-3 {
    margin-right: 1rem !important;
    margin-left: 1rem !important;
  }
  .mx-xxl-4 {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }
  .mx-xxl-5 {
    margin-right: 3rem !important;
    margin-left: 3rem !important;
  }
  .mx-xxl-auto {
    margin-right: auto !important;
    margin-left: auto !important;
  }
  .my-xxl-0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
  .my-xxl-1 {
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
  .my-xxl-2 {
    margin-top: 0.5rem !important;
    margin-bottom: 0.5rem !important;
  }
  .my-xxl-3 {
    margin-top: 1rem !important;
    margin-bottom: 1rem !important;
  }
  .my-xxl-4 {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }
  .my-xxl-5 {
    margin-top: 3rem !important;
    margin-bottom: 3rem !important;
  }
  .my-xxl-auto {
    margin-top: auto !important;
    margin-bottom: auto !important;
  }
  .mt-xxl-0 {
    margin-top: 0 !important;
  }
  .mt-xxl-1 {
    margin-top: 0.25rem !important;
  }
  .mt-xxl-2 {
    margin-top: 0.5rem !important;
  }
  .mt-xxl-3 {
    margin-top: 1rem !important;
  }
  .mt-xxl-4 {
    margin-top: 1.5rem !important;
  }
  .mt-xxl-5 {
    margin-top: 3rem !important;
  }
  .mt-xxl-auto {
    margin-top: auto !important;
  }
  .me-xxl-0 {
    margin-right: 0 !important;
  }
  .me-xxl-1 {
    margin-right: 0.25rem !important;
  }
  .me-xxl-2 {
    margin-right: 0.5rem !important;
  }
  .me-xxl-3 {
    margin-right: 1rem !important;
  }
  .me-xxl-4 {
    margin-right: 1.5rem !important;
  }
  .me-xxl-5 {
    margin-right: 3rem !important;
  }
  .me-xxl-auto {
    margin-right: auto !important;
  }
  .mb-xxl-0 {
    margin-bottom: 0 !important;
  }
  .mb-xxl-1 {
    margin-bottom: 0.25rem !important;
  }
  .mb-xxl-2 {
    margin-bottom: 0.5rem !important;
  }
  .mb-xxl-3 {
    margin-bottom: 1rem !important;
  }
  .mb-xxl-4 {
    margin-bottom: 1.5rem !important;
  }
  .mb-xxl-5 {
    margin-bottom: 3rem !important;
  }
  .mb-xxl-auto {
    margin-bottom: auto !important;
  }
  .ms-xxl-0 {
    margin-left: 0 !important;
  }
  .ms-xxl-1 {
    margin-left: 0.25rem !important;
  }
  .ms-xxl-2 {
    margin-left: 0.5rem !important;
  }
  .ms-xxl-3 {
    margin-left: 1rem !important;
  }
  .ms-xxl-4 {
    margin-left: 1.5rem !important;
  }
  .ms-xxl-5 {
    margin-left: 3rem !important;
  }
  .ms-xxl-auto {
    margin-left: auto !important;
  }
  .p-xxl-0 {
    padding: 0 !important;
  }
  .p-xxl-1 {
    padding: 0.25rem !important;
  }
  .p-xxl-2 {
    padding: 0.5rem !important;
  }
  .p-xxl-3 {
    padding: 1rem !important;
  }
  .p-xxl-4 {
    padding: 1.5rem !important;
  }
  .p-xxl-5 {
    padding: 3rem !important;
  }
  .px-xxl-0 {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }
  .px-xxl-1 {
    padding-right: 0.25rem !important;
    padding-left: 0.25rem !important;
  }
  .px-xxl-2 {
    padding-right: 0.5rem !important;
    padding-left: 0.5rem !important;
  }
  .px-xxl-3 {
    padding-right: 1rem !important;
    padding-left: 1rem !important;
  }
  .px-xxl-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .px-xxl-5 {
    padding-right: 3rem !important;
    padding-left: 3rem !important;
  }
  .py-xxl-0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
  .py-xxl-1 {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
  }
  .py-xxl-2 {
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .py-xxl-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  .py-xxl-4 {
    padding-top: 1.5rem !important;
    padding-bottom: 1.5rem !important;
  }
  .py-xxl-5 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }
  .pt-xxl-0 {
    padding-top: 0 !important;
  }
  .pt-xxl-1 {
    padding-top: 0.25rem !important;
  }
  .pt-xxl-2 {
    padding-top: 0.5rem !important;
  }
  .pt-xxl-3 {
    padding-top: 1rem !important;
  }
  .pt-xxl-4 {
    padding-top: 1.5rem !important;
  }
  .pt-xxl-5 {
    padding-top: 3rem !important;
  }
  .pe-xxl-0 {
    padding-right: 0 !important;
  }
  .pe-xxl-1 {
    padding-right: 0.25rem !important;
  }
  .pe-xxl-2 {
    padding-right: 0.5rem !important;
  }
  .pe-xxl-3 {
    padding-right: 1rem !important;
  }
  .pe-xxl-4 {
    padding-right: 1.5rem !important;
  }
  .pe-xxl-5 {
    padding-right: 3rem !important;
  }
  .pb-xxl-0 {
    padding-bottom: 0 !important;
  }
  .pb-xxl-1 {
    padding-bottom: 0.25rem !important;
  }
  .pb-xxl-2 {
    padding-bottom: 0.5rem !important;
  }
  .pb-xxl-3 {
    padding-bottom: 1rem !important;
  }
  .pb-xxl-4 {
    padding-bottom: 1.5rem !important;
  }
  .pb-xxl-5 {
    padding-bottom: 3rem !important;
  }
  .ps-xxl-0 {
    padding-left: 0 !important;
  }
  .ps-xxl-1 {
    padding-left: 0.25rem !important;
  }
  .ps-xxl-2 {
    padding-left: 0.5rem !important;
  }
  .ps-xxl-3 {
    padding-left: 1rem !important;
  }
  .ps-xxl-4 {
    padding-left: 1.5rem !important;
  }
  .ps-xxl-5 {
    padding-left: 3rem !important;
  }
  .gap-xxl-0 {
    gap: 0 !important;
  }
  .gap-xxl-1 {
    gap: 0.25rem !important;
  }
  .gap-xxl-2 {
    gap: 0.5rem !important;
  }
  .gap-xxl-3 {
    gap: 1rem !important;
  }
  .gap-xxl-4 {
    gap: 1.5rem !important;
  }
  .gap-xxl-5 {
    gap: 3rem !important;
  }
  .row-gap-xxl-0 {
    row-gap: 0 !important;
  }
  .row-gap-xxl-1 {
    row-gap: 0.25rem !important;
  }
  .row-gap-xxl-2 {
    row-gap: 0.5rem !important;
  }
  .row-gap-xxl-3 {
    row-gap: 1rem !important;
  }
  .row-gap-xxl-4 {
    row-gap: 1.5rem !important;
  }
  .row-gap-xxl-5 {
    row-gap: 3rem !important;
  }
  .column-gap-xxl-0 {
    -moz-column-gap: 0 !important;
    column-gap: 0 !important;
  }
  .column-gap-xxl-1 {
    -moz-column-gap: 0.25rem !important;
    column-gap: 0.25rem !important;
  }
  .column-gap-xxl-2 {
    -moz-column-gap: 0.5rem !important;
    column-gap: 0.5rem !important;
  }
  .column-gap-xxl-3 {
    -moz-column-gap: 1rem !important;
    column-gap: 1rem !important;
  }
  .column-gap-xxl-4 {
    -moz-column-gap: 1.5rem !important;
    column-gap: 1.5rem !important;
  }
  .column-gap-xxl-5 {
    -moz-column-gap: 3rem !important;
    column-gap: 3rem !important;
  }
  .text-xxl-start {
    text-align: left !important;
  }
  .text-xxl-end {
    text-align: right !important;
  }
  .text-xxl-center {
    text-align: center !important;
  }
}
@media (min-width: 1200px) {
  .fs-1 {
    font-size: 2.5rem !important;
  }
  .fs-2 {
    font-size: 2rem !important;
  }
  .fs-3 {
    font-size: 1.75rem !important;
  }
  .fs-4 {
    font-size: 1.5rem !important;
  }
}
@media print {
  .d-print-inline {
    display: inline !important;
  }
  .d-print-inline-block {
    display: inline-block !important;
  }
  .d-print-block {
    display: block !important;
  }
  .d-print-grid {
    display: grid !important;
  }
  .d-print-inline-grid {
    display: inline-grid !important;
  }
  .d-print-table {
    display: table !important;
  }
  .d-print-table-row {
    display: table-row !important;
  }
  .d-print-table-cell {
    display: table-cell !important;
  }
  .d-print-flex {
    display: flex !important;
  }
  .d-print-inline-flex {
    display: inline-flex !important;
  }
  .d-print-none {
    display: none !important;
  }
}
`;const Nt=[new FontFace("bootstrap-icons",'url("data:font/woff2;base64,")'),new FontFace("bootstrap-icons",'url("data:font/woff;base64,")')];Promise.all(Nt.map((t=>t.load()))).then((t=>{t.forEach((t=>{document.fonts.add(t)})),console.log("FONTS LOADED")}));const It=l`
  [class^="bi-"]::before,
  [class*=" bi-"]::before {
    display: inline-block;
    font-family: bootstrap-icons !important;
    font-style: normal;
    font-weight: normal !important;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    vertical-align: -.125em;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .bi-alarm-fill::before { content: "\\f101"; }
  .bi-alarm::before { content: "\\f102"; }
  .bi-align-bottom::before { content: "\\f103"; }
  .bi-align-center::before { content: "\\f104"; }
  .bi-align-end::before { content: "\\f105"; }
  .bi-align-middle::before { content: "\\f106"; }
  .bi-align-start::before { content: "\\f107"; }
  .bi-align-top::before { content: "\\f108"; }
  .bi-alt::before { content: "\\f109"; }
  .bi-app-indicator::before { content: "\\f10a"; }
  .bi-app::before { content: "\\f10b"; }
  .bi-archive-fill::before { content: "\\f10c"; }
  .bi-archive::before { content: "\\f10d"; }
  .bi-arrow-90deg-down::before { content: "\\f10e"; }
  .bi-arrow-90deg-left::before { content: "\\f10f"; }
  .bi-arrow-90deg-right::before { content: "\\f110"; }
  .bi-arrow-90deg-up::before { content: "\\f111"; }
  .bi-arrow-bar-down::before { content: "\\f112"; }
  .bi-arrow-bar-left::before { content: "\\f113"; }
  .bi-arrow-bar-right::before { content: "\\f114"; }
  .bi-arrow-bar-up::before { content: "\\f115"; }
  .bi-arrow-clockwise::before { content: "\\f116"; }
  .bi-arrow-counterclockwise::before { content: "\\f117"; }
  .bi-arrow-down-circle-fill::before { content: "\\f118"; }
  .bi-arrow-down-circle::before { content: "\\f119"; }
  .bi-arrow-down-left-circle-fill::before { content: "\\f11a"; }
  .bi-arrow-down-left-circle::before { content: "\\f11b"; }
  .bi-arrow-down-left-square-fill::before { content: "\\f11c"; }
  .bi-arrow-down-left-square::before { content: "\\f11d"; }
  .bi-arrow-down-left::before { content: "\\f11e"; }
  .bi-arrow-down-right-circle-fill::before { content: "\\f11f"; }
  .bi-arrow-down-right-circle::before { content: "\\f120"; }
  .bi-arrow-down-right-square-fill::before { content: "\\f121"; }
  .bi-arrow-down-right-square::before { content: "\\f122"; }
  .bi-arrow-down-right::before { content: "\\f123"; }
  .bi-arrow-down-short::before { content: "\\f124"; }
  .bi-arrow-down-square-fill::before { content: "\\f125"; }
  .bi-arrow-down-square::before { content: "\\f126"; }
  .bi-arrow-down-up::before { content: "\\f127"; }
  .bi-arrow-down::before { content: "\\f128"; }
  .bi-arrow-left-circle-fill::before { content: "\\f129"; }
  .bi-arrow-left-circle::before { content: "\\f12a"; }
  .bi-arrow-left-right::before { content: "\\f12b"; }
  .bi-arrow-left-short::before { content: "\\f12c"; }
  .bi-arrow-left-square-fill::before { content: "\\f12d"; }
  .bi-arrow-left-square::before { content: "\\f12e"; }
  .bi-arrow-left::before { content: "\\f12f"; }
  .bi-arrow-repeat::before { content: "\\f130"; }
  .bi-arrow-return-left::before { content: "\\f131"; }
  .bi-arrow-return-right::before { content: "\\f132"; }
  .bi-arrow-right-circle-fill::before { content: "\\f133"; }
  .bi-arrow-right-circle::before { content: "\\f134"; }
  .bi-arrow-right-short::before { content: "\\f135"; }
  .bi-arrow-right-square-fill::before { content: "\\f136"; }
  .bi-arrow-right-square::before { content: "\\f137"; }
  .bi-arrow-right::before { content: "\\f138"; }
  .bi-arrow-up-circle-fill::before { content: "\\f139"; }
  .bi-arrow-up-circle::before { content: "\\f13a"; }
  .bi-arrow-up-left-circle-fill::before { content: "\\f13b"; }
  .bi-arrow-up-left-circle::before { content: "\\f13c"; }
  .bi-arrow-up-left-square-fill::before { content: "\\f13d"; }
  .bi-arrow-up-left-square::before { content: "\\f13e"; }
  .bi-arrow-up-left::before { content: "\\f13f"; }
  .bi-arrow-up-right-circle-fill::before { content: "\\f140"; }
  .bi-arrow-up-right-circle::before { content: "\\f141"; }
  .bi-arrow-up-right-square-fill::before { content: "\\f142"; }
  .bi-arrow-up-right-square::before { content: "\\f143"; }
  .bi-arrow-up-right::before { content: "\\f144"; }
  .bi-arrow-up-short::before { content: "\\f145"; }
  .bi-arrow-up-square-fill::before { content: "\\f146"; }
  .bi-arrow-up-square::before { content: "\\f147"; }
  .bi-arrow-up::before { content: "\\f148"; }
  .bi-arrows-angle-contract::before { content: "\\f149"; }
  .bi-arrows-angle-expand::before { content: "\\f14a"; }
  .bi-arrows-collapse::before { content: "\\f14b"; }
  .bi-arrows-expand::before { content: "\\f14c"; }
  .bi-arrows-fullscreen::before { content: "\\f14d"; }
  .bi-arrows-move::before { content: "\\f14e"; }
  .bi-aspect-ratio-fill::before { content: "\\f14f"; }
  .bi-aspect-ratio::before { content: "\\f150"; }
  .bi-asterisk::before { content: "\\f151"; }
  .bi-at::before { content: "\\f152"; }
  .bi-award-fill::before { content: "\\f153"; }
  .bi-award::before { content: "\\f154"; }
  .bi-back::before { content: "\\f155"; }
  .bi-backspace-fill::before { content: "\\f156"; }
  .bi-backspace-reverse-fill::before { content: "\\f157"; }
  .bi-backspace-reverse::before { content: "\\f158"; }
  .bi-backspace::before { content: "\\f159"; }
  .bi-badge-3d-fill::before { content: "\\f15a"; }
  .bi-badge-3d::before { content: "\\f15b"; }
  .bi-badge-4k-fill::before { content: "\\f15c"; }
  .bi-badge-4k::before { content: "\\f15d"; }
  .bi-badge-8k-fill::before { content: "\\f15e"; }
  .bi-badge-8k::before { content: "\\f15f"; }
  .bi-badge-ad-fill::before { content: "\\f160"; }
  .bi-badge-ad::before { content: "\\f161"; }
  .bi-badge-ar-fill::before { content: "\\f162"; }
  .bi-badge-ar::before { content: "\\f163"; }
  .bi-badge-cc-fill::before { content: "\\f164"; }
  .bi-badge-cc::before { content: "\\f165"; }
  .bi-badge-hd-fill::before { content: "\\f166"; }
  .bi-badge-hd::before { content: "\\f167"; }
  .bi-badge-tm-fill::before { content: "\\f168"; }
  .bi-badge-tm::before { content: "\\f169"; }
  .bi-badge-vo-fill::before { content: "\\f16a"; }
  .bi-badge-vo::before { content: "\\f16b"; }
  .bi-badge-vr-fill::before { content: "\\f16c"; }
  .bi-badge-vr::before { content: "\\f16d"; }
  .bi-badge-wc-fill::before { content: "\\f16e"; }
  .bi-badge-wc::before { content: "\\f16f"; }
  .bi-bag-check-fill::before { content: "\\f170"; }
  .bi-bag-check::before { content: "\\f171"; }
  .bi-bag-dash-fill::before { content: "\\f172"; }
  .bi-bag-dash::before { content: "\\f173"; }
  .bi-bag-fill::before { content: "\\f174"; }
  .bi-bag-plus-fill::before { content: "\\f175"; }
  .bi-bag-plus::before { content: "\\f176"; }
  .bi-bag-x-fill::before { content: "\\f177"; }
  .bi-bag-x::before { content: "\\f178"; }
  .bi-bag::before { content: "\\f179"; }
  .bi-bar-chart-fill::before { content: "\\f17a"; }
  .bi-bar-chart-line-fill::before { content: "\\f17b"; }
  .bi-bar-chart-line::before { content: "\\f17c"; }
  .bi-bar-chart-steps::before { content: "\\f17d"; }
  .bi-bar-chart::before { content: "\\f17e"; }
  .bi-basket-fill::before { content: "\\f17f"; }
  .bi-basket::before { content: "\\f180"; }
  .bi-basket2-fill::before { content: "\\f181"; }
  .bi-basket2::before { content: "\\f182"; }
  .bi-basket3-fill::before { content: "\\f183"; }
  .bi-basket3::before { content: "\\f184"; }
  .bi-battery-charging::before { content: "\\f185"; }
  .bi-battery-full::before { content: "\\f186"; }
  .bi-battery-half::before { content: "\\f187"; }
  .bi-battery::before { content: "\\f188"; }
  .bi-bell-fill::before { content: "\\f189"; }
  .bi-bell::before { content: "\\f18a"; }
  .bi-bezier::before { content: "\\f18b"; }
  .bi-bezier2::before { content: "\\f18c"; }
  .bi-bicycle::before { content: "\\f18d"; }
  .bi-binoculars-fill::before { content: "\\f18e"; }
  .bi-binoculars::before { content: "\\f18f"; }
  .bi-blockquote-left::before { content: "\\f190"; }
  .bi-blockquote-right::before { content: "\\f191"; }
  .bi-book-fill::before { content: "\\f192"; }
  .bi-book-half::before { content: "\\f193"; }
  .bi-book::before { content: "\\f194"; }
  .bi-bookmark-check-fill::before { content: "\\f195"; }
  .bi-bookmark-check::before { content: "\\f196"; }
  .bi-bookmark-dash-fill::before { content: "\\f197"; }
  .bi-bookmark-dash::before { content: "\\f198"; }
  .bi-bookmark-fill::before { content: "\\f199"; }
  .bi-bookmark-heart-fill::before { content: "\\f19a"; }
  .bi-bookmark-heart::before { content: "\\f19b"; }
  .bi-bookmark-plus-fill::before { content: "\\f19c"; }
  .bi-bookmark-plus::before { content: "\\f19d"; }
  .bi-bookmark-star-fill::before { content: "\\f19e"; }
  .bi-bookmark-star::before { content: "\\f19f"; }
  .bi-bookmark-x-fill::before { content: "\\f1a0"; }
  .bi-bookmark-x::before { content: "\\f1a1"; }
  .bi-bookmark::before { content: "\\f1a2"; }
  .bi-bookmarks-fill::before { content: "\\f1a3"; }
  .bi-bookmarks::before { content: "\\f1a4"; }
  .bi-bookshelf::before { content: "\\f1a5"; }
  .bi-bootstrap-fill::before { content: "\\f1a6"; }
  .bi-bootstrap-reboot::before { content: "\\f1a7"; }
  .bi-bootstrap::before { content: "\\f1a8"; }
  .bi-border-all::before { content: "\\f1a9"; }
  .bi-border-bottom::before { content: "\\f1aa"; }
  .bi-border-center::before { content: "\\f1ab"; }
  .bi-border-inner::before { content: "\\f1ac"; }
  .bi-border-left::before { content: "\\f1ad"; }
  .bi-border-middle::before { content: "\\f1ae"; }
  .bi-border-outer::before { content: "\\f1af"; }
  .bi-border-right::before { content: "\\f1b0"; }
  .bi-border-style::before { content: "\\f1b1"; }
  .bi-border-top::before { content: "\\f1b2"; }
  .bi-border-width::before { content: "\\f1b3"; }
  .bi-border::before { content: "\\f1b4"; }
  .bi-bounding-box-circles::before { content: "\\f1b5"; }
  .bi-bounding-box::before { content: "\\f1b6"; }
  .bi-box-arrow-down-left::before { content: "\\f1b7"; }
  .bi-box-arrow-down-right::before { content: "\\f1b8"; }
  .bi-box-arrow-down::before { content: "\\f1b9"; }
  .bi-box-arrow-in-down-left::before { content: "\\f1ba"; }
  .bi-box-arrow-in-down-right::before { content: "\\f1bb"; }
  .bi-box-arrow-in-down::before { content: "\\f1bc"; }
  .bi-box-arrow-in-left::before { content: "\\f1bd"; }
  .bi-box-arrow-in-right::before { content: "\\f1be"; }
  .bi-box-arrow-in-up-left::before { content: "\\f1bf"; }
  .bi-box-arrow-in-up-right::before { content: "\\f1c0"; }
  .bi-box-arrow-in-up::before { content: "\\f1c1"; }
  .bi-box-arrow-left::before { content: "\\f1c2"; }
  .bi-box-arrow-right::before { content: "\\f1c3"; }
  .bi-box-arrow-up-left::before { content: "\\f1c4"; }
  .bi-box-arrow-up-right::before { content: "\\f1c5"; }
  .bi-box-arrow-up::before { content: "\\f1c6"; }
  .bi-box-seam::before { content: "\\f1c7"; }
  .bi-box::before { content: "\\f1c8"; }
  .bi-braces::before { content: "\\f1c9"; }
  .bi-bricks::before { content: "\\f1ca"; }
  .bi-briefcase-fill::before { content: "\\f1cb"; }
  .bi-briefcase::before { content: "\\f1cc"; }
  .bi-brightness-alt-high-fill::before { content: "\\f1cd"; }
  .bi-brightness-alt-high::before { content: "\\f1ce"; }
  .bi-brightness-alt-low-fill::before { content: "\\f1cf"; }
  .bi-brightness-alt-low::before { content: "\\f1d0"; }
  .bi-brightness-high-fill::before { content: "\\f1d1"; }
  .bi-brightness-high::before { content: "\\f1d2"; }
  .bi-brightness-low-fill::before { content: "\\f1d3"; }
  .bi-brightness-low::before { content: "\\f1d4"; }
  .bi-broadcast-pin::before { content: "\\f1d5"; }
  .bi-broadcast::before { content: "\\f1d6"; }
  .bi-brush-fill::before { content: "\\f1d7"; }
  .bi-brush::before { content: "\\f1d8"; }
  .bi-bucket-fill::before { content: "\\f1d9"; }
  .bi-bucket::before { content: "\\f1da"; }
  .bi-bug-fill::before { content: "\\f1db"; }
  .bi-bug::before { content: "\\f1dc"; }
  .bi-building::before { content: "\\f1dd"; }
  .bi-bullseye::before { content: "\\f1de"; }
  .bi-calculator-fill::before { content: "\\f1df"; }
  .bi-calculator::before { content: "\\f1e0"; }
  .bi-calendar-check-fill::before { content: "\\f1e1"; }
  .bi-calendar-check::before { content: "\\f1e2"; }
  .bi-calendar-date-fill::before { content: "\\f1e3"; }
  .bi-calendar-date::before { content: "\\f1e4"; }
  .bi-calendar-day-fill::before { content: "\\f1e5"; }
  .bi-calendar-day::before { content: "\\f1e6"; }
  .bi-calendar-event-fill::before { content: "\\f1e7"; }
  .bi-calendar-event::before { content: "\\f1e8"; }
  .bi-calendar-fill::before { content: "\\f1e9"; }
  .bi-calendar-minus-fill::before { content: "\\f1ea"; }
  .bi-calendar-minus::before { content: "\\f1eb"; }
  .bi-calendar-month-fill::before { content: "\\f1ec"; }
  .bi-calendar-month::before { content: "\\f1ed"; }
  .bi-calendar-plus-fill::before { content: "\\f1ee"; }
  .bi-calendar-plus::before { content: "\\f1ef"; }
  .bi-calendar-range-fill::before { content: "\\f1f0"; }
  .bi-calendar-range::before { content: "\\f1f1"; }
  .bi-calendar-week-fill::before { content: "\\f1f2"; }
  .bi-calendar-week::before { content: "\\f1f3"; }
  .bi-calendar-x-fill::before { content: "\\f1f4"; }
  .bi-calendar-x::before { content: "\\f1f5"; }
  .bi-calendar::before { content: "\\f1f6"; }
  .bi-calendar2-check-fill::before { content: "\\f1f7"; }
  .bi-calendar2-check::before { content: "\\f1f8"; }
  .bi-calendar2-date-fill::before { content: "\\f1f9"; }
  .bi-calendar2-date::before { content: "\\f1fa"; }
  .bi-calendar2-day-fill::before { content: "\\f1fb"; }
  .bi-calendar2-day::before { content: "\\f1fc"; }
  .bi-calendar2-event-fill::before { content: "\\f1fd"; }
  .bi-calendar2-event::before { content: "\\f1fe"; }
  .bi-calendar2-fill::before { content: "\\f1ff"; }
  .bi-calendar2-minus-fill::before { content: "\\f200"; }
  .bi-calendar2-minus::before { content: "\\f201"; }
  .bi-calendar2-month-fill::before { content: "\\f202"; }
  .bi-calendar2-month::before { content: "\\f203"; }
  .bi-calendar2-plus-fill::before { content: "\\f204"; }
  .bi-calendar2-plus::before { content: "\\f205"; }
  .bi-calendar2-range-fill::before { content: "\\f206"; }
  .bi-calendar2-range::before { content: "\\f207"; }
  .bi-calendar2-week-fill::before { content: "\\f208"; }
  .bi-calendar2-week::before { content: "\\f209"; }
  .bi-calendar2-x-fill::before { content: "\\f20a"; }
  .bi-calendar2-x::before { content: "\\f20b"; }
  .bi-calendar2::before { content: "\\f20c"; }
  .bi-calendar3-event-fill::before { content: "\\f20d"; }
  .bi-calendar3-event::before { content: "\\f20e"; }
  .bi-calendar3-fill::before { content: "\\f20f"; }
  .bi-calendar3-range-fill::before { content: "\\f210"; }
  .bi-calendar3-range::before { content: "\\f211"; }
  .bi-calendar3-week-fill::before { content: "\\f212"; }
  .bi-calendar3-week::before { content: "\\f213"; }
  .bi-calendar3::before { content: "\\f214"; }
  .bi-calendar4-event::before { content: "\\f215"; }
  .bi-calendar4-range::before { content: "\\f216"; }
  .bi-calendar4-week::before { content: "\\f217"; }
  .bi-calendar4::before { content: "\\f218"; }
  .bi-camera-fill::before { content: "\\f219"; }
  .bi-camera-reels-fill::before { content: "\\f21a"; }
  .bi-camera-reels::before { content: "\\f21b"; }
  .bi-camera-video-fill::before { content: "\\f21c"; }
  .bi-camera-video-off-fill::before { content: "\\f21d"; }
  .bi-camera-video-off::before { content: "\\f21e"; }
  .bi-camera-video::before { content: "\\f21f"; }
  .bi-camera::before { content: "\\f220"; }
  .bi-camera2::before { content: "\\f221"; }
  .bi-capslock-fill::before { content: "\\f222"; }
  .bi-capslock::before { content: "\\f223"; }
  .bi-card-checklist::before { content: "\\f224"; }
  .bi-card-heading::before { content: "\\f225"; }
  .bi-card-image::before { content: "\\f226"; }
  .bi-card-list::before { content: "\\f227"; }
  .bi-card-text::before { content: "\\f228"; }
  .bi-caret-down-fill::before { content: "\\f229"; }
  .bi-caret-down-square-fill::before { content: "\\f22a"; }
  .bi-caret-down-square::before { content: "\\f22b"; }
  .bi-caret-down::before { content: "\\f22c"; }
  .bi-caret-left-fill::before { content: "\\f22d"; }
  .bi-caret-left-square-fill::before { content: "\\f22e"; }
  .bi-caret-left-square::before { content: "\\f22f"; }
  .bi-caret-left::before { content: "\\f230"; }
  .bi-caret-right-fill::before { content: "\\f231"; }
  .bi-caret-right-square-fill::before { content: "\\f232"; }
  .bi-caret-right-square::before { content: "\\f233"; }
  .bi-caret-right::before { content: "\\f234"; }
  .bi-caret-up-fill::before { content: "\\f235"; }
  .bi-caret-up-square-fill::before { content: "\\f236"; }
  .bi-caret-up-square::before { content: "\\f237"; }
  .bi-caret-up::before { content: "\\f238"; }
  .bi-cart-check-fill::before { content: "\\f239"; }
  .bi-cart-check::before { content: "\\f23a"; }
  .bi-cart-dash-fill::before { content: "\\f23b"; }
  .bi-cart-dash::before { content: "\\f23c"; }
  .bi-cart-fill::before { content: "\\f23d"; }
  .bi-cart-plus-fill::before { content: "\\f23e"; }
  .bi-cart-plus::before { content: "\\f23f"; }
  .bi-cart-x-fill::before { content: "\\f240"; }
  .bi-cart-x::before { content: "\\f241"; }
  .bi-cart::before { content: "\\f242"; }
  .bi-cart2::before { content: "\\f243"; }
  .bi-cart3::before { content: "\\f244"; }
  .bi-cart4::before { content: "\\f245"; }
  .bi-cash-stack::before { content: "\\f246"; }
  .bi-cash::before { content: "\\f247"; }
  .bi-cast::before { content: "\\f248"; }
  .bi-chat-dots-fill::before { content: "\\f249"; }
  .bi-chat-dots::before { content: "\\f24a"; }
  .bi-chat-fill::before { content: "\\f24b"; }
  .bi-chat-left-dots-fill::before { content: "\\f24c"; }
  .bi-chat-left-dots::before { content: "\\f24d"; }
  .bi-chat-left-fill::before { content: "\\f24e"; }
  .bi-chat-left-quote-fill::before { content: "\\f24f"; }
  .bi-chat-left-quote::before { content: "\\f250"; }
  .bi-chat-left-text-fill::before { content: "\\f251"; }
  .bi-chat-left-text::before { content: "\\f252"; }
  .bi-chat-left::before { content: "\\f253"; }
  .bi-chat-quote-fill::before { content: "\\f254"; }
  .bi-chat-quote::before { content: "\\f255"; }
  .bi-chat-right-dots-fill::before { content: "\\f256"; }
  .bi-chat-right-dots::before { content: "\\f257"; }
  .bi-chat-right-fill::before { content: "\\f258"; }
  .bi-chat-right-quote-fill::before { content: "\\f259"; }
  .bi-chat-right-quote::before { content: "\\f25a"; }
  .bi-chat-right-text-fill::before { content: "\\f25b"; }
  .bi-chat-right-text::before { content: "\\f25c"; }
  .bi-chat-right::before { content: "\\f25d"; }
  .bi-chat-square-dots-fill::before { content: "\\f25e"; }
  .bi-chat-square-dots::before { content: "\\f25f"; }
  .bi-chat-square-fill::before { content: "\\f260"; }
  .bi-chat-square-quote-fill::before { content: "\\f261"; }
  .bi-chat-square-quote::before { content: "\\f262"; }
  .bi-chat-square-text-fill::before { content: "\\f263"; }
  .bi-chat-square-text::before { content: "\\f264"; }
  .bi-chat-square::before { content: "\\f265"; }
  .bi-chat-text-fill::before { content: "\\f266"; }
  .bi-chat-text::before { content: "\\f267"; }
  .bi-chat::before { content: "\\f268"; }
  .bi-check-all::before { content: "\\f269"; }
  .bi-check-circle-fill::before { content: "\\f26a"; }
  .bi-check-circle::before { content: "\\f26b"; }
  .bi-check-square-fill::before { content: "\\f26c"; }
  .bi-check-square::before { content: "\\f26d"; }
  .bi-check::before { content: "\\f26e"; }
  .bi-check2-all::before { content: "\\f26f"; }
  .bi-check2-circle::before { content: "\\f270"; }
  .bi-check2-square::before { content: "\\f271"; }
  .bi-check2::before { content: "\\f272"; }
  .bi-chevron-bar-contract::before { content: "\\f273"; }
  .bi-chevron-bar-down::before { content: "\\f274"; }
  .bi-chevron-bar-expand::before { content: "\\f275"; }
  .bi-chevron-bar-left::before { content: "\\f276"; }
  .bi-chevron-bar-right::before { content: "\\f277"; }
  .bi-chevron-bar-up::before { content: "\\f278"; }
  .bi-chevron-compact-down::before { content: "\\f279"; }
  .bi-chevron-compact-left::before { content: "\\f27a"; }
  .bi-chevron-compact-right::before { content: "\\f27b"; }
  .bi-chevron-compact-up::before { content: "\\f27c"; }
  .bi-chevron-contract::before { content: "\\f27d"; }
  .bi-chevron-double-down::before { content: "\\f27e"; }
  .bi-chevron-double-left::before { content: "\\f27f"; }
  .bi-chevron-double-right::before { content: "\\f280"; }
  .bi-chevron-double-up::before { content: "\\f281"; }
  .bi-chevron-down::before { content: "\\f282"; }
  .bi-chevron-expand::before { content: "\\f283"; }
  .bi-chevron-left::before { content: "\\f284"; }
  .bi-chevron-right::before { content: "\\f285"; }
  .bi-chevron-up::before { content: "\\f286"; }
  .bi-circle-fill::before { content: "\\f287"; }
  .bi-circle-half::before { content: "\\f288"; }
  .bi-circle-square::before { content: "\\f289"; }
  .bi-circle::before { content: "\\f28a"; }
  .bi-clipboard-check::before { content: "\\f28b"; }
  .bi-clipboard-data::before { content: "\\f28c"; }
  .bi-clipboard-minus::before { content: "\\f28d"; }
  .bi-clipboard-plus::before { content: "\\f28e"; }
  .bi-clipboard-x::before { content: "\\f28f"; }
  .bi-clipboard::before { content: "\\f290"; }
  .bi-clock-fill::before { content: "\\f291"; }
  .bi-clock-history::before { content: "\\f292"; }
  .bi-clock::before { content: "\\f293"; }
  .bi-cloud-arrow-down-fill::before { content: "\\f294"; }
  .bi-cloud-arrow-down::before { content: "\\f295"; }
  .bi-cloud-arrow-up-fill::before { content: "\\f296"; }
  .bi-cloud-arrow-up::before { content: "\\f297"; }
  .bi-cloud-check-fill::before { content: "\\f298"; }
  .bi-cloud-check::before { content: "\\f299"; }
  .bi-cloud-download-fill::before { content: "\\f29a"; }
  .bi-cloud-download::before { content: "\\f29b"; }
  .bi-cloud-drizzle-fill::before { content: "\\f29c"; }
  .bi-cloud-drizzle::before { content: "\\f29d"; }
  .bi-cloud-fill::before { content: "\\f29e"; }
  .bi-cloud-fog-fill::before { content: "\\f29f"; }
  .bi-cloud-fog::before { content: "\\f2a0"; }
  .bi-cloud-fog2-fill::before { content: "\\f2a1"; }
  .bi-cloud-fog2::before { content: "\\f2a2"; }
  .bi-cloud-hail-fill::before { content: "\\f2a3"; }
  .bi-cloud-hail::before { content: "\\f2a4"; }
  .bi-cloud-haze-1::before { content: "\\f2a5"; }
  .bi-cloud-haze-fill::before { content: "\\f2a6"; }
  .bi-cloud-haze::before { content: "\\f2a7"; }
  .bi-cloud-haze2-fill::before { content: "\\f2a8"; }
  .bi-cloud-lightning-fill::before { content: "\\f2a9"; }
  .bi-cloud-lightning-rain-fill::before { content: "\\f2aa"; }
  .bi-cloud-lightning-rain::before { content: "\\f2ab"; }
  .bi-cloud-lightning::before { content: "\\f2ac"; }
  .bi-cloud-minus-fill::before { content: "\\f2ad"; }
  .bi-cloud-minus::before { content: "\\f2ae"; }
  .bi-cloud-moon-fill::before { content: "\\f2af"; }
  .bi-cloud-moon::before { content: "\\f2b0"; }
  .bi-cloud-plus-fill::before { content: "\\f2b1"; }
  .bi-cloud-plus::before { content: "\\f2b2"; }
  .bi-cloud-rain-fill::before { content: "\\f2b3"; }
  .bi-cloud-rain-heavy-fill::before { content: "\\f2b4"; }
  .bi-cloud-rain-heavy::before { content: "\\f2b5"; }
  .bi-cloud-rain::before { content: "\\f2b6"; }
  .bi-cloud-slash-fill::before { content: "\\f2b7"; }
  .bi-cloud-slash::before { content: "\\f2b8"; }
  .bi-cloud-sleet-fill::before { content: "\\f2b9"; }
  .bi-cloud-sleet::before { content: "\\f2ba"; }
  .bi-cloud-snow-fill::before { content: "\\f2bb"; }
  .bi-cloud-snow::before { content: "\\f2bc"; }
  .bi-cloud-sun-fill::before { content: "\\f2bd"; }
  .bi-cloud-sun::before { content: "\\f2be"; }
  .bi-cloud-upload-fill::before { content: "\\f2bf"; }
  .bi-cloud-upload::before { content: "\\f2c0"; }
  .bi-cloud::before { content: "\\f2c1"; }
  .bi-clouds-fill::before { content: "\\f2c2"; }
  .bi-clouds::before { content: "\\f2c3"; }
  .bi-cloudy-fill::before { content: "\\f2c4"; }
  .bi-cloudy::before { content: "\\f2c5"; }
  .bi-code-slash::before { content: "\\f2c6"; }
  .bi-code-square::before { content: "\\f2c7"; }
  .bi-code::before { content: "\\f2c8"; }
  .bi-collection-fill::before { content: "\\f2c9"; }
  .bi-collection-play-fill::before { content: "\\f2ca"; }
  .bi-collection-play::before { content: "\\f2cb"; }
  .bi-collection::before { content: "\\f2cc"; }
  .bi-columns-gap::before { content: "\\f2cd"; }
  .bi-columns::before { content: "\\f2ce"; }
  .bi-command::before { content: "\\f2cf"; }
  .bi-compass-fill::before { content: "\\f2d0"; }
  .bi-compass::before { content: "\\f2d1"; }
  .bi-cone-striped::before { content: "\\f2d2"; }
  .bi-cone::before { content: "\\f2d3"; }
  .bi-controller::before { content: "\\f2d4"; }
  .bi-cpu-fill::before { content: "\\f2d5"; }
  .bi-cpu::before { content: "\\f2d6"; }
  .bi-credit-card-2-back-fill::before { content: "\\f2d7"; }
  .bi-credit-card-2-back::before { content: "\\f2d8"; }
  .bi-credit-card-2-front-fill::before { content: "\\f2d9"; }
  .bi-credit-card-2-front::before { content: "\\f2da"; }
  .bi-credit-card-fill::before { content: "\\f2db"; }
  .bi-credit-card::before { content: "\\f2dc"; }
  .bi-crop::before { content: "\\f2dd"; }
  .bi-cup-fill::before { content: "\\f2de"; }
  .bi-cup-straw::before { content: "\\f2df"; }
  .bi-cup::before { content: "\\f2e0"; }
  .bi-cursor-fill::before { content: "\\f2e1"; }
  .bi-cursor-text::before { content: "\\f2e2"; }
  .bi-cursor::before { content: "\\f2e3"; }
  .bi-dash-circle-dotted::before { content: "\\f2e4"; }
  .bi-dash-circle-fill::before { content: "\\f2e5"; }
  .bi-dash-circle::before { content: "\\f2e6"; }
  .bi-dash-square-dotted::before { content: "\\f2e7"; }
  .bi-dash-square-fill::before { content: "\\f2e8"; }
  .bi-dash-square::before { content: "\\f2e9"; }
  .bi-dash::before { content: "\\f2ea"; }
  .bi-diagram-2-fill::before { content: "\\f2eb"; }
  .bi-diagram-2::before { content: "\\f2ec"; }
  .bi-diagram-3-fill::before { content: "\\f2ed"; }
  .bi-diagram-3::before { content: "\\f2ee"; }
  .bi-diamond-fill::before { content: "\\f2ef"; }
  .bi-diamond-half::before { content: "\\f2f0"; }
  .bi-diamond::before { content: "\\f2f1"; }
  .bi-dice-1-fill::before { content: "\\f2f2"; }
  .bi-dice-1::before { content: "\\f2f3"; }
  .bi-dice-2-fill::before { content: "\\f2f4"; }
  .bi-dice-2::before { content: "\\f2f5"; }
  .bi-dice-3-fill::before { content: "\\f2f6"; }
  .bi-dice-3::before { content: "\\f2f7"; }
  .bi-dice-4-fill::before { content: "\\f2f8"; }
  .bi-dice-4::before { content: "\\f2f9"; }
  .bi-dice-5-fill::before { content: "\\f2fa"; }
  .bi-dice-5::before { content: "\\f2fb"; }
  .bi-dice-6-fill::before { content: "\\f2fc"; }
  .bi-dice-6::before { content: "\\f2fd"; }
  .bi-disc-fill::before { content: "\\f2fe"; }
  .bi-disc::before { content: "\\f2ff"; }
  .bi-discord::before { content: "\\f300"; }
  .bi-display-fill::before { content: "\\f301"; }
  .bi-display::before { content: "\\f302"; }
  .bi-distribute-horizontal::before { content: "\\f303"; }
  .bi-distribute-vertical::before { content: "\\f304"; }
  .bi-door-closed-fill::before { content: "\\f305"; }
  .bi-door-closed::before { content: "\\f306"; }
  .bi-door-open-fill::before { content: "\\f307"; }
  .bi-door-open::before { content: "\\f308"; }
  .bi-dot::before { content: "\\f309"; }
  .bi-download::before { content: "\\f30a"; }
  .bi-droplet-fill::before { content: "\\f30b"; }
  .bi-droplet-half::before { content: "\\f30c"; }
  .bi-droplet::before { content: "\\f30d"; }
  .bi-earbuds::before { content: "\\f30e"; }
  .bi-easel-fill::before { content: "\\f30f"; }
  .bi-easel::before { content: "\\f310"; }
  .bi-egg-fill::before { content: "\\f311"; }
  .bi-egg-fried::before { content: "\\f312"; }
  .bi-egg::before { content: "\\f313"; }
  .bi-eject-fill::before { content: "\\f314"; }
  .bi-eject::before { content: "\\f315"; }
  .bi-emoji-angry-fill::before { content: "\\f316"; }
  .bi-emoji-angry::before { content: "\\f317"; }
  .bi-emoji-dizzy-fill::before { content: "\\f318"; }
  .bi-emoji-dizzy::before { content: "\\f319"; }
  .bi-emoji-expressionless-fill::before { content: "\\f31a"; }
  .bi-emoji-expressionless::before { content: "\\f31b"; }
  .bi-emoji-frown-fill::before { content: "\\f31c"; }
  .bi-emoji-frown::before { content: "\\f31d"; }
  .bi-emoji-heart-eyes-fill::before { content: "\\f31e"; }
  .bi-emoji-heart-eyes::before { content: "\\f31f"; }
  .bi-emoji-laughing-fill::before { content: "\\f320"; }
  .bi-emoji-laughing::before { content: "\\f321"; }
  .bi-emoji-neutral-fill::before { content: "\\f322"; }
  .bi-emoji-neutral::before { content: "\\f323"; }
  .bi-emoji-smile-fill::before { content: "\\f324"; }
  .bi-emoji-smile-upside-down-fill::before { content: "\\f325"; }
  .bi-emoji-smile-upside-down::before { content: "\\f326"; }
  .bi-emoji-smile::before { content: "\\f327"; }
  .bi-emoji-sunglasses-fill::before { content: "\\f328"; }
  .bi-emoji-sunglasses::before { content: "\\f329"; }
  .bi-emoji-wink-fill::before { content: "\\f32a"; }
  .bi-emoji-wink::before { content: "\\f32b"; }
  .bi-envelope-fill::before { content: "\\f32c"; }
  .bi-envelope-open-fill::before { content: "\\f32d"; }
  .bi-envelope-open::before { content: "\\f32e"; }
  .bi-envelope::before { content: "\\f32f"; }
  .bi-eraser-fill::before { content: "\\f330"; }
  .bi-eraser::before { content: "\\f331"; }
  .bi-exclamation-circle-fill::before { content: "\\f332"; }
  .bi-exclamation-circle::before { content: "\\f333"; }
  .bi-exclamation-diamond-fill::before { content: "\\f334"; }
  .bi-exclamation-diamond::before { content: "\\f335"; }
  .bi-exclamation-octagon-fill::before { content: "\\f336"; }
  .bi-exclamation-octagon::before { content: "\\f337"; }
  .bi-exclamation-square-fill::before { content: "\\f338"; }
  .bi-exclamation-square::before { content: "\\f339"; }
  .bi-exclamation-triangle-fill::before { content: "\\f33a"; }
  .bi-exclamation-triangle::before { content: "\\f33b"; }
  .bi-exclamation::before { content: "\\f33c"; }
  .bi-exclude::before { content: "\\f33d"; }
  .bi-eye-fill::before { content: "\\f33e"; }
  .bi-eye-slash-fill::before { content: "\\f33f"; }
  .bi-eye-slash::before { content: "\\f340"; }
  .bi-eye::before { content: "\\f341"; }
  .bi-eyedropper::before { content: "\\f342"; }
  .bi-eyeglasses::before { content: "\\f343"; }
  .bi-facebook::before { content: "\\f344"; }
  .bi-file-arrow-down-fill::before { content: "\\f345"; }
  .bi-file-arrow-down::before { content: "\\f346"; }
  .bi-file-arrow-up-fill::before { content: "\\f347"; }
  .bi-file-arrow-up::before { content: "\\f348"; }
  .bi-file-bar-graph-fill::before { content: "\\f349"; }
  .bi-file-bar-graph::before { content: "\\f34a"; }
  .bi-file-binary-fill::before { content: "\\f34b"; }
  .bi-file-binary::before { content: "\\f34c"; }
  .bi-file-break-fill::before { content: "\\f34d"; }
  .bi-file-break::before { content: "\\f34e"; }
  .bi-file-check-fill::before { content: "\\f34f"; }
  .bi-file-check::before { content: "\\f350"; }
  .bi-file-code-fill::before { content: "\\f351"; }
  .bi-file-code::before { content: "\\f352"; }
  .bi-file-diff-fill::before { content: "\\f353"; }
  .bi-file-diff::before { content: "\\f354"; }
  .bi-file-earmark-arrow-down-fill::before { content: "\\f355"; }
  .bi-file-earmark-arrow-down::before { content: "\\f356"; }
  .bi-file-earmark-arrow-up-fill::before { content: "\\f357"; }
  .bi-file-earmark-arrow-up::before { content: "\\f358"; }
  .bi-file-earmark-bar-graph-fill::before { content: "\\f359"; }
  .bi-file-earmark-bar-graph::before { content: "\\f35a"; }
  .bi-file-earmark-binary-fill::before { content: "\\f35b"; }
  .bi-file-earmark-binary::before { content: "\\f35c"; }
  .bi-file-earmark-break-fill::before { content: "\\f35d"; }
  .bi-file-earmark-break::before { content: "\\f35e"; }
  .bi-file-earmark-check-fill::before { content: "\\f35f"; }
  .bi-file-earmark-check::before { content: "\\f360"; }
  .bi-file-earmark-code-fill::before { content: "\\f361"; }
  .bi-file-earmark-code::before { content: "\\f362"; }
  .bi-file-earmark-diff-fill::before { content: "\\f363"; }
  .bi-file-earmark-diff::before { content: "\\f364"; }
  .bi-file-earmark-easel-fill::before { content: "\\f365"; }
  .bi-file-earmark-easel::before { content: "\\f366"; }
  .bi-file-earmark-excel-fill::before { content: "\\f367"; }
  .bi-file-earmark-excel::before { content: "\\f368"; }
  .bi-file-earmark-fill::before { content: "\\f369"; }
  .bi-file-earmark-font-fill::before { content: "\\f36a"; }
  .bi-file-earmark-font::before { content: "\\f36b"; }
  .bi-file-earmark-image-fill::before { content: "\\f36c"; }
  .bi-file-earmark-image::before { content: "\\f36d"; }
  .bi-file-earmark-lock-fill::before { content: "\\f36e"; }
  .bi-file-earmark-lock::before { content: "\\f36f"; }
  .bi-file-earmark-lock2-fill::before { content: "\\f370"; }
  .bi-file-earmark-lock2::before { content: "\\f371"; }
  .bi-file-earmark-medical-fill::before { content: "\\f372"; }
  .bi-file-earmark-medical::before { content: "\\f373"; }
  .bi-file-earmark-minus-fill::before { content: "\\f374"; }
  .bi-file-earmark-minus::before { content: "\\f375"; }
  .bi-file-earmark-music-fill::before { content: "\\f376"; }
  .bi-file-earmark-music::before { content: "\\f377"; }
  .bi-file-earmark-person-fill::before { content: "\\f378"; }
  .bi-file-earmark-person::before { content: "\\f379"; }
  .bi-file-earmark-play-fill::before { content: "\\f37a"; }
  .bi-file-earmark-play::before { content: "\\f37b"; }
  .bi-file-earmark-plus-fill::before { content: "\\f37c"; }
  .bi-file-earmark-plus::before { content: "\\f37d"; }
  .bi-file-earmark-post-fill::before { content: "\\f37e"; }
  .bi-file-earmark-post::before { content: "\\f37f"; }
  .bi-file-earmark-ppt-fill::before { content: "\\f380"; }
  .bi-file-earmark-ppt::before { content: "\\f381"; }
  .bi-file-earmark-richtext-fill::before { content: "\\f382"; }
  .bi-file-earmark-richtext::before { content: "\\f383"; }
  .bi-file-earmark-ruled-fill::before { content: "\\f384"; }
  .bi-file-earmark-ruled::before { content: "\\f385"; }
  .bi-file-earmark-slides-fill::before { content: "\\f386"; }
  .bi-file-earmark-slides::before { content: "\\f387"; }
  .bi-file-earmark-spreadsheet-fill::before { content: "\\f388"; }
  .bi-file-earmark-spreadsheet::before { content: "\\f389"; }
  .bi-file-earmark-text-fill::before { content: "\\f38a"; }
  .bi-file-earmark-text::before { content: "\\f38b"; }
  .bi-file-earmark-word-fill::before { content: "\\f38c"; }
  .bi-file-earmark-word::before { content: "\\f38d"; }
  .bi-file-earmark-x-fill::before { content: "\\f38e"; }
  .bi-file-earmark-x::before { content: "\\f38f"; }
  .bi-file-earmark-zip-fill::before { content: "\\f390"; }
  .bi-file-earmark-zip::before { content: "\\f391"; }
  .bi-file-earmark::before { content: "\\f392"; }
  .bi-file-easel-fill::before { content: "\\f393"; }
  .bi-file-easel::before { content: "\\f394"; }
  .bi-file-excel-fill::before { content: "\\f395"; }
  .bi-file-excel::before { content: "\\f396"; }
  .bi-file-fill::before { content: "\\f397"; }
  .bi-file-font-fill::before { content: "\\f398"; }
  .bi-file-font::before { content: "\\f399"; }
  .bi-file-image-fill::before { content: "\\f39a"; }
  .bi-file-image::before { content: "\\f39b"; }
  .bi-file-lock-fill::before { content: "\\f39c"; }
  .bi-file-lock::before { content: "\\f39d"; }
  .bi-file-lock2-fill::before { content: "\\f39e"; }
  .bi-file-lock2::before { content: "\\f39f"; }
  .bi-file-medical-fill::before { content: "\\f3a0"; }
  .bi-file-medical::before { content: "\\f3a1"; }
  .bi-file-minus-fill::before { content: "\\f3a2"; }
  .bi-file-minus::before { content: "\\f3a3"; }
  .bi-file-music-fill::before { content: "\\f3a4"; }
  .bi-file-music::before { content: "\\f3a5"; }
  .bi-file-person-fill::before { content: "\\f3a6"; }
  .bi-file-person::before { content: "\\f3a7"; }
  .bi-file-play-fill::before { content: "\\f3a8"; }
  .bi-file-play::before { content: "\\f3a9"; }
  .bi-file-plus-fill::before { content: "\\f3aa"; }
  .bi-file-plus::before { content: "\\f3ab"; }
  .bi-file-post-fill::before { content: "\\f3ac"; }
  .bi-file-post::before { content: "\\f3ad"; }
  .bi-file-ppt-fill::before { content: "\\f3ae"; }
  .bi-file-ppt::before { content: "\\f3af"; }
  .bi-file-richtext-fill::before { content: "\\f3b0"; }
  .bi-file-richtext::before { content: "\\f3b1"; }
  .bi-file-ruled-fill::before { content: "\\f3b2"; }
  .bi-file-ruled::before { content: "\\f3b3"; }
  .bi-file-slides-fill::before { content: "\\f3b4"; }
  .bi-file-slides::before { content: "\\f3b5"; }
  .bi-file-spreadsheet-fill::before { content: "\\f3b6"; }
  .bi-file-spreadsheet::before { content: "\\f3b7"; }
  .bi-file-text-fill::before { content: "\\f3b8"; }
  .bi-file-text::before { content: "\\f3b9"; }
  .bi-file-word-fill::before { content: "\\f3ba"; }
  .bi-file-word::before { content: "\\f3bb"; }
  .bi-file-x-fill::before { content: "\\f3bc"; }
  .bi-file-x::before { content: "\\f3bd"; }
  .bi-file-zip-fill::before { content: "\\f3be"; }
  .bi-file-zip::before { content: "\\f3bf"; }
  .bi-file::before { content: "\\f3c0"; }
  .bi-files-alt::before { content: "\\f3c1"; }
  .bi-files::before { content: "\\f3c2"; }
  .bi-film::before { content: "\\f3c3"; }
  .bi-filter-circle-fill::before { content: "\\f3c4"; }
  .bi-filter-circle::before { content: "\\f3c5"; }
  .bi-filter-left::before { content: "\\f3c6"; }
  .bi-filter-right::before { content: "\\f3c7"; }
  .bi-filter-square-fill::before { content: "\\f3c8"; }
  .bi-filter-square::before { content: "\\f3c9"; }
  .bi-filter::before { content: "\\f3ca"; }
  .bi-flag-fill::before { content: "\\f3cb"; }
  .bi-flag::before { content: "\\f3cc"; }
  .bi-flower1::before { content: "\\f3cd"; }
  .bi-flower2::before { content: "\\f3ce"; }
  .bi-flower3::before { content: "\\f3cf"; }
  .bi-folder-check::before { content: "\\f3d0"; }
  .bi-folder-fill::before { content: "\\f3d1"; }
  .bi-folder-minus::before { content: "\\f3d2"; }
  .bi-folder-plus::before { content: "\\f3d3"; }
  .bi-folder-symlink-fill::before { content: "\\f3d4"; }
  .bi-folder-symlink::before { content: "\\f3d5"; }
  .bi-folder-x::before { content: "\\f3d6"; }
  .bi-folder::before { content: "\\f3d7"; }
  .bi-folder2-open::before { content: "\\f3d8"; }
  .bi-folder2::before { content: "\\f3d9"; }
  .bi-fonts::before { content: "\\f3da"; }
  .bi-forward-fill::before { content: "\\f3db"; }
  .bi-forward::before { content: "\\f3dc"; }
  .bi-front::before { content: "\\f3dd"; }
  .bi-fullscreen-exit::before { content: "\\f3de"; }
  .bi-fullscreen::before { content: "\\f3df"; }
  .bi-funnel-fill::before { content: "\\f3e0"; }
  .bi-funnel::before { content: "\\f3e1"; }
  .bi-gear-fill::before { content: "\\f3e2"; }
  .bi-gear-wide-connected::before { content: "\\f3e3"; }
  .bi-gear-wide::before { content: "\\f3e4"; }
  .bi-gear::before { content: "\\f3e5"; }
  .bi-gem::before { content: "\\f3e6"; }
  .bi-geo-alt-fill::before { content: "\\f3e7"; }
  .bi-geo-alt::before { content: "\\f3e8"; }
  .bi-geo-fill::before { content: "\\f3e9"; }
  .bi-geo::before { content: "\\f3ea"; }
  .bi-gift-fill::before { content: "\\f3eb"; }
  .bi-gift::before { content: "\\f3ec"; }
  .bi-github::before { content: "\\f3ed"; }
  .bi-globe::before { content: "\\f3ee"; }
  .bi-globe2::before { content: "\\f3ef"; }
  .bi-google::before { content: "\\f3f0"; }
  .bi-graph-down::before { content: "\\f3f1"; }
  .bi-graph-up::before { content: "\\f3f2"; }
  .bi-grid-1x2-fill::before { content: "\\f3f3"; }
  .bi-grid-1x2::before { content: "\\f3f4"; }
  .bi-grid-3x2-gap-fill::before { content: "\\f3f5"; }
  .bi-grid-3x2-gap::before { content: "\\f3f6"; }
  .bi-grid-3x2::before { content: "\\f3f7"; }
  .bi-grid-3x3-gap-fill::before { content: "\\f3f8"; }
  .bi-grid-3x3-gap::before { content: "\\f3f9"; }
  .bi-grid-3x3::before { content: "\\f3fa"; }
  .bi-grid-fill::before { content: "\\f3fb"; }
  .bi-grid::before { content: "\\f3fc"; }
  .bi-grip-horizontal::before { content: "\\f3fd"; }
  .bi-grip-vertical::before { content: "\\f3fe"; }
  .bi-hammer::before { content: "\\f3ff"; }
  .bi-hand-index-fill::before { content: "\\f400"; }
  .bi-hand-index-thumb-fill::before { content: "\\f401"; }
  .bi-hand-index-thumb::before { content: "\\f402"; }
  .bi-hand-index::before { content: "\\f403"; }
  .bi-hand-thumbs-down-fill::before { content: "\\f404"; }
  .bi-hand-thumbs-down::before { content: "\\f405"; }
  .bi-hand-thumbs-up-fill::before { content: "\\f406"; }
  .bi-hand-thumbs-up::before { content: "\\f407"; }
  .bi-handbag-fill::before { content: "\\f408"; }
  .bi-handbag::before { content: "\\f409"; }
  .bi-hash::before { content: "\\f40a"; }
  .bi-hdd-fill::before { content: "\\f40b"; }
  .bi-hdd-network-fill::before { content: "\\f40c"; }
  .bi-hdd-network::before { content: "\\f40d"; }
  .bi-hdd-rack-fill::before { content: "\\f40e"; }
  .bi-hdd-rack::before { content: "\\f40f"; }
  .bi-hdd-stack-fill::before { content: "\\f410"; }
  .bi-hdd-stack::before { content: "\\f411"; }
  .bi-hdd::before { content: "\\f412"; }
  .bi-headphones::before { content: "\\f413"; }
  .bi-headset::before { content: "\\f414"; }
  .bi-heart-fill::before { content: "\\f415"; }
  .bi-heart-half::before { content: "\\f416"; }
  .bi-heart::before { content: "\\f417"; }
  .bi-heptagon-fill::before { content: "\\f418"; }
  .bi-heptagon-half::before { content: "\\f419"; }
  .bi-heptagon::before { content: "\\f41a"; }
  .bi-hexagon-fill::before { content: "\\f41b"; }
  .bi-hexagon-half::before { content: "\\f41c"; }
  .bi-hexagon::before { content: "\\f41d"; }
  .bi-hourglass-bottom::before { content: "\\f41e"; }
  .bi-hourglass-split::before { content: "\\f41f"; }
  .bi-hourglass-top::before { content: "\\f420"; }
  .bi-hourglass::before { content: "\\f421"; }
  .bi-house-door-fill::before { content: "\\f422"; }
  .bi-house-door::before { content: "\\f423"; }
  .bi-house-fill::before { content: "\\f424"; }
  .bi-house::before { content: "\\f425"; }
  .bi-hr::before { content: "\\f426"; }
  .bi-hurricane::before { content: "\\f427"; }
  .bi-image-alt::before { content: "\\f428"; }
  .bi-image-fill::before { content: "\\f429"; }
  .bi-image::before { content: "\\f42a"; }
  .bi-images::before { content: "\\f42b"; }
  .bi-inbox-fill::before { content: "\\f42c"; }
  .bi-inbox::before { content: "\\f42d"; }
  .bi-inboxes-fill::before { content: "\\f42e"; }
  .bi-inboxes::before { content: "\\f42f"; }
  .bi-info-circle-fill::before { content: "\\f430"; }
  .bi-info-circle::before { content: "\\f431"; }
  .bi-info-square-fill::before { content: "\\f432"; }
  .bi-info-square::before { content: "\\f433"; }
  .bi-info::before { content: "\\f434"; }
  .bi-input-cursor-text::before { content: "\\f435"; }
  .bi-input-cursor::before { content: "\\f436"; }
  .bi-instagram::before { content: "\\f437"; }
  .bi-intersect::before { content: "\\f438"; }
  .bi-journal-album::before { content: "\\f439"; }
  .bi-journal-arrow-down::before { content: "\\f43a"; }
  .bi-journal-arrow-up::before { content: "\\f43b"; }
  .bi-journal-bookmark-fill::before { content: "\\f43c"; }
  .bi-journal-bookmark::before { content: "\\f43d"; }
  .bi-journal-check::before { content: "\\f43e"; }
  .bi-journal-code::before { content: "\\f43f"; }
  .bi-journal-medical::before { content: "\\f440"; }
  .bi-journal-minus::before { content: "\\f441"; }
  .bi-journal-plus::before { content: "\\f442"; }
  .bi-journal-richtext::before { content: "\\f443"; }
  .bi-journal-text::before { content: "\\f444"; }
  .bi-journal-x::before { content: "\\f445"; }
  .bi-journal::before { content: "\\f446"; }
  .bi-journals::before { content: "\\f447"; }
  .bi-joystick::before { content: "\\f448"; }
  .bi-justify-left::before { content: "\\f449"; }
  .bi-justify-right::before { content: "\\f44a"; }
  .bi-justify::before { content: "\\f44b"; }
  .bi-kanban-fill::before { content: "\\f44c"; }
  .bi-kanban::before { content: "\\f44d"; }
  .bi-key-fill::before { content: "\\f44e"; }
  .bi-key::before { content: "\\f44f"; }
  .bi-keyboard-fill::before { content: "\\f450"; }
  .bi-keyboard::before { content: "\\f451"; }
  .bi-ladder::before { content: "\\f452"; }
  .bi-lamp-fill::before { content: "\\f453"; }
  .bi-lamp::before { content: "\\f454"; }
  .bi-laptop-fill::before { content: "\\f455"; }
  .bi-laptop::before { content: "\\f456"; }
  .bi-layer-backward::before { content: "\\f457"; }
  .bi-layer-forward::before { content: "\\f458"; }
  .bi-layers-fill::before { content: "\\f459"; }
  .bi-layers-half::before { content: "\\f45a"; }
  .bi-layers::before { content: "\\f45b"; }
  .bi-layout-sidebar-inset-reverse::before { content: "\\f45c"; }
  .bi-layout-sidebar-inset::before { content: "\\f45d"; }
  .bi-layout-sidebar-reverse::before { content: "\\f45e"; }
  .bi-layout-sidebar::before { content: "\\f45f"; }
  .bi-layout-split::before { content: "\\f460"; }
  .bi-layout-text-sidebar-reverse::before { content: "\\f461"; }
  .bi-layout-text-sidebar::before { content: "\\f462"; }
  .bi-layout-text-window-reverse::before { content: "\\f463"; }
  .bi-layout-text-window::before { content: "\\f464"; }
  .bi-layout-three-columns::before { content: "\\f465"; }
  .bi-layout-wtf::before { content: "\\f466"; }
  .bi-life-preserver::before { content: "\\f467"; }
  .bi-lightbulb-fill::before { content: "\\f468"; }
  .bi-lightbulb-off-fill::before { content: "\\f469"; }
  .bi-lightbulb-off::before { content: "\\f46a"; }
  .bi-lightbulb::before { content: "\\f46b"; }
  .bi-lightning-charge-fill::before { content: "\\f46c"; }
  .bi-lightning-charge::before { content: "\\f46d"; }
  .bi-lightning-fill::before { content: "\\f46e"; }
  .bi-lightning::before { content: "\\f46f"; }
  .bi-link-45deg::before { content: "\\f470"; }
  .bi-link::before { content: "\\f471"; }
  .bi-linkedin::before { content: "\\f472"; }
  .bi-list-check::before { content: "\\f473"; }
  .bi-list-nested::before { content: "\\f474"; }
  .bi-list-ol::before { content: "\\f475"; }
  .bi-list-stars::before { content: "\\f476"; }
  .bi-list-task::before { content: "\\f477"; }
  .bi-list-ul::before { content: "\\f478"; }
  .bi-list::before { content: "\\f479"; }
  .bi-lock-fill::before { content: "\\f47a"; }
  .bi-lock::before { content: "\\f47b"; }
  .bi-mailbox::before { content: "\\f47c"; }
  .bi-mailbox2::before { content: "\\f47d"; }
  .bi-map-fill::before { content: "\\f47e"; }
  .bi-map::before { content: "\\f47f"; }
  .bi-markdown-fill::before { content: "\\f480"; }
  .bi-markdown::before { content: "\\f481"; }
  .bi-mask::before { content: "\\f482"; }
  .bi-megaphone-fill::before { content: "\\f483"; }
  .bi-megaphone::before { content: "\\f484"; }
  .bi-menu-app-fill::before { content: "\\f485"; }
  .bi-menu-app::before { content: "\\f486"; }
  .bi-menu-button-fill::before { content: "\\f487"; }
  .bi-menu-button-wide-fill::before { content: "\\f488"; }
  .bi-menu-button-wide::before { content: "\\f489"; }
  .bi-menu-button::before { content: "\\f48a"; }
  .bi-menu-down::before { content: "\\f48b"; }
  .bi-menu-up::before { content: "\\f48c"; }
  .bi-mic-fill::before { content: "\\f48d"; }
  .bi-mic-mute-fill::before { content: "\\f48e"; }
  .bi-mic-mute::before { content: "\\f48f"; }
  .bi-mic::before { content: "\\f490"; }
  .bi-minecart-loaded::before { content: "\\f491"; }
  .bi-minecart::before { content: "\\f492"; }
  .bi-moisture::before { content: "\\f493"; }
  .bi-moon-fill::before { content: "\\f494"; }
  .bi-moon-stars-fill::before { content: "\\f495"; }
  .bi-moon-stars::before { content: "\\f496"; }
  .bi-moon::before { content: "\\f497"; }
  .bi-mouse-fill::before { content: "\\f498"; }
  .bi-mouse::before { content: "\\f499"; }
  .bi-mouse2-fill::before { content: "\\f49a"; }
  .bi-mouse2::before { content: "\\f49b"; }
  .bi-mouse3-fill::before { content: "\\f49c"; }
  .bi-mouse3::before { content: "\\f49d"; }
  .bi-music-note-beamed::before { content: "\\f49e"; }
  .bi-music-note-list::before { content: "\\f49f"; }
  .bi-music-note::before { content: "\\f4a0"; }
  .bi-music-player-fill::before { content: "\\f4a1"; }
  .bi-music-player::before { content: "\\f4a2"; }
  .bi-newspaper::before { content: "\\f4a3"; }
  .bi-node-minus-fill::before { content: "\\f4a4"; }
  .bi-node-minus::before { content: "\\f4a5"; }
  .bi-node-plus-fill::before { content: "\\f4a6"; }
  .bi-node-plus::before { content: "\\f4a7"; }
  .bi-nut-fill::before { content: "\\f4a8"; }
  .bi-nut::before { content: "\\f4a9"; }
  .bi-octagon-fill::before { content: "\\f4aa"; }
  .bi-octagon-half::before { content: "\\f4ab"; }
  .bi-octagon::before { content: "\\f4ac"; }
  .bi-option::before { content: "\\f4ad"; }
  .bi-outlet::before { content: "\\f4ae"; }
  .bi-paint-bucket::before { content: "\\f4af"; }
  .bi-palette-fill::before { content: "\\f4b0"; }
  .bi-palette::before { content: "\\f4b1"; }
  .bi-palette2::before { content: "\\f4b2"; }
  .bi-paperclip::before { content: "\\f4b3"; }
  .bi-paragraph::before { content: "\\f4b4"; }
  .bi-patch-check-fill::before { content: "\\f4b5"; }
  .bi-patch-check::before { content: "\\f4b6"; }
  .bi-patch-exclamation-fill::before { content: "\\f4b7"; }
  .bi-patch-exclamation::before { content: "\\f4b8"; }
  .bi-patch-minus-fill::before { content: "\\f4b9"; }
  .bi-patch-minus::before { content: "\\f4ba"; }
  .bi-patch-plus-fill::before { content: "\\f4bb"; }
  .bi-patch-plus::before { content: "\\f4bc"; }
  .bi-patch-question-fill::before { content: "\\f4bd"; }
  .bi-patch-question::before { content: "\\f4be"; }
  .bi-pause-btn-fill::before { content: "\\f4bf"; }
  .bi-pause-btn::before { content: "\\f4c0"; }
  .bi-pause-circle-fill::before { content: "\\f4c1"; }
  .bi-pause-circle::before { content: "\\f4c2"; }
  .bi-pause-fill::before { content: "\\f4c3"; }
  .bi-pause::before { content: "\\f4c4"; }
  .bi-peace-fill::before { content: "\\f4c5"; }
  .bi-peace::before { content: "\\f4c6"; }
  .bi-pen-fill::before { content: "\\f4c7"; }
  .bi-pen::before { content: "\\f4c8"; }
  .bi-pencil-fill::before { content: "\\f4c9"; }
  .bi-pencil-square::before { content: "\\f4ca"; }
  .bi-pencil::before { content: "\\f4cb"; }
  .bi-pentagon-fill::before { content: "\\f4cc"; }
  .bi-pentagon-half::before { content: "\\f4cd"; }
  .bi-pentagon::before { content: "\\f4ce"; }
  .bi-people-fill::before { content: "\\f4cf"; }
  .bi-people::before { content: "\\f4d0"; }
  .bi-percent::before { content: "\\f4d1"; }
  .bi-person-badge-fill::before { content: "\\f4d2"; }
  .bi-person-badge::before { content: "\\f4d3"; }
  .bi-person-bounding-box::before { content: "\\f4d4"; }
  .bi-person-check-fill::before { content: "\\f4d5"; }
  .bi-person-check::before { content: "\\f4d6"; }
  .bi-person-circle::before { content: "\\f4d7"; }
  .bi-person-dash-fill::before { content: "\\f4d8"; }
  .bi-person-dash::before { content: "\\f4d9"; }
  .bi-person-fill::before { content: "\\f4da"; }
  .bi-person-lines-fill::before { content: "\\f4db"; }
  .bi-person-plus-fill::before { content: "\\f4dc"; }
  .bi-person-plus::before { content: "\\f4dd"; }
  .bi-person-square::before { content: "\\f4de"; }
  .bi-person-x-fill::before { content: "\\f4df"; }
  .bi-person-x::before { content: "\\f4e0"; }
  .bi-person::before { content: "\\f4e1"; }
  .bi-phone-fill::before { content: "\\f4e2"; }
  .bi-phone-landscape-fill::before { content: "\\f4e3"; }
  .bi-phone-landscape::before { content: "\\f4e4"; }
  .bi-phone-vibrate-fill::before { content: "\\f4e5"; }
  .bi-phone-vibrate::before { content: "\\f4e6"; }
  .bi-phone::before { content: "\\f4e7"; }
  .bi-pie-chart-fill::before { content: "\\f4e8"; }
  .bi-pie-chart::before { content: "\\f4e9"; }
  .bi-pin-angle-fill::before { content: "\\f4ea"; }
  .bi-pin-angle::before { content: "\\f4eb"; }
  .bi-pin-fill::before { content: "\\f4ec"; }
  .bi-pin::before { content: "\\f4ed"; }
  .bi-pip-fill::before { content: "\\f4ee"; }
  .bi-pip::before { content: "\\f4ef"; }
  .bi-play-btn-fill::before { content: "\\f4f0"; }
  .bi-play-btn::before { content: "\\f4f1"; }
  .bi-play-circle-fill::before { content: "\\f4f2"; }
  .bi-play-circle::before { content: "\\f4f3"; }
  .bi-play-fill::before { content: "\\f4f4"; }
  .bi-play::before { content: "\\f4f5"; }
  .bi-plug-fill::before { content: "\\f4f6"; }
  .bi-plug::before { content: "\\f4f7"; }
  .bi-plus-circle-dotted::before { content: "\\f4f8"; }
  .bi-plus-circle-fill::before { content: "\\f4f9"; }
  .bi-plus-circle::before { content: "\\f4fa"; }
  .bi-plus-square-dotted::before { content: "\\f4fb"; }
  .bi-plus-square-fill::before { content: "\\f4fc"; }
  .bi-plus-square::before { content: "\\f4fd"; }
  .bi-plus::before { content: "\\f4fe"; }
  .bi-power::before { content: "\\f4ff"; }
  .bi-printer-fill::before { content: "\\f500"; }
  .bi-printer::before { content: "\\f501"; }
  .bi-puzzle-fill::before { content: "\\f502"; }
  .bi-puzzle::before { content: "\\f503"; }
  .bi-question-circle-fill::before { content: "\\f504"; }
  .bi-question-circle::before { content: "\\f505"; }
  .bi-question-diamond-fill::before { content: "\\f506"; }
  .bi-question-diamond::before { content: "\\f507"; }
  .bi-question-octagon-fill::before { content: "\\f508"; }
  .bi-question-octagon::before { content: "\\f509"; }
  .bi-question-square-fill::before { content: "\\f50a"; }
  .bi-question-square::before { content: "\\f50b"; }
  .bi-question::before { content: "\\f50c"; }
  .bi-rainbow::before { content: "\\f50d"; }
  .bi-receipt-cutoff::before { content: "\\f50e"; }
  .bi-receipt::before { content: "\\f50f"; }
  .bi-reception-0::before { content: "\\f510"; }
  .bi-reception-1::before { content: "\\f511"; }
  .bi-reception-2::before { content: "\\f512"; }
  .bi-reception-3::before { content: "\\f513"; }
  .bi-reception-4::before { content: "\\f514"; }
  .bi-record-btn-fill::before { content: "\\f515"; }
  .bi-record-btn::before { content: "\\f516"; }
  .bi-record-circle-fill::before { content: "\\f517"; }
  .bi-record-circle::before { content: "\\f518"; }
  .bi-record-fill::before { content: "\\f519"; }
  .bi-record::before { content: "\\f51a"; }
  .bi-record2-fill::before { content: "\\f51b"; }
  .bi-record2::before { content: "\\f51c"; }
  .bi-reply-all-fill::before { content: "\\f51d"; }
  .bi-reply-all::before { content: "\\f51e"; }
  .bi-reply-fill::before { content: "\\f51f"; }
  .bi-reply::before { content: "\\f520"; }
  .bi-rss-fill::before { content: "\\f521"; }
  .bi-rss::before { content: "\\f522"; }
  .bi-rulers::before { content: "\\f523"; }
  .bi-save-fill::before { content: "\\f524"; }
  .bi-save::before { content: "\\f525"; }
  .bi-save2-fill::before { content: "\\f526"; }
  .bi-save2::before { content: "\\f527"; }
  .bi-scissors::before { content: "\\f528"; }
  .bi-screwdriver::before { content: "\\f529"; }
  .bi-search::before { content: "\\f52a"; }
  .bi-segmented-nav::before { content: "\\f52b"; }
  .bi-server::before { content: "\\f52c"; }
  .bi-share-fill::before { content: "\\f52d"; }
  .bi-share::before { content: "\\f52e"; }
  .bi-shield-check::before { content: "\\f52f"; }
  .bi-shield-exclamation::before { content: "\\f530"; }
  .bi-shield-fill-check::before { content: "\\f531"; }
  .bi-shield-fill-exclamation::before { content: "\\f532"; }
  .bi-shield-fill-minus::before { content: "\\f533"; }
  .bi-shield-fill-plus::before { content: "\\f534"; }
  .bi-shield-fill-x::before { content: "\\f535"; }
  .bi-shield-fill::before { content: "\\f536"; }
  .bi-shield-lock-fill::before { content: "\\f537"; }
  .bi-shield-lock::before { content: "\\f538"; }
  .bi-shield-minus::before { content: "\\f539"; }
  .bi-shield-plus::before { content: "\\f53a"; }
  .bi-shield-shaded::before { content: "\\f53b"; }
  .bi-shield-slash-fill::before { content: "\\f53c"; }
  .bi-shield-slash::before { content: "\\f53d"; }
  .bi-shield-x::before { content: "\\f53e"; }
  .bi-shield::before { content: "\\f53f"; }
  .bi-shift-fill::before { content: "\\f540"; }
  .bi-shift::before { content: "\\f541"; }
  .bi-shop-window::before { content: "\\f542"; }
  .bi-shop::before { content: "\\f543"; }
  .bi-shuffle::before { content: "\\f544"; }
  .bi-signpost-2-fill::before { content: "\\f545"; }
  .bi-signpost-2::before { content: "\\f546"; }
  .bi-signpost-fill::before { content: "\\f547"; }
  .bi-signpost-split-fill::before { content: "\\f548"; }
  .bi-signpost-split::before { content: "\\f549"; }
  .bi-signpost::before { content: "\\f54a"; }
  .bi-sim-fill::before { content: "\\f54b"; }
  .bi-sim::before { content: "\\f54c"; }
  .bi-skip-backward-btn-fill::before { content: "\\f54d"; }
  .bi-skip-backward-btn::before { content: "\\f54e"; }
  .bi-skip-backward-circle-fill::before { content: "\\f54f"; }
  .bi-skip-backward-circle::before { content: "\\f550"; }
  .bi-skip-backward-fill::before { content: "\\f551"; }
  .bi-skip-backward::before { content: "\\f552"; }
  .bi-skip-end-btn-fill::before { content: "\\f553"; }
  .bi-skip-end-btn::before { content: "\\f554"; }
  .bi-skip-end-circle-fill::before { content: "\\f555"; }
  .bi-skip-end-circle::before { content: "\\f556"; }
  .bi-skip-end-fill::before { content: "\\f557"; }
  .bi-skip-end::before { content: "\\f558"; }
  .bi-skip-forward-btn-fill::before { content: "\\f559"; }
  .bi-skip-forward-btn::before { content: "\\f55a"; }
  .bi-skip-forward-circle-fill::before { content: "\\f55b"; }
  .bi-skip-forward-circle::before { content: "\\f55c"; }
  .bi-skip-forward-fill::before { content: "\\f55d"; }
  .bi-skip-forward::before { content: "\\f55e"; }
  .bi-skip-start-btn-fill::before { content: "\\f55f"; }
  .bi-skip-start-btn::before { content: "\\f560"; }
  .bi-skip-start-circle-fill::before { content: "\\f561"; }
  .bi-skip-start-circle::before { content: "\\f562"; }
  .bi-skip-start-fill::before { content: "\\f563"; }
  .bi-skip-start::before { content: "\\f564"; }
  .bi-slack::before { content: "\\f565"; }
  .bi-slash-circle-fill::before { content: "\\f566"; }
  .bi-slash-circle::before { content: "\\f567"; }
  .bi-slash-square-fill::before { content: "\\f568"; }
  .bi-slash-square::before { content: "\\f569"; }
  .bi-slash::before { content: "\\f56a"; }
  .bi-sliders::before { content: "\\f56b"; }
  .bi-smartwatch::before { content: "\\f56c"; }
  .bi-snow::before { content: "\\f56d"; }
  .bi-snow2::before { content: "\\f56e"; }
  .bi-snow3::before { content: "\\f56f"; }
  .bi-sort-alpha-down-alt::before { content: "\\f570"; }
  .bi-sort-alpha-down::before { content: "\\f571"; }
  .bi-sort-alpha-up-alt::before { content: "\\f572"; }
  .bi-sort-alpha-up::before { content: "\\f573"; }
  .bi-sort-down-alt::before { content: "\\f574"; }
  .bi-sort-down::before { content: "\\f575"; }
  .bi-sort-numeric-down-alt::before { content: "\\f576"; }
  .bi-sort-numeric-down::before { content: "\\f577"; }
  .bi-sort-numeric-up-alt::before { content: "\\f578"; }
  .bi-sort-numeric-up::before { content: "\\f579"; }
  .bi-sort-up-alt::before { content: "\\f57a"; }
  .bi-sort-up::before { content: "\\f57b"; }
  .bi-soundwave::before { content: "\\f57c"; }
  .bi-speaker-fill::before { content: "\\f57d"; }
  .bi-speaker::before { content: "\\f57e"; }
  .bi-speedometer::before { content: "\\f57f"; }
  .bi-speedometer2::before { content: "\\f580"; }
  .bi-spellcheck::before { content: "\\f581"; }
  .bi-square-fill::before { content: "\\f582"; }
  .bi-square-half::before { content: "\\f583"; }
  .bi-square::before { content: "\\f584"; }
  .bi-stack::before { content: "\\f585"; }
  .bi-star-fill::before { content: "\\f586"; }
  .bi-star-half::before { content: "\\f587"; }
  .bi-star::before { content: "\\f588"; }
  .bi-stars::before { content: "\\f589"; }
  .bi-stickies-fill::before { content: "\\f58a"; }
  .bi-stickies::before { content: "\\f58b"; }
  .bi-sticky-fill::before { content: "\\f58c"; }
  .bi-sticky::before { content: "\\f58d"; }
  .bi-stop-btn-fill::before { content: "\\f58e"; }
  .bi-stop-btn::before { content: "\\f58f"; }
  .bi-stop-circle-fill::before { content: "\\f590"; }
  .bi-stop-circle::before { content: "\\f591"; }
  .bi-stop-fill::before { content: "\\f592"; }
  .bi-stop::before { content: "\\f593"; }
  .bi-stoplights-fill::before { content: "\\f594"; }
  .bi-stoplights::before { content: "\\f595"; }
  .bi-stopwatch-fill::before { content: "\\f596"; }
  .bi-stopwatch::before { content: "\\f597"; }
  .bi-subtract::before { content: "\\f598"; }
  .bi-suit-club-fill::before { content: "\\f599"; }
  .bi-suit-club::before { content: "\\f59a"; }
  .bi-suit-diamond-fill::before { content: "\\f59b"; }
  .bi-suit-diamond::before { content: "\\f59c"; }
  .bi-suit-heart-fill::before { content: "\\f59d"; }
  .bi-suit-heart::before { content: "\\f59e"; }
  .bi-suit-spade-fill::before { content: "\\f59f"; }
  .bi-suit-spade::before { content: "\\f5a0"; }
  .bi-sun-fill::before { content: "\\f5a1"; }
  .bi-sun::before { content: "\\f5a2"; }
  .bi-sunglasses::before { content: "\\f5a3"; }
  .bi-sunrise-fill::before { content: "\\f5a4"; }
  .bi-sunrise::before { content: "\\f5a5"; }
  .bi-sunset-fill::before { content: "\\f5a6"; }
  .bi-sunset::before { content: "\\f5a7"; }
  .bi-symmetry-horizontal::before { content: "\\f5a8"; }
  .bi-symmetry-vertical::before { content: "\\f5a9"; }
  .bi-table::before { content: "\\f5aa"; }
  .bi-tablet-fill::before { content: "\\f5ab"; }
  .bi-tablet-landscape-fill::before { content: "\\f5ac"; }
  .bi-tablet-landscape::before { content: "\\f5ad"; }
  .bi-tablet::before { content: "\\f5ae"; }
  .bi-tag-fill::before { content: "\\f5af"; }
  .bi-tag::before { content: "\\f5b0"; }
  .bi-tags-fill::before { content: "\\f5b1"; }
  .bi-tags::before { content: "\\f5b2"; }
  .bi-telegram::before { content: "\\f5b3"; }
  .bi-telephone-fill::before { content: "\\f5b4"; }
  .bi-telephone-forward-fill::before { content: "\\f5b5"; }
  .bi-telephone-forward::before { content: "\\f5b6"; }
  .bi-telephone-inbound-fill::before { content: "\\f5b7"; }
  .bi-telephone-inbound::before { content: "\\f5b8"; }
  .bi-telephone-minus-fill::before { content: "\\f5b9"; }
  .bi-telephone-minus::before { content: "\\f5ba"; }
  .bi-telephone-outbound-fill::before { content: "\\f5bb"; }
  .bi-telephone-outbound::before { content: "\\f5bc"; }
  .bi-telephone-plus-fill::before { content: "\\f5bd"; }
  .bi-telephone-plus::before { content: "\\f5be"; }
  .bi-telephone-x-fill::before { content: "\\f5bf"; }
  .bi-telephone-x::before { content: "\\f5c0"; }
  .bi-telephone::before { content: "\\f5c1"; }
  .bi-terminal-fill::before { content: "\\f5c2"; }
  .bi-terminal::before { content: "\\f5c3"; }
  .bi-text-center::before { content: "\\f5c4"; }
  .bi-text-indent-left::before { content: "\\f5c5"; }
  .bi-text-indent-right::before { content: "\\f5c6"; }
  .bi-text-left::before { content: "\\f5c7"; }
  .bi-text-paragraph::before { content: "\\f5c8"; }
  .bi-text-right::before { content: "\\f5c9"; }
  .bi-textarea-resize::before { content: "\\f5ca"; }
  .bi-textarea-t::before { content: "\\f5cb"; }
  .bi-textarea::before { content: "\\f5cc"; }
  .bi-thermometer-half::before { content: "\\f5cd"; }
  .bi-thermometer-high::before { content: "\\f5ce"; }
  .bi-thermometer-low::before { content: "\\f5cf"; }
  .bi-thermometer-snow::before { content: "\\f5d0"; }
  .bi-thermometer-sun::before { content: "\\f5d1"; }
  .bi-thermometer::before { content: "\\f5d2"; }
  .bi-three-dots-vertical::before { content: "\\f5d3"; }
  .bi-three-dots::before { content: "\\f5d4"; }
  .bi-toggle-off::before { content: "\\f5d5"; }
  .bi-toggle-on::before { content: "\\f5d6"; }
  .bi-toggle2-off::before { content: "\\f5d7"; }
  .bi-toggle2-on::before { content: "\\f5d8"; }
  .bi-toggles::before { content: "\\f5d9"; }
  .bi-toggles2::before { content: "\\f5da"; }
  .bi-tools::before { content: "\\f5db"; }
  .bi-tornado::before { content: "\\f5dc"; }
  .bi-trash-fill::before { content: "\\f5dd"; }
  .bi-trash::before { content: "\\f5de"; }
  .bi-trash2-fill::before { content: "\\f5df"; }
  .bi-trash2::before { content: "\\f5e0"; }
  .bi-tree-fill::before { content: "\\f5e1"; }
  .bi-tree::before { content: "\\f5e2"; }
  .bi-triangle-fill::before { content: "\\f5e3"; }
  .bi-triangle-half::before { content: "\\f5e4"; }
  .bi-triangle::before { content: "\\f5e5"; }
  .bi-trophy-fill::before { content: "\\f5e6"; }
  .bi-trophy::before { content: "\\f5e7"; }
  .bi-tropical-storm::before { content: "\\f5e8"; }
  .bi-truck-flatbed::before { content: "\\f5e9"; }
  .bi-truck::before { content: "\\f5ea"; }
  .bi-tsunami::before { content: "\\f5eb"; }
  .bi-tv-fill::before { content: "\\f5ec"; }
  .bi-tv::before { content: "\\f5ed"; }
  .bi-twitch::before { content: "\\f5ee"; }
  .bi-twitter::before { content: "\\f5ef"; }
  .bi-type-bold::before { content: "\\f5f0"; }
  .bi-type-h1::before { content: "\\f5f1"; }
  .bi-type-h2::before { content: "\\f5f2"; }
  .bi-type-h3::before { content: "\\f5f3"; }
  .bi-type-italic::before { content: "\\f5f4"; }
  .bi-type-strikethrough::before { content: "\\f5f5"; }
  .bi-type-underline::before { content: "\\f5f6"; }
  .bi-type::before { content: "\\f5f7"; }
  .bi-ui-checks-grid::before { content: "\\f5f8"; }
  .bi-ui-checks::before { content: "\\f5f9"; }
  .bi-ui-radios-grid::before { content: "\\f5fa"; }
  .bi-ui-radios::before { content: "\\f5fb"; }
  .bi-umbrella-fill::before { content: "\\f5fc"; }
  .bi-umbrella::before { content: "\\f5fd"; }
  .bi-union::before { content: "\\f5fe"; }
  .bi-unlock-fill::before { content: "\\f5ff"; }
  .bi-unlock::before { content: "\\f600"; }
  .bi-upc-scan::before { content: "\\f601"; }
  .bi-upc::before { content: "\\f602"; }
  .bi-upload::before { content: "\\f603"; }
  .bi-vector-pen::before { content: "\\f604"; }
  .bi-view-list::before { content: "\\f605"; }
  .bi-view-stacked::before { content: "\\f606"; }
  .bi-vinyl-fill::before { content: "\\f607"; }
  .bi-vinyl::before { content: "\\f608"; }
  .bi-voicemail::before { content: "\\f609"; }
  .bi-volume-down-fill::before { content: "\\f60a"; }
  .bi-volume-down::before { content: "\\f60b"; }
  .bi-volume-mute-fill::before { content: "\\f60c"; }
  .bi-volume-mute::before { content: "\\f60d"; }
  .bi-volume-off-fill::before { content: "\\f60e"; }
  .bi-volume-off::before { content: "\\f60f"; }
  .bi-volume-up-fill::before { content: "\\f610"; }
  .bi-volume-up::before { content: "\\f611"; }
  .bi-vr::before { content: "\\f612"; }
  .bi-wallet-fill::before { content: "\\f613"; }
  .bi-wallet::before { content: "\\f614"; }
  .bi-wallet2::before { content: "\\f615"; }
  .bi-watch::before { content: "\\f616"; }
  .bi-water::before { content: "\\f617"; }
  .bi-whatsapp::before { content: "\\f618"; }
  .bi-wifi-1::before { content: "\\f619"; }
  .bi-wifi-2::before { content: "\\f61a"; }
  .bi-wifi-off::before { content: "\\f61b"; }
  .bi-wifi::before { content: "\\f61c"; }
  .bi-wind::before { content: "\\f61d"; }
  .bi-window-dock::before { content: "\\f61e"; }
  .bi-window-sidebar::before { content: "\\f61f"; }
  .bi-window::before { content: "\\f620"; }
  .bi-wrench::before { content: "\\f621"; }
  .bi-x-circle-fill::before { content: "\\f622"; }
  .bi-x-circle::before { content: "\\f623"; }
  .bi-x-diamond-fill::before { content: "\\f624"; }
  .bi-x-diamond::before { content: "\\f625"; }
  .bi-x-octagon-fill::before { content: "\\f626"; }
  .bi-x-octagon::before { content: "\\f627"; }
  .bi-x-square-fill::before { content: "\\f628"; }
  .bi-x-square::before { content: "\\f629"; }
  .bi-x::before { content: "\\f62a"; }
  .bi-youtube::before { content: "\\f62b"; }
  .bi-zoom-in::before { content: "\\f62c"; }
  .bi-zoom-out::before { content: "\\f62d"; }
  .bi-bank::before { content: "\\f62e"; }
  .bi-bank2::before { content: "\\f62f"; }
  .bi-bell-slash-fill::before { content: "\\f630"; }
  .bi-bell-slash::before { content: "\\f631"; }
  .bi-cash-coin::before { content: "\\f632"; }
  .bi-check-lg::before { content: "\\f633"; }
  .bi-coin::before { content: "\\f634"; }
  .bi-currency-bitcoin::before { content: "\\f635"; }
  .bi-currency-dollar::before { content: "\\f636"; }
  .bi-currency-euro::before { content: "\\f637"; }
  .bi-currency-exchange::before { content: "\\f638"; }
  .bi-currency-pound::before { content: "\\f639"; }
  .bi-currency-yen::before { content: "\\f63a"; }
  .bi-dash-lg::before { content: "\\f63b"; }
  .bi-exclamation-lg::before { content: "\\f63c"; }
  .bi-file-earmark-pdf-fill::before { content: "\\f63d"; }
  .bi-file-earmark-pdf::before { content: "\\f63e"; }
  .bi-file-pdf-fill::before { content: "\\f63f"; }
  .bi-file-pdf::before { content: "\\f640"; }
  .bi-gender-ambiguous::before { content: "\\f641"; }
  .bi-gender-female::before { content: "\\f642"; }
  .bi-gender-male::before { content: "\\f643"; }
  .bi-gender-trans::before { content: "\\f644"; }
  .bi-headset-vr::before { content: "\\f645"; }
  .bi-info-lg::before { content: "\\f646"; }
  .bi-mastodon::before { content: "\\f647"; }
  .bi-messenger::before { content: "\\f648"; }
  .bi-piggy-bank-fill::before { content: "\\f649"; }
  .bi-piggy-bank::before { content: "\\f64a"; }
  .bi-pin-map-fill::before { content: "\\f64b"; }
  .bi-pin-map::before { content: "\\f64c"; }
  .bi-plus-lg::before { content: "\\f64d"; }
  .bi-question-lg::before { content: "\\f64e"; }
  .bi-recycle::before { content: "\\f64f"; }
  .bi-reddit::before { content: "\\f650"; }
  .bi-safe-fill::before { content: "\\f651"; }
  .bi-safe2-fill::before { content: "\\f652"; }
  .bi-safe2::before { content: "\\f653"; }
  .bi-sd-card-fill::before { content: "\\f654"; }
  .bi-sd-card::before { content: "\\f655"; }
  .bi-skype::before { content: "\\f656"; }
  .bi-slash-lg::before { content: "\\f657"; }
  .bi-translate::before { content: "\\f658"; }
  .bi-x-lg::before { content: "\\f659"; }
  .bi-safe::before { content: "\\f65a"; }
`;class Bt extends pt{handlers=[];static get styles(){return[Mt,It]}listen(t,e,r,o){this.handlers.findIndex((o=>o.target===t&&o.event===e&&o.handler===r))<0&&(this.handlers.push({target:t,event:e,handler:r}),t.addEventListener(e,r,o))}unlisten(t,e,r,o){const i=this.handlers.findIndex((o=>o.target===t&&o.event===e&&o.handler===r));i>=0&&(this.handlers.splice(i,1),t.removeEventListener(e,r,o))}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback();for(const t of this.handlers)t.target.removeEventListener(t.event,t.handler)}}const Ct=["fz-array","fz-asset","fz-boolean","fz-constant","fz-date","fz-datetime","fz-document","fz-enum","fz-enum-array","fz-geolocation","fz-integer","fz-markdown","fz-enum-check","fz-float","fz-object","fz-range","fz-signature","fz-string","fz-textarea","fz-enum-typeahead","fz-time","fz-uuid"].join(",");class Lt extends Bt{#t="#";get pointer(){return this.#t}set pointer(t){this.#t=t}#e={};get schema(){return this.#e}set schema(t){this.#e=t}#r={};get data(){return this.#r}set data(t){this.#r=t}#o=null;get name(){return this.#o}set name(t){this.#o=t}#i=null;get index(){return this.#i}set index(t){this.#i=t}#n=!1;get valid(){return this.#n}set valid(t){this.#n=t}#a="";get message(){return this.#a}set message(t){this.#a=t}_initdone=!1;_dofocus=!1;_form;get value(){if(null!=this.data)return this.name&&!(this.name in this.data)&&(this.data[this.name]=void 0),this.data[this.key]}set value(t){this.cascadeValue(t),this.check(),this.triggerChange()}cascadeValue(t){const e=this.schema,r=this.form;if(this.data)return this.data[this.key]=At(t,this.data,this.schema),!1;if(!r)return console.error(`cascadeValue root form not found (impossible!!!) => ${this.pointer}`),!1;if(!this.pointer.startsWith("#/"))return console.error(`cascadeValue pointer not absolute => ${this.pointer}`),!1;if("#/"===this.pointer)return console.error(`newChild cant change root => ${this.pointer}`),!1;const o=this.pointer.split("/").map((t=>/^\d+$/.test(t)?parseInt(t,10):t)),i=[];for(let t=e;t;t=t.parent)i.unshift(t);if(o.length!==i.length)return console.error("cascadeValue fail not all schema found on path "),!1;const n=[];let a="",s=r.root;for(let e=0;e<o.length&&s;e++){const l=o[e],c=i[e];a=e?`${a}/${l}`:`${l}`;const b=r.getfieldFromData(a);b&&n.push(b);const d=c.basetype;switch(!0){case"#"==l:break;case e===o.length-1:{const e=At(t,s,c);b&&!b.data&&(b.data=s),s=s[l]=e}break;case null==s[l]&&"array"==d:{const t=At([],s,c);b&&!b.data&&(b.data=s),s=s[l]=t}break;case null==s[l]&&"object"==d:{const t=At({},s,c);b&&!b.data&&(b.data=s),s=s[l]=t}break;default:s="object"==d||"array"==d?s[l]:null}}return n.forEach((t=>t.requestUpdate())),this.requestUpdate(),!0}get nullable(){return"_nullable"in this.schema?this.schema._nullable:this.schema.nullAllowed}get key(){return this.name??this.index??-1}get label(){return this.isItem?null!=this.index?this.index+1:"-":this.schema.title||this.schema.description||this.name}get isItem(){return null!=this.index}get isProperty(){return null!=this.name}get visible(){return!this.data||!this.schema.visible||!!this.evalExpr("visible")}get required(){let t=!1;return this.isProperty&&this.schema.requiredWhen&&(t=this.evalExpr("requiredWhen")??!1),t}get readonly(){return!this.form||(!!this.form.readonly||!(!this.data||!this.schema.readonly)&&this.evalExpr("readonly"))}get empty(){return Xt(this.schema)}get isEmpty(){return St(this.value)}dofocus(){this._dofocus=!0}eventStop(t){t&&(t.preventDefault(),t.stopPropagation())}fields(){const t=[];return this.shadowRoot?.querySelectorAll(Ct).forEach((e=>t.push(e))),t}get form(){return this._form||(this._form=wt("fz-form",this)),this._form}static get styles(){return[...super.styles,l`
            .invalid {
                border: 1px solid rgba(220,53,69) !important;
            }
            .invalid:focus, input:out-of-range:focus {
                box-shadow:0 0 0 .25rem rgba(220,53,69,.25);
                border: 1px solid red !important;
            }
            .valid {
                border: 1px solid rgba(25,135,84) !important;
            }
            .valid:focus {
                box-shadow:0 0 0 .25rem rgba(25,135,84,.25) !important;
                border: 1px solid green !important;
            }
            .error-message {
                margin:0;
                text-align: right;
                font-size:small;
                font-style: italic;
                color: rgba(220,53,69);
                float: right;
            }
            .error-truncated {
                white-space: nowrap;
                overflow:hidden !important;
                text-overflow: ellipsis;
            } 
        `]}render(){return U`
            <div ?hidden="${!this.visible}">
                <div style="padding-top: 5px">${this.renderField()}</div>
                ${this.valid?U``:U`
                        <div class="row">
                            <span id="error" class="error-message error-truncated" @click="${this.toggleError}">
                                ${this.message}
                            </span>
                        </div>`}
            </div>
        `}toggleError(){this.shadowRoot?.getElementById("error")?.classList.toggle("error-truncated")}get renderLabel(){return""===this.schema.title?U``:this.isItem?U`
            <label for="input" class="col-sm-3 col-form-label" @click="${this.labelClicked}">
                <div @click="${this.labelClicked}"><span class="badge bg-primary rounded-pill">${this.label}</span></div>
            </label>`:U`
            <label for="input" class="col-sm-3 col-form-label" @click="${this.labelClicked}">
                <div>${this.label}${this.required?"*":""}</div>
            </label>`}renderItem(t,e){let r=null,o=null;if(!this.schema)return U``;"string"==typeof e&&(r=e),"number"==typeof e&&(o=e);const i=null==this.data?null:this.data[this.key];switch(t.field){case"fz-enum":return U`<fz-enum .pointer="${this.pointer}/${e}" .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-enum>`;case"fz-enum-check":return U`<fz-enum-check .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-enum-check>`;case"fz-date":return U`<fz-date .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-date>`;case"fz-time":return U`<fz-time .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-time>`;case"fz-datetime":return U`<fz-datetime .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-datetime>`;case"fz-textarea":return U`<fz-textarea .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-textarea>`;case"fz-string":return U`<fz-string .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-string>`;case"fz-asset":return U`<fz-asset .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-asset>`;case"fz-signature":return U`<fz-signature .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-signature>`;case"fz-boolean":return U`<fz-boolean .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-boolean>`;case"fz-float":return U`<fz-float .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-float>`;case"fz-integer":return U`<fz-integer .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-integer>`;case"fz-range":return U`<fz-range .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-range>`;case"fz-geolocation":return U`<fz-geolocation .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-geolocation>`;case"fz-array":return U`<fz-array .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-array>`;case"fz-object":return U` <fz-object .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-object>`;case"fz-constant":return U` <fz-constant .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-constant>`;case"fz-enum-array":return U` <fz-enum-array .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-enum-array>`;case"fz-document":return U` <fz-document .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-document>`;case"fz-uuid":return U` <fz-uuid .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-uuid>`;case"fz-markdown":return U` <fz-markdown .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-markdown>`;case"fz-enum-typeahead":return U` <fz-enum-typeahead .pointer="${this.pointer}/${e}"  .schema="${t}" .name="${r}" .index="${o}" .data="${i}"></fz-enum-typeahead>`;default:return U`<div class="alert alert-warning" role="alert">field name=${r} type ${t.basetype}/${t.field} not implemented !</div>`}}connectedCallback(){super.connectedCallback(),this.form?.addField(this.schema.pointer,this.pointer,this)}disconnectedCallback(){super.disconnectedCallback(),this.form?.removeField(this.schema.pointer,this.pointer)}requestUpdate(t,e){super.requestUpdate(t,e)}update(t){this.schema.expression&&(this.value=this.evalExpr("expression")),this._initdone||(this.firstUpdate(),this._initdone=!0),super.update(t),this._dofocus&&(this._dofocus=!1,this.focus())}firstUpdate(){}labelClicked(t){this.eventStop(t)}change(){this.check();const t=new CustomEvent("update",{detail:{data:this.data,schema:this.schema,field:this},bubbles:!0,composed:!0});this.dispatchEvent(t)}triggerChange(){this.evalExpr("change"),this.schema.observers&&this.schema.observers.length&&this.dispatchEvent(new CustomEvent("observed-changed",{detail:{observers:this.schema.observers,field:this},bubbles:!0,composed:!0}))}abstract(t,e){let r;if(null==t){if(this.isEmpty)return"~";r=this.schema.abstract?this.evalExpr("abstract"):Vt(this.schema,this.value)}else if(e&&e.refTo){const o=e.refTo(e,this.value[t],this.data,this.name,this.derefFunc),i=o.refarray.findIndex((e=>e[o.refname]===this.value[t])),n=o.refarray[i],a=qt(n);r=a?.abstract?a.abstract(a,n,o.refarray,i,this.derefFunc):Vt(a,this.value[t])}else{const o="string"==typeof t?this.schema.properties[t]:e;r=o?.abstract?o.abstract(o,this.value[t],this.data,this.name,this.derefFunc):Vt(o,this.value[t])}return r.length>200?r.substring(0,200)+"...":r}evalExpr(t,e,r,o,i){return"function"!=typeof this.schema?.[t]?null:null!=e?this.schema[t](e,r,o,i,this.derefFunc,this.form?.options.userdata):this.schema[t](this.schema,this.value,this.data,this.name,this.derefFunc,this.form?.options.userdata)}get derefFunc(){return(t,...e)=>{const r=String.raw(t,e);return yt(this.form.root,this.data,this.key,r)}}}t([A({type:String}),e("design:type",Object)],Lt.prototype,"pointer",null),t([A({type:Object}),e("design:type",Object)],Lt.prototype,"schema",null),t([A({type:Object}),e("design:type",Object)],Lt.prototype,"data",null),t([A({type:String}),e("design:type",Object)],Lt.prototype,"name",null),t([A({type:Number}),e("design:type",Object)],Lt.prototype,"index",null),t([A({attribute:!1}),e("design:type",Object)],Lt.prototype,"valid",null),t([A({attribute:!1}),e("design:type",Object)],Lt.prototype,"message",null);const Wt=["valueMissing","badInput","patternMismatch","tooLong","tooShort","rangeOverflow","rangeUnderflow","stepMismatch","customError","typeMismatch"];class Zt extends Lt{get input(){return this.shadowRoot?.getElementById("input")}renderField(){return U`
            <div class="form-group row">
                ${this.renderLabel}
                <div class="col-sm">${this.renderInput()}</div>
            </div>`}firstUpdated(t){this.input&&(this.listen(this.input,"keydown",(t=>this.debugKey(t))),this.input.value=this.convertToInput(this.value)),this.check()}update(t){super.update(t),this.input&&(this.input.value=this.convertToInput(this.value))}change(){this.input&&("boolean"===this.schema.basetype?this.value=this.input.checked:this.value=this.convertToValue(this.input.valueAsNumber?this.input.valueAsNumber:this.input.value)),super.change()}focus(){this.input?.focus()}debugKey(t){if("F9"===t.key){window._FZ_FORM_FIELD_DEBUG=this,console.log(Wt.map((t=>`${t} = ${this.input.validity[t]}`)).join("\n"));const e=[["name",this.name],["valid",this.valid],["visible",this.visible],["required",this.required],["readonly",this.readonly],["check",JSON.stringify(this.input.validity)],["data",JSON.stringify(this.data,((t,e)=>"symbol"==typeof t?void 0:e),4)],["input",this.input.value],["value",this.value],["schema",JSON.stringify(this.schema,Rt)]];console.log(e.map((t=>t.join(" = "))).join("\n")),this.eventStop(t)}}check(){const t=this.input;if(!t)return this.valid=!1,void(this.message="");const e=this.input.validity;let r=0,o="";Wt.forEach((i=>{if("valid"===i)return;const n=e[i];r+=n?1:0,n&&(o=Gt(i,t))})),this.valid=0===r||1===r&&e.badInput&&null==this.value&&!this.required,this.message=this.valid?"":o,this.input?.classList.add(this.valid?"valid":"invalid"),this.input?.classList.remove(this.valid?"invalid":"valid")}}class Ht extends Zt{enums;refenum=null;renderInput(){return this.evalEnums(),U`
            ${this.withAdd?U`<fz-item-dlg  @click="${this.eventStop}" .reference="${this.refenum}" @close="${this.close}"></fz-item-dlg>`:""}
            ${this.renderEnum()}`}get withAdd(){return this.schema.refTo&&this.schema.addTo}get showNullChoice(){if(!this.schema.nullAllowed)return!1;return this.schema.nullAllowed&&(!this.schema.enum?.includes(null)||!this.schema.oneOf?.some((t=>null===t.const))||!this.schema.anyOf?.some((t=>null===t.const)))}get modal(){return this.shadowRoot?.querySelector("fz-item-dlg")}close(t){if(t.detail.dismissed)this.refenum?.refarray.pop();else if(this.input&&this.input instanceof HTMLSelectElement){const e=document.createElement("option");e.value=t.detail.value,e.text=t.detail.abstract,this.input.add(e),e.selected=!0}this.refenum?.pointer&&this.form?.updateField(this.refenum?.pointer),super.change(),this.requestUpdate()}change(t){"~~ADD~~"==this.input?.value&&this.modal&&(this.modal.open(),this.modal.reference=this.refenum,this.modal.requestUpdate()),super.change()}isSelected(t){return this.value===t}convertToInput(t){if(null==t)return null;switch(this.schema.basetype){case"integer":return isNaN(t)?null:parseInt(t,10);case"number":return isNaN(t)?null:parseFloat(t);case"boolean":return!!t}return String(t)}convertToValue(t){return"~~ADD~~"===t||"~~EMPTY~~"===t||St(t)?this.empty:t}evalEnums(){switch(this.enums=[],this.refenum=this.schema.refTo&&this.evalExpr("refTo"),!0){case!!(this.refenum&&this.refenum.refname&&Array.isArray(this.refenum.refarray)):const t=this.refenum?.refname??"id",e=this.refenum?.refarray;this.enums=e?.reduce(((r,o,i)=>{const n=qt(o);if(this.evalExpr("filter",n,o,e,i)){const a=o[t],s=n?.abstract(n,o,e,i,this.derefFunc)??a;r.push({label:s,value:a})}return r}),[]);break;case!!this.schema.enum:this.enums=this.schema.enum.reduce(((t,e)=>(this.evalExpr("filter",this.schema,e,this.data,this.key)&&t.push({label:String(e),value:e}),t)),[]);break;case!!this.schema.oneOf:this.enums=this.schema.oneOf.reduce(((t,e)=>(this.evalExpr("filter",e,e.const,this.data,this.key)&&t.push({label:e.title??e.description??e.const,value:e.const}),t)),[]);break;case!!this.schema.anyOf:this.enums=this.schema.anyOf.reduce(((t,e)=>(this.evalExpr("filter",e,e.const,this.data,this.key)&&t.push({label:e.title??e.description??e.const,value:e.const}),t)),[])}}}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const Kt=1,Tt=2,Jt=t=>(...e)=>({_$litDirective$:t,values:e});class Ut{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,r){this._$Ct=t,this._$AM=e,this._$Ci=r}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const Yt=Jt(class extends Ut{constructor(t){if(super(t),t.type!==Kt||"class"!==t.name||t.strings?.length>2)throw Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.")}render(t){return" "+Object.keys(t).filter((e=>t[e])).join(" ")+" "}update(t,[e]){if(void 0===this.st){this.st=new Set,void 0!==t.strings&&(this.nt=new Set(t.strings.join(" ").split(/\s/).filter((t=>""!==t))));for(const t in e)e[t]&&!this.nt?.has(t)&&this.st.add(t);return this.render(e)}const r=t.element.classList;for(const t of this.st)t in e||(r.remove(t),this.st.delete(t));for(const t in e){const o=!!e[t];o===this.st.has(t)||this.nt?.has(t)||(o?(r.add(t),this.st.add(t)):(r.remove(t),this.st.delete(t)))}return Y}});let Qt=class extends Ht{static get styles(){return[...super.styles,l`
            .readonly {
                background-color: #ececec
            }`]}renderEnum(){return U`
            <select 
                class="${Yt({"form-select":!0,readonly:this.readonly})}"
                id="input" 
                .value="${this.value}" 
                @input="${this.change}" 
                ?required="${this.required}"
            >
                ${this.withAdd?U`<option style="color:red;text-align:center" ?disabled="${this.readonly}" ?selected="${!1}" .value="${"~~ADD~~"}">Add ...</option>`:""}
                ${this.showNullChoice?U`<option style="color:red;text-align:center" ?disabled="${this.readonly}" ?selected="${this.isSelected(null)}" .value="${"~~EMPTY~~"}"> ${this.required?"Choose a value...":"<vide>"}</option>`:""}
                ${this.enums?.map((t=>U`<option  ?disabled="${this.readonly}"  ?selected="${this.isSelected(t.value)}" .value="${null==t.value?"":t.value}"><b>${t.label}</b></option>`))}
            </select>`}};Qt=t([r("fz-enum")],Qt);let $t=class extends Ht{renderEnum(){return U`
            ${this.enums?.map(((t,e)=>U`
                <div class="form-check form-check-inline">
                    <input 
                        class="form-check-input" 
                        type="radio" 
                        name="input" 
                        id="${e}-input" 
                        .value="${t.value}" 
                        ?disabled="${this.readonly}"
                        @click="${this.select}" 
                        ?required="${this.required}"
                        ?checked="${this.isSelected(t.value)}"
                    />
                    <label class="form-check-label" for="input${e}">${t.label}</label>
                </div>`))}`}select(t){if(t.stopPropagation(),t.stopImmediatePropagation(),this.readonly)return;const e=t.target,r=parseInt(e.id,10);this.value=this.convertToValue(this.enums?.[r].value),this.requestUpdate()}};$t=t([r("fz-enum-check")],$t);
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const _t=t=>t??Q;function te(t=new Date){return t.toISOString().substring(0,10)}let ee=class extends Zt{renderInput(){return U`<input 
            class="form-control" 
            type="date" id="input"
            ?readonly="${this.readonly}" 
            @input="${this.change}"
            min="${_t(this.min)}"
            max="${_t(this.max)}"
            ?required="${this.required}"
        />`}get min(){return this.schema.min}get max(){return this.schema.max}convertToInput(t){switch(!0){case"string"==typeof t&&/\d\d\d\d-\d\d-\d\d/.test(t):case"number"==typeof t:return te(new Date(t));case t instanceof Date:return te(t);default:return""}}convertToValue(t){return St(t)?this.empty:te(new Date(t))}};ee=t([r("fz-date")],ee);let re=class extends Zt{renderInput(){return U`<input 
            class="form-control" 
            type="datetime-local" 
            id="input" 
            .value="${this.value}"
            min="${_t(this.min)}"
            max="${_t(this.max)}"
            ?readonly="${this.readonly}" 
            @input="${this.change}"
            ?required="${this.required}"
        />`}get min(){return this.schema.min}get max(){return this.schema.max}convertToInput(t){let e="";switch(!0){case"string"==typeof t&&/\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ?/.test(t):e=t.substring(0,16);break;case"number"==typeof t:e=new Date(t).toISOString().substring(0,16);break;case t instanceof Date:e=t.toISOString().substring(0,16)}return e}convertToValue(t){return St(t)?this.empty:function(t=new Date){return t.toISOString().slice(0,-5)+"Z"}(new Date(t))}};function oe(t=new Date){return t.toISOString().substring(11,19)}re=t([r("fz-datetime")],re);let ie=class extends Zt{renderInput(){return U`
            <input 
                class="form-control timepicker" 
                type="time" 
                id="input" 
                step="1"
                .value="${this.value}"
                ?readonly="${this.readonly}"
                @input="${this.change}"
                ?required="${this.required}"
            />`}convertToInput(t){switch(!0){case"string"==typeof t:return t??null;case"number"==typeof t:return oe(new Date(t));case t instanceof Date:return oe(t)}return null}convertToValue(t){return St(t)?this.empty:oe(new Date(t))}};ie=t([r("fz-time")],ie);let ne=class extends Zt{renderInput(){return U`
            <textarea  
                class="form-control" 
                id="input"
                placeholder="${this.label}"
                .value="${this.value}" 
                ?readonly="${this.readonly}"
                @input="${this.change}"
                @keypress="${this.change}"
                minlength="${_t(this.minlength)}"
                maxlength="${_t(this.maxlength)}"
                ?required="${this.required}"
                rows="5"
            ></textarea>`}get minlength(){return this.schema.minLength}get maxlength(){return this.schema.maxLength}get pattern(){return this.schema.pattern}get password(){return!!this.schema.options?.password}convertToInput(t){return null==t?null:t.toString()}convertToValue(t){return St(t)?this.empty:t.toString()}};ne=t([r("fz-textarea")],ne);let ae=class extends Zt{static get styles(){return[...super.styles,l`
            input[type="color"] {
                height: 38px
            }`]}renderInput(){return U`
            <div class="input-group" >
                <input  
                    class="form-control" 
                    type="${this.type}" 
                    id="input"
                    placeholder="${this.label}"
                    ?readonly="${this.readonly}"
                    @input="${this.change}"
                    @keypress="${this.change}"
                    minlength="${_t(this.minlength)}"
                    maxlength="${_t(this.maxlength)}"
                    pattern="${_t(this.pattern)}"
                    ?required="${this.required}"
                />
                <div ?hidden="${"color"!==this.type||null==this.value}" class="input-group-append" style="max-width:5em" >
                    <span class="input-group-text" >${this.value}</span>
                </div>
            </div>`}change(){super.change(),this.requestUpdate()}get minlength(){return this.schema.minLength}get maxlength(){return this.schema.maxLength}get pattern(){return this.schema.pattern}get type(){switch(this.schema.format){case"color":return"color";case"email":return"email";case"password":return"password";case"uri":return"url";default:return"text"}}convertToInput(t){return null==t||""==t?"":t.toString()}convertToValue(t){return St(t)?this.empty:t.toString()}};ae=t([r("fz-string")],ae);let se=class extends Zt{#s=!1;get disabled(){return this.#s}set disabled(t){this.#s=t}#l="read";get state(){return this.#l}set state(t){this.#l=t}get isblank(){if(!this.context||!this.canvas)return!1;const t=new Uint32Array(this.context.getImageData(0,0,this.canvas.width,this.canvas.height).data.buffer);let e=0,r=0;t.forEach((t=>0!==t?r++:e++));return 100*r/(r+e)<.5}content;image;canvas;context;observer;offsetX=0;offsetY=0;currentX=0;currentY=0;drawing=!1;static get styles(){return[...super.styles,l`
            img {border: 0}
            .readonly {background-color: rgb(235,235,228)}
            `]}renderInput(){return U`
            <div id="content" class="form-control">
                <button ?hidden="${!this.value||this.required||this.readonly}" @click="${this.del}" type="button" style="float:right" class="btn-close" aria-label="Close"></button>
                <canvas id="canvas" ?hidden="${"read"===this.state}" height="300" width="300"></canvas>
                <img   id="image" draggable=false ?hidden="${"edit"===this.state||!this.value}" >
                <div ?hidden="${!!this.value||"edit"===this.state}" >Aucune</div>
            </div>
            <div>
                <button ?hidden="${this.readonly}" ?disabled="${"read"!==this.state}" type="button" class="col-sm-3 btn btn-primary btn-sm" @click="${this.edit}">Signer</button>
                <button ?hidden="${"read"===this.state}" ?disabled="${this.isblank}" type="button" class="col-sm-3 btn btn-primary btn-sm" @click="${this.validate}">Valider</button>
                <button ?hidden="${"read"===this.state}" ?disabled="${this.isblank}" type="button" class="col-sm-3 btn btn-primary btn-sm" @click="${this.clear}">Effacer</button>
            </div>`}convertToInput(t){return null==t||""==t?null:t.toString()}convertToValue(t){return St(t)?this.empty:t}firstUpdated(t){super.firstUpdated(t),this.canvas=this.shadowRoot?.getElementById("canvas")??void 0,this.canvas&&(this.context=this.canvas.getContext("2d")??void 0,this.listen(this.canvas,"mousedown",(t=>this.onDown(t))),this.listen(this.canvas,"mousemove",(t=>this.onMove(t))),this.listen(this.canvas,"mouseup",(t=>this.onUp(t))),this.listen(this.canvas,"touchstart",(t=>this.onDown(t)),{passive:!1}),this.listen(this.canvas,"touchmove",(t=>this.onMove(t)),{passive:!1}),this.listen(this.canvas,"touchend",(t=>this.onUp(t)))),this.content=this.shadowRoot?.getElementById("content")??void 0,this.content&&(this.observer=new ResizeObserver((t=>this.resize())),this.observer.observe(this.content)),this.image=this.shadowRoot?.getElementById("image")??void 0,this.load(),this.check()}resize(){if(this.content){const t=this.content.offsetWidth,e=Math.floor(this.content.offsetWidth/2);!this.canvas||"read"!==this.state||this.canvas.width===t&&this.canvas.height===e||(this.canvas.width=t,this.canvas.height=e),!this.image||"read"!==this.state||this.image.width===t&&this.image.height===e||(this.image.width=t,this.image.height=e)}}getPos(t){t.touches&&t.touches[0]?(this.currentX=t.touches[0].clientX-this.offsetX,this.currentY=t.touches[0].clientY-this.offsetY):t.originalEvent&&t.originalEvent.touches&&t.originalEvent.touches[0]?(this.currentX=t.originalEvent.touches[0].clientX-this.offsetX,this.currentY=t.originalEvent.touches[0].clientY-this.offsetY):void 0!==t.offsetX?(this.currentX=t.offsetX,this.currentY=t.offsetY):(this.currentX=t.layerX-t.currentTarget.offsetLeft,this.currentY=t.layerY-t.currentTarget.offsetTop)}getOffset(t){if(t.touches||t.originalEvent&&t.originalEvent.touches){this.offsetX=0,this.offsetY=0;let e=null;if(t.originalEvent?e=t.originalEvent.srcElement:t.touches.length>0&&(e=t.touches[0].target),e)for(;e;)this.offsetX+=e.offsetLeft-e.scrollLeft,this.offsetY+=e.offsetTop-e.scrollTop,e=e.offsetParent}}onDown(t){return this.drawing=!this.readonly,this.getOffset(t),this.getPos(t),this.context&&this.currentX&&(this.context.beginPath(),this.context.moveTo(this.currentX,this.currentY),this.context.strokeStyle="#4bf",this.context.lineWidth=5,this.context.lineJoin="round"),this.eventStop(t),!1}onMove(t){if(this.drawing)return this.getPos(t),this.context&&(this.context.lineTo(this.currentX,this.currentY),this.context.stroke()),this.eventStop(t),!1}onUp(t){return this.drawing=!1,this.eventStop(t),this.isblank||this.save(),!1}check(){this.valid=!0,this.message="",this.required&&null==this.value&&(this.valid=!1,this.message=Gt("valueMissing")),this.content?.classList.add(this.valid?"valid":"invalid"),this.content?.classList.remove(this.valid?"invalid":"valid"),this.readonly?this.content?.classList.add("readonly"):this.content?.classList.remove("readonly")}load(){this.context&&this.image&&this.value&&(this.image.src=this.value)}edit(){this.canvas&&this.context?.clearRect(0,0,this.canvas.width,this.canvas.height),this.value=null,this.state="edit"}validate(){this.save(),this.state="read"}save(){if(this.canvas){const t=this.canvas.toDataURL("image/gif");this.value=t,this.image&&(this.image.src=t),this.change(),this.requestUpdate()}}clear(){this.canvas&&(this.canvas.width=this.canvas.width),this.value="",this.requestUpdate()}del(){this.clear(),this.state="read"}};t([A({attribute:!1}),e("design:type",Object)],se.prototype,"disabled",null),t([A({attribute:!1}),e("design:type",String)],se.prototype,"state",null),se=t([r("fz-signature")],se);let le=class extends Zt{renderInput(){return U`
            <div class="form-group row">
                <div class="col-sm-3"></div> 
                <div class="col-sm-9">
                    <input 
                        class="form-check-input" 
                        type="checkbox"
                        id="input"
                        @keypress="${this.toggle}"
                        ?disabled="${this.readonly}"
                        @click="${this.toggle}"
                        ?required="${this.required}"
                    />
                    <label class="form-check-label" for="input" style="text-decoration-line:${this.value?"none":"line-through"}">&nbsp;${this.label}</label>
                </div>
            </div>
        `}toggle(){super.change(),this.requestUpdate()}convertToInput(t){return!(!this.input||!this.input.checked)}convertToValue(t){return St(t)?this.empty:!!t}};le=t([r("fz-boolean")],le);const ce=1.1.toLocaleString().substring(1,2);let be=class extends Zt{static get styles(){return[...super.styles,l`
            /* Chrome, Safari, Edge, Opera */
            input::-webkit-outer-spin-button,
            input::-webkit-inner-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }
            /* Firefox */
            input[type=number] {
                -moz-appearance: textfield;
            }`]}renderInput(){return U`
            <div class="input-group">
                <input 
                    class="form-control" 
                    type="number" 
                    id="input"
                    ?readonly="${this.readonly}"
                    @input="${this.change}"
                    .min="${this.min}"
                    .max="${this.max}"
                    step="1e-12"
                    ?required="${this.required}"
                    @keypress="${this.keypress}"
                />
            </div>`}get max(){return this.schema.maximumExclusive&&"maximum"in this.schema?this.schema.maximum-1e-12:"maximum"in this.schema?this.schema.maximum:""}get min(){return this.schema.minimumExclusive&&"minimum"in this.schema?this.schema.minimum+1e-12:"minimum"in this.schema?this.schema.minimum:""}keypress(t){/[.,]/.test(t.key)&&ce!==t.key&&t.preventDefault()}convertToInput(t){return isNaN(t)?null:t}convertToValue(t){return St(t)||isNaN(t)?this.empty:t}};be=t([r("fz-float")],be);let de=class extends Zt{static get styles(){return[...super.styles,l`
          input[type=range]::-webkit-slider-runnable-track {
            background: lightgray;
            border: 0.2px solid rgba(1, 1, 1, 0.3);
            border-radius: 25px;
            width: 100%;
            height: 8px;
            cursor: pointer;
          }
          input[type=range]::-webkit-slider-thumb {
            margin-top: -6px;
            width: 20px;
            height: 20px;
            background: rgb(13, 110, 253);
            border: 0.2px solid rgba(1, 1, 1, 0.3);
            border-radius: 10px;
            cursor: pointer;
            -webkit-appearance: none;
          }
          input[type=range]::-moz-range-track {
            background: rgb(13, 110, 253);
            border: 0.2px solid rgba(1, 1, 1, 0.3);
            border-radius: 25px;
            width: 100%;
            height: 15.6px;
            cursor: pointer;
          }
          input[type=range]::-moz-range-thumb {
            width: 16px;
            height: 36px;
            background: #00ffff;
            border: 1px solid #000000;
            border-radius: 3px;
            cursor: pointer;
          }
          input[type=range]::-ms-track {
            background: transparent;
            border-color: transparent;
            border-width: 11.2px 0;
            color: transparent;
            width: 100%;
            height: 15.6px;
            cursor: pointer;
          }
          `]}renderInput(){return U`
            <div class="input-group">
                <input 
                    class="form-control" 
                    type="range"  
                    id="input" 
                    .value="${this.value}" 
                    ?disabled="${this.readonly}"
                    ?readonly="${this.readonly}"
                    @input="${this.change}"
                    .min="${this.min}"
                    .max="${this.max}"
                    step="1"
                    ?required="${this.required}"
                />
                <div class="input-group-append" style="max-width:5em" >
                    <span class="input-group-text" >${this.value}</span>
                </div>
            </div>`}change(){super.change(),this.requestUpdate()}get max(){return this.schema.maximumExclusive&&"maximum"in this.schema?this.schema.maximum-1:"maximum"in this.schema?this.schema.maximum:""}get min(){return this.schema.minimumExclusive&&"minimum"in this.schema?this.schema.minimum+1:"minimum"in this.schema?this.schema.minimum:""}keypress(t){return/[-0123456789]/.test(t.key)?this.min>=0&&"-"===t.key?t.preventDefault():void 0:t.preventDefault()}convertToInput(t){switch(!0){case"string"==typeof t:return isNaN(parseInt(t,10))?null:parseInt(t,10);case"number"==typeof t:return Math.floor(t);default:return null}}convertToValue(t){return St(t)?this.empty:t}};de=t([r("fz-range")],de);let fe=class extends Zt{static get styles(){return[...super.styles,l`
            input[type="color"] {
                height: 38px
            }`]}renderInput(){return U`
            <div class="input-group">
                <input
                    class="form-control"
                    type="text"
                    id="input"
                    @input="${this.change}"
                    placeholder="${this.label}"
                    ?readonly="${this.readonly}" 
                />
                <div class="btn-group">
                    <button 
                        type="button"
                        class="btn btn-danger btn-sm"
                        @click="${this.remove}"
                        aria-label="delete">
                            <i class="bi bi-x"></i>
                    </button>
                    <button 
                        type="button"
                        class="btn btn-primary btn-sm"
                        @click="${this.geolocate}"
                        aria-label="Geolocate">
                            <i class="bi bi-geo-alt"></i>
                    </button>
                </div>
            </div>`}change(){super.change(),this.requestUpdate()}convertToInput(t){return""==t||null==t?null:t.toString()}convertToValue(t){return St(t)?this.empty:t}geolocate(){navigator.geolocation.getCurrentPosition((t=>{this.value=`POINT (${t.coords.longitude} ${t.coords.latitude})`,this.requestUpdate()}))}remove(){this.value=null,this.requestUpdate()}};fe=t([r("fz-geolocation")],fe);let pe=class extends Zt{renderInput(){return U`
            <div class="input-group">
                <input 
                    class="form-control" 
                    type="number"  
                    id="input"
                    ?readonly="${this.readonly}"
                    @input="${this.change}"
                    @keypress="${this.keypress}"
                    .min="${this.min}"
                    .max="${this.max}"
                    step="1"
                    ?required="${this.required}"
                />
            </div>`}get max(){return this.schema.maximumExclusive&&"maximum"in this.schema?this.schema.maximum-1:"maximum"in this.schema?this.schema.maximum:""}get min(){return this.schema.minimumExclusive&&"minimum"in this.schema?this.schema.minimum+1:"minimum"in this.schema?this.schema.minimum:""}keypress(t){return/[-0123456789]/.test(t.key)?this.min>=0&&"-"===t.key?t.preventDefault():void 0:t.preventDefault()}convertToInput(t){return isNaN(t)?null:Math.floor(t)}convertToValue(t){return St(t)||isNaN(t)?this.empty:t}};pe=t([r("fz-integer")],pe);let me=class extends Zt{renderInput(){return U`<div class="input-group">${this.value}</div>`}convertToInput(t){return null==t||""==t?null:t}convertToValue(t){return St(t)?this.empty:t}connectedCallback(){super.connectedCallback(),this.value!==this.schema.const&&(this.value=this.schema.const)}};me=t([r("fz-constant")],me);const ue=[];for(let t=0;t<256;++t)ue.push((t+256).toString(16).slice(1));let he;const ge=new Uint8Array(16);const ve={};function we(t,e,r){let o;{const t=Date.now(),i=function(){if(!he){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");he=crypto.getRandomValues.bind(crypto)}return he(ge)}();!function(t,e,r){t.msecs??=-1/0,t.nsecs??=0,e===t.msecs?(t.nsecs++,t.nsecs>=1e4&&(t.node=void 0,t.nsecs=0)):e>t.msecs?t.nsecs=0:e<t.msecs&&(t.node=void 0);t.node||(t.node=r.slice(10,16),t.node[0]|=1,t.clockseq=16383&(r[8]<<8|r[9]));t.msecs=e}(ve,t,i),o=function(t,e,r,o,i,n,a=0){if(t.length<16)throw new Error("Random bytes length must be >= 16");if(n){if(a<0||a+16>n.length)throw new RangeError(`UUID byte range ${a}:${a+15} is out of buffer bounds`)}else n=new Uint8Array(16),a=0;e??=Date.now(),r??=0,o??=16383&(t[8]<<8|t[9]),i??=t.slice(10,16);const s=(1e4*(268435455&(e+=122192928e5))+r)%4294967296;n[a++]=s>>>24&255,n[a++]=s>>>16&255,n[a++]=s>>>8&255,n[a++]=255&s;const l=e/4294967296*1e4&268435455;n[a++]=l>>>8&255,n[a++]=255&l,n[a++]=l>>>24&15|16,n[a++]=l>>>16&255,n[a++]=o>>>8|128,n[a++]=255&o;for(let t=0;t<6;++t)n[a++]=i[t];return n}(i,ve.msecs,ve.nsecs,ve.clockseq,ve.node,e,r)}return e??function(t,e=0){return(ue[t[e+0]]+ue[t[e+1]]+ue[t[e+2]]+ue[t[e+3]]+"-"+ue[t[e+4]]+ue[t[e+5]]+"-"+ue[t[e+6]]+ue[t[e+7]]+"-"+ue[t[e+8]]+ue[t[e+9]]+"-"+ue[t[e+10]]+ue[t[e+11]]+ue[t[e+12]]+ue[t[e+13]]+ue[t[e+14]]+ue[t[e+15]]).toLowerCase()}(o)}var xe;let ye=class extends Zt{static{xe=this}static docTypes=["image/png","image/jpeg","image/gif","text/plain","application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.graphics"];photoModal;url="";filename;get hasPreview(){return this.schema.preview}get mimetype(){return this.schema.mimetype?this.schema.mimetype:xe.docTypes.join(", ")}get store(){return this.form.store}static get styles(){return[...super.styles,l`
                .fileUpload {
                    position: relative;
                    overflow: hidden;
                    margin: 0px;
                }
                .fileUpload input {
                    position: absolute !important;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    margin: 0;
                    padding: 0;
                    cursor: pointer;
                    opacity: 0 !important;
                    filter: alpha(opacity=0) !important;
                }
                .img-preview {
                    width:100px;
                    height:auto;
                }
                .close-right {
                    position: absolute;
                    top: 0.5rem;
                    right: 0.5rem;
                    z-index: 10;
                    display: block;
                    padding: 0.25rem 0.5rem;
                    color: #818a91;
                    cursor: pointer;
                    background-color: transparent;
                    border: 0;
                    border-radius: 0.25rem;
                }
                `]}renderInput(){return U`
            <fz-photo-dlg id=modal ></fz-photo-dlg>
            <div class="input-group">
                ${this.url&&this.hasPreview?U`
                    <div class="input-group-prepend" >
                        <img class="input-group-text img-preview" src="${this.url}" @click="${this.open}"/>
                    </div>`:null}
                ${this.isEmpty||this.url&&this.hasPreview?null:U`
                    <div class="input-group-prepend">
                        <span class="input-group-text"  @click="${this.open}"><i class="bi bi-eye"></i></span>
                    </div>`}
                <input class="form-control"  type="text" spellcheck="false"
                    placeholder="photo, document, ..."
                    .value="${this.filename??""}"
                    ?readonly="${this.readonly}" 
                    @mousedown="${t=>t.preventDefault()}"
                    @paste="${t=>t.preventDefault()}"
                    @input="${t=>t.preventDefault()}"
                    @keypress="${t=>t.preventDefault()}"
                    ?required="${this.required}"
                />
                ${this.isEmpty||this.readonly?U``:U`
                    <button  @click="${this.delete}"  type="button" class="close-right btn-close" aria-label="Close"> </button>`}
                ${!this.isEmpty||this.readonly?U``:U`
                    <span class="input-group-text btn btn-primary" @click="${()=>this.photoModal?.open()}" ><i class=" bi bi-camera"></i></span>
                    <span class="input-group-text fileUpload btn btn-primary">
                        <input type="file"
                            @change="${this.save}"
                            ?disabled="${this.readonly}" 
                            accept="${this.mimetype}"
                            class="btn-block"/>
                        <i class="bi bi-file-earmark-richtext"></i>
                    </span>`}
            </div>`}change(){super.change(),this.requestUpdate()}convertToInput(t){return t??""}convertToValue(t){return St(t)?this.empty:t}connectedCallback(){super.connectedCallback(),this.listen(this,"update",(()=>this.check()))}async firstUpdated(t){if(super.firstUpdated(t),this.photoModal=this.shadowRoot?.querySelector("fz-photo-dlg")??void 0,this.listen(this.photoModal,"close",(t=>this.set(we(),t.detail.blob,"photo.png"))),null!=this.value){const t=await this.store.get(this.value);t?this.set(this.value,t.blob,t.filename):(this.valid=!1,this.message="document not found")}}async open(){if(null==this.value)return;const t=await this.store.get(this.value);let e;if(t)e=URL.createObjectURL(t.blob);else{const t=new Blob([`FzForm ERROR: Couldn't open document uuid=${this.value}`],{type:"text/plain"});e=URL.createObjectURL(t)}window.open(e)}setUrl(t){if(this.url="",t.type.startsWith("image")){const e=new FileReader;e.readAsDataURL(t),e.onload=t=>{this.url=t.target?.result,this.requestUpdate()}}}async set(t,e,r){e&&r&&(this.value&&await this.store.remove(this.value),this.filename=r,this.value=t,this.setUrl(e),this.value&&await this.store.put(this.value,e,this.filename,this.pointer),this.change(),this.requestUpdate())}async save(t){await this.set(we(),t.target.files[0],t.target.files[0].name)}async delete(){this.value&&await this.store.remove(this.value),this.value=this.empty,this.url="",this.filename="",this.change(),this.requestUpdate()}};ye=xe=t([r("fz-document")],ye);
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
class ke extends Ut{constructor(t){if(super(t),this.it=Q,t.type!==Tt)throw Error(this.constructor.directiveName+"() can only be used in child bindings")}render(t){if(t===Q||null==t)return this._t=void 0,this.it=t;if(t===Y)return t;if("string"!=typeof t)throw Error(this.constructor.directiveName+"() called with a non-string value");if(t===this.it)return this._t;this.it=t;const e=[t];return e.raw=e,this._t={_$litType$:this.constructor.resultType,strings:e,values:[]}}}ke.directiveName="unsafeHTML",ke.resultType=1;const je=Jt(ke),De={};function ze(t,e){"string"!=typeof e&&(e=ze.defaultChars);const r=function(t){let e=De[t];if(e)return e;e=De[t]=[];for(let t=0;t<128;t++){const r=String.fromCharCode(t);e.push(r)}for(let r=0;r<t.length;r++){const o=t.charCodeAt(r);e[o]="%"+("0"+o.toString(16).toUpperCase()).slice(-2)}return e}(e);return t.replace(/(%[a-f0-9]{2})+/gi,(function(t){let e="";for(let o=0,i=t.length;o<i;o+=3){const n=parseInt(t.slice(o+1,o+3),16);if(n<128)e+=r[n];else{if(192==(224&n)&&o+3<i){const r=parseInt(t.slice(o+4,o+6),16);if(128==(192&r)){const t=n<<6&1984|63&r;e+=t<128?"��":String.fromCharCode(t),o+=3;continue}}if(224==(240&n)&&o+6<i){const r=parseInt(t.slice(o+4,o+6),16),i=parseInt(t.slice(o+7,o+9),16);if(128==(192&r)&&128==(192&i)){const t=n<<12&61440|r<<6&4032|63&i;e+=t<2048||t>=55296&&t<=57343?"���":String.fromCharCode(t),o+=6;continue}}if(240==(248&n)&&o+9<i){const r=parseInt(t.slice(o+4,o+6),16),i=parseInt(t.slice(o+7,o+9),16),a=parseInt(t.slice(o+10,o+12),16);if(128==(192&r)&&128==(192&i)&&128==(192&a)){let t=n<<18&1835008|r<<12&258048|i<<6&4032|63&a;t<65536||t>1114111?e+="����":(t-=65536,e+=String.fromCharCode(55296+(t>>10),56320+(1023&t))),o+=9;continue}}e+="�"}}return e}))}ze.defaultChars=";/?:@&=+$,#",ze.componentChars="";const Ee={};function Ae(t,e,r){"string"!=typeof e&&(r=e,e=Ae.defaultChars),void 0===r&&(r=!0);const o=function(t){let e=Ee[t];if(e)return e;e=Ee[t]=[];for(let t=0;t<128;t++){const r=String.fromCharCode(t);/^[0-9a-z]$/i.test(r)?e.push(r):e.push("%"+("0"+t.toString(16).toUpperCase()).slice(-2))}for(let r=0;r<t.length;r++)e[t.charCodeAt(r)]=t[r];return e}(e);let i="";for(let e=0,n=t.length;e<n;e++){const a=t.charCodeAt(e);if(r&&37===a&&e+2<n&&/^[0-9a-f]{2}$/i.test(t.slice(e+1,e+3)))i+=t.slice(e,e+3),e+=2;else if(a<128)i+=o[a];else if(a>=55296&&a<=57343){if(a>=55296&&a<=56319&&e+1<n){const r=t.charCodeAt(e+1);if(r>=56320&&r<=57343){i+=encodeURIComponent(t[e]+t[e+1]),e++;continue}}i+="%EF%BF%BD"}else i+=encodeURIComponent(t[e])}return i}function Fe(t){let e="";return e+=t.protocol||"",e+=t.slashes?"//":"",e+=t.auth?t.auth+"@":"",t.hostname&&-1!==t.hostname.indexOf(":")?e+="["+t.hostname+"]":e+=t.hostname||"",e+=t.port?":"+t.port:"",e+=t.pathname||"",e+=t.search||"",e+=t.hash||"",e}function qe(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}Ae.defaultChars=";/?:@&=+$,-_.!~*'()#",Ae.componentChars="-_.!~*'()";const Pe=/^([a-z0-9.+-]+:)/i,Oe=/:[0-9]*$/,Re=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,Se=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),Xe=["'"].concat(Se),Ve=["%","/","?",";","#"].concat(Xe),Ge=["/","?","#"],Me=/^[+a-z0-9A-Z_-]{0,63}$/,Ne=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,Ie={javascript:!0,"javascript:":!0},Be={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Ce(t,e){if(t&&t instanceof qe)return t;const r=new qe;return r.parse(t,e),r}qe.prototype.parse=function(t,e){let r,o,i,n=t;if(n=n.trim(),!e&&1===t.split("#").length){const t=Re.exec(n);if(t)return this.pathname=t[1],t[2]&&(this.search=t[2]),this}let a=Pe.exec(n);if(a&&(a=a[0],r=a.toLowerCase(),this.protocol=a,n=n.substr(a.length)),(e||a||n.match(/^\/\/[^@\/]+@[^@\/]+/))&&(i="//"===n.substr(0,2),!i||a&&Ie[a]||(n=n.substr(2),this.slashes=!0)),!Ie[a]&&(i||a&&!Be[a])){let t,e,r=-1;for(let t=0;t<Ge.length;t++)o=n.indexOf(Ge[t]),-1!==o&&(-1===r||o<r)&&(r=o);e=-1===r?n.lastIndexOf("@"):n.lastIndexOf("@",r),-1!==e&&(t=n.slice(0,e),n=n.slice(e+1),this.auth=t),r=-1;for(let t=0;t<Ve.length;t++)o=n.indexOf(Ve[t]),-1!==o&&(-1===r||o<r)&&(r=o);-1===r&&(r=n.length),":"===n[r-1]&&r--;const i=n.slice(0,r);n=n.slice(r),this.parseHost(i),this.hostname=this.hostname||"";const a="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!a){const t=this.hostname.split(/\./);for(let e=0,r=t.length;e<r;e++){const r=t[e];if(r&&!r.match(Me)){let o="";for(let t=0,e=r.length;t<e;t++)r.charCodeAt(t)>127?o+="x":o+=r[t];if(!o.match(Me)){const o=t.slice(0,e),i=t.slice(e+1),a=r.match(Ne);a&&(o.push(a[1]),i.unshift(a[2])),i.length&&(n=i.join(".")+n),this.hostname=o.join(".");break}}}}this.hostname.length>255&&(this.hostname=""),a&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}const s=n.indexOf("#");-1!==s&&(this.hash=n.substr(s),n=n.slice(0,s));const l=n.indexOf("?");return-1!==l&&(this.search=n.substr(l),n=n.slice(0,l)),n&&(this.pathname=n),Be[r]&&this.hostname&&!this.pathname&&(this.pathname=""),this},qe.prototype.parseHost=function(t){let e=Oe.exec(t);e&&(e=e[0],":"!==e&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)};var Le,We=Object.freeze({__proto__:null,decode:ze,encode:Ae,format:Fe,parse:Ce}),Ze=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,He=/[\0-\x1F\x7F-\x9F]/,Ke=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,Te=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/,Je=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,Ue=Object.freeze({__proto__:null,Any:Ze,Cc:He,Cf:/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,P:Ke,S:Te,Z:Je}),Ye=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((t=>t.charCodeAt(0)))),Qe=new Uint16Array("Ȁaglq\tɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((t=>t.charCodeAt(0))));const $e=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]),_e=null!==(Le=String.fromCodePoint)&&void 0!==Le?Le:function(t){let e="";return t>65535&&(t-=65536,e+=String.fromCharCode(t>>>10&1023|55296),t=56320|1023&t),e+=String.fromCharCode(t),e};var tr;!function(t){t[t.NUM=35]="NUM",t[t.SEMI=59]="SEMI",t[t.EQUALS=61]="EQUALS",t[t.ZERO=48]="ZERO",t[t.NINE=57]="NINE",t[t.LOWER_A=97]="LOWER_A",t[t.LOWER_F=102]="LOWER_F",t[t.LOWER_X=120]="LOWER_X",t[t.LOWER_Z=122]="LOWER_Z",t[t.UPPER_A=65]="UPPER_A",t[t.UPPER_F=70]="UPPER_F",t[t.UPPER_Z=90]="UPPER_Z"}(tr||(tr={}));var er,rr,or;function ir(t){return t>=tr.ZERO&&t<=tr.NINE}function nr(t){return t>=tr.UPPER_A&&t<=tr.UPPER_F||t>=tr.LOWER_A&&t<=tr.LOWER_F}function ar(t){return t===tr.EQUALS||function(t){return t>=tr.UPPER_A&&t<=tr.UPPER_Z||t>=tr.LOWER_A&&t<=tr.LOWER_Z||ir(t)}(t)}!function(t){t[t.VALUE_LENGTH=49152]="VALUE_LENGTH",t[t.BRANCH_LENGTH=16256]="BRANCH_LENGTH",t[t.JUMP_TABLE=127]="JUMP_TABLE"}(er||(er={})),function(t){t[t.EntityStart=0]="EntityStart",t[t.NumericStart=1]="NumericStart",t[t.NumericDecimal=2]="NumericDecimal",t[t.NumericHex=3]="NumericHex",t[t.NamedEntity=4]="NamedEntity"}(rr||(rr={})),function(t){t[t.Legacy=0]="Legacy",t[t.Strict=1]="Strict",t[t.Attribute=2]="Attribute"}(or||(or={}));class sr{constructor(t,e,r){this.decodeTree=t,this.emitCodePoint=e,this.errors=r,this.state=rr.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=or.Strict}startEntity(t){this.decodeMode=t,this.state=rr.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1}write(t,e){switch(this.state){case rr.EntityStart:return t.charCodeAt(e)===tr.NUM?(this.state=rr.NumericStart,this.consumed+=1,this.stateNumericStart(t,e+1)):(this.state=rr.NamedEntity,this.stateNamedEntity(t,e));case rr.NumericStart:return this.stateNumericStart(t,e);case rr.NumericDecimal:return this.stateNumericDecimal(t,e);case rr.NumericHex:return this.stateNumericHex(t,e);case rr.NamedEntity:return this.stateNamedEntity(t,e)}}stateNumericStart(t,e){return e>=t.length?-1:(32|t.charCodeAt(e))===tr.LOWER_X?(this.state=rr.NumericHex,this.consumed+=1,this.stateNumericHex(t,e+1)):(this.state=rr.NumericDecimal,this.stateNumericDecimal(t,e))}addToNumericResult(t,e,r,o){if(e!==r){const i=r-e;this.result=this.result*Math.pow(o,i)+parseInt(t.substr(e,i),o),this.consumed+=i}}stateNumericHex(t,e){const r=e;for(;e<t.length;){const o=t.charCodeAt(e);if(!ir(o)&&!nr(o))return this.addToNumericResult(t,r,e,16),this.emitNumericEntity(o,3);e+=1}return this.addToNumericResult(t,r,e,16),-1}stateNumericDecimal(t,e){const r=e;for(;e<t.length;){const o=t.charCodeAt(e);if(!ir(o))return this.addToNumericResult(t,r,e,10),this.emitNumericEntity(o,2);e+=1}return this.addToNumericResult(t,r,e,10),-1}emitNumericEntity(t,e){var r;if(this.consumed<=e)return null===(r=this.errors)||void 0===r||r.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(t===tr.SEMI)this.consumed+=1;else if(this.decodeMode===or.Strict)return 0;return this.emitCodePoint(function(t){var e;return t>=55296&&t<=57343||t>1114111?65533:null!==(e=$e.get(t))&&void 0!==e?e:t}(this.result),this.consumed),this.errors&&(t!==tr.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed}stateNamedEntity(t,e){const{decodeTree:r}=this;let o=r[this.treeIndex],i=(o&er.VALUE_LENGTH)>>14;for(;e<t.length;e++,this.excess++){const n=t.charCodeAt(e);if(this.treeIndex=cr(r,o,this.treeIndex+Math.max(1,i),n),this.treeIndex<0)return 0===this.result||this.decodeMode===or.Attribute&&(0===i||ar(n))?0:this.emitNotTerminatedNamedEntity();if(o=r[this.treeIndex],i=(o&er.VALUE_LENGTH)>>14,0!==i){if(n===tr.SEMI)return this.emitNamedEntityData(this.treeIndex,i,this.consumed+this.excess);this.decodeMode!==or.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1}emitNotTerminatedNamedEntity(){var t;const{result:e,decodeTree:r}=this,o=(r[e]&er.VALUE_LENGTH)>>14;return this.emitNamedEntityData(e,o,this.consumed),null===(t=this.errors)||void 0===t||t.missingSemicolonAfterCharacterReference(),this.consumed}emitNamedEntityData(t,e,r){const{decodeTree:o}=this;return this.emitCodePoint(1===e?o[t]&~er.VALUE_LENGTH:o[t+1],r),3===e&&this.emitCodePoint(o[t+2],r),r}end(){var t;switch(this.state){case rr.NamedEntity:return 0===this.result||this.decodeMode===or.Attribute&&this.result!==this.treeIndex?0:this.emitNotTerminatedNamedEntity();case rr.NumericDecimal:return this.emitNumericEntity(0,2);case rr.NumericHex:return this.emitNumericEntity(0,3);case rr.NumericStart:return null===(t=this.errors)||void 0===t||t.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case rr.EntityStart:return 0}}}function lr(t){let e="";const r=new sr(t,(t=>e+=_e(t)));return function(t,o){let i=0,n=0;for(;(n=t.indexOf("&",n))>=0;){e+=t.slice(i,n),r.startEntity(o);const a=r.write(t,n+1);if(a<0){i=n+r.end();break}i=n+a,n=0===a?i+1:i}const a=e+t.slice(i);return e="",a}}function cr(t,e,r,o){const i=(e&er.BRANCH_LENGTH)>>7,n=e&er.JUMP_TABLE;if(0===i)return 0!==n&&o===n?r:-1;if(n){const e=o-n;return e<0||e>=i?-1:t[r+e]-1}let a=r,s=a+i-1;for(;a<=s;){const e=a+s>>>1,r=t[e];if(r<o)a=e+1;else{if(!(r>o))return t[e+i];s=e-1}}return-1}const br=lr(Ye);function dr(t,e=or.Legacy){return br(t,e)}function fr(t){return"[object String]"===function(t){return Object.prototype.toString.call(t)}(t)}lr(Qe);const pr=Object.prototype.hasOwnProperty;function mr(t){return Array.prototype.slice.call(arguments,1).forEach((function(e){if(e){if("object"!=typeof e)throw new TypeError(e+"must be object");Object.keys(e).forEach((function(r){t[r]=e[r]}))}})),t}function ur(t,e,r){return[].concat(t.slice(0,e),r,t.slice(e+1))}function hr(t){return!(t>=55296&&t<=57343)&&(!(t>=64976&&t<=65007)&&(!!(65535&~t&&65534!=(65535&t))&&(!(t>=0&&t<=8)&&(11!==t&&(!(t>=14&&t<=31)&&(!(t>=127&&t<=159)&&!(t>1114111)))))))}function gr(t){if(t>65535){const e=55296+((t-=65536)>>10),r=56320+(1023&t);return String.fromCharCode(e,r)}return String.fromCharCode(t)}const vr=/\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g,wr=new RegExp(vr.source+"|"+/&([a-z#][a-z0-9]{1,31});/gi.source,"gi"),xr=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;function yr(t){return t.indexOf("\\")<0&&t.indexOf("&")<0?t:t.replace(wr,(function(t,e,r){return e||function(t,e){if(35===e.charCodeAt(0)&&xr.test(e)){const r="x"===e[1].toLowerCase()?parseInt(e.slice(2),16):parseInt(e.slice(1),10);return hr(r)?gr(r):t}const r=dr(t);return r!==t?r:t}(t,r)}))}const kr=/[&<>"]/,jr=/[&<>"]/g,Dr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function zr(t){return Dr[t]}function Er(t){return kr.test(t)?t.replace(jr,zr):t}const Ar=/[.?*+^$[\]\\(){}|-]/g;function Fr(t){switch(t){case 9:case 32:return!0}return!1}function qr(t){if(t>=8192&&t<=8202)return!0;switch(t){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}function Pr(t){return Ke.test(t)||Te.test(t)}function Or(t){switch(t){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function Rr(t){return t=t.trim().replace(/\s+/g," "),"Ṿ"==="ẞ".toLowerCase()&&(t=t.replace(/ẞ/g,"ß")),t.toLowerCase().toUpperCase()}const Sr={mdurl:We,ucmicro:Ue};var Xr=Object.freeze({__proto__:null,arrayReplaceAt:ur,assign:mr,escapeHtml:Er,escapeRE:function(t){return t.replace(Ar,"\\$&")},fromCodePoint:gr,has:function(t,e){return pr.call(t,e)},isMdAsciiPunct:Or,isPunctChar:Pr,isSpace:Fr,isString:fr,isValidEntityCode:hr,isWhiteSpace:qr,lib:Sr,normalizeReference:Rr,unescapeAll:yr,unescapeMd:function(t){return t.indexOf("\\")<0?t:t.replace(vr,"$1")}});var Vr=Object.freeze({__proto__:null,parseLinkDestination:function(t,e,r){let o,i=e;const n={ok:!1,pos:0,str:""};if(60===t.charCodeAt(i)){for(i++;i<r;){if(o=t.charCodeAt(i),10===o)return n;if(60===o)return n;if(62===o)return n.pos=i+1,n.str=yr(t.slice(e+1,i)),n.ok=!0,n;92===o&&i+1<r?i+=2:i++}return n}let a=0;for(;i<r&&(o=t.charCodeAt(i),32!==o)&&!(o<32||127===o);)if(92===o&&i+1<r){if(32===t.charCodeAt(i+1))break;i+=2}else{if(40===o&&(a++,a>32))return n;if(41===o){if(0===a)break;a--}i++}return e===i||0!==a||(n.str=yr(t.slice(e,i)),n.pos=i,n.ok=!0),n},parseLinkLabel:function(t,e,r){let o,i,n,a;const s=t.posMax,l=t.pos;for(t.pos=e+1,o=1;t.pos<s;){if(n=t.src.charCodeAt(t.pos),93===n&&(o--,0===o)){i=!0;break}if(a=t.pos,t.md.inline.skipToken(t),91===n)if(a===t.pos-1)o++;else if(r)return t.pos=l,-1}let c=-1;return i&&(c=t.pos),t.pos=l,c},parseLinkTitle:function(t,e,r,o){let i,n=e;const a={ok:!1,can_continue:!1,pos:0,str:"",marker:0};if(o)a.str=o.str,a.marker=o.marker;else{if(n>=r)return a;let o=t.charCodeAt(n);if(34!==o&&39!==o&&40!==o)return a;e++,n++,40===o&&(o=41),a.marker=o}for(;n<r;){if(i=t.charCodeAt(n),i===a.marker)return a.pos=n+1,a.str+=yr(t.slice(e,n)),a.ok=!0,a;if(40===i&&41===a.marker)return a;92===i&&n+1<r&&n++,n++}return a.can_continue=!0,a.str+=yr(t.slice(e,n)),a}});const Gr={};function Mr(){this.rules=mr({},Gr)}function Nr(){this.m=[],this.v=null}function Ir(t,e,r){this.type=t,this.tag=e,this.attrs=null,this.map=null,this.nesting=r,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}function Br(t,e,r){this.src=t,this.env=r,this.tokens=[],this.inlineMode=!1,this.md=e}Gr.code_inline=function(t,e,r,o,i){const n=t[e];return"<code"+i.renderAttrs(n)+">"+Er(n.content)+"</code>"},Gr.code_block=function(t,e,r,o,i){const n=t[e];return"<pre"+i.renderAttrs(n)+"><code>"+Er(t[e].content)+"</code></pre>\n"},Gr.fence=function(t,e,r,o,i){const n=t[e],a=n.info?yr(n.info).trim():"";let s,l="",c="";if(a){const t=a.split(/(\s+)/g);l=t[0],c=t.slice(2).join("")}if(s=r.highlight&&r.highlight(n.content,l,c)||Er(n.content),0===s.indexOf("<pre"))return s+"\n";if(a){const t=n.attrIndex("class"),e=n.attrs?n.attrs.slice():[];t<0?e.push(["class",r.langPrefix+l]):(e[t]=e[t].slice(),e[t][1]+=" "+r.langPrefix+l);const o={attrs:e};return`<pre><code${i.renderAttrs(o)}>${s}</code></pre>\n`}return`<pre><code${i.renderAttrs(n)}>${s}</code></pre>\n`},Gr.image=function(t,e,r,o,i){const n=t[e];return n.attrs[n.attrIndex("alt")][1]=i.renderInlineAsText(n.children,r,o),i.renderToken(t,e,r)},Gr.hardbreak=function(t,e,r){return r.xhtmlOut?"<br />\n":"<br>\n"},Gr.softbreak=function(t,e,r){return r.breaks?r.xhtmlOut?"<br />\n":"<br>\n":"\n"},Gr.text=function(t,e){return Er(t[e].content)},Gr.html_block=function(t,e){return t[e].content},Gr.html_inline=function(t,e){return t[e].content},Mr.prototype.renderAttrs=function(t){let e,r,o;if(!t.attrs)return"";for(o="",e=0,r=t.attrs.length;e<r;e++)o+=" "+Er(t.attrs[e][0])+'="'+Er(t.attrs[e][1])+'"';return o},Mr.prototype.renderToken=function(t,e,r){const o=t[e];let i="";if(o.hidden)return"";o.block&&-1!==o.nesting&&e&&t[e-1].hidden&&(i+="\n"),i+=(-1===o.nesting?"</":"<")+o.tag,i+=this.renderAttrs(o),0===o.nesting&&r.xhtmlOut&&(i+=" /");let n=!1;if(o.block&&(n=!0,1===o.nesting&&e+1<t.length)){const r=t[e+1];("inline"===r.type||r.hidden||-1===r.nesting&&r.tag===o.tag)&&(n=!1)}return i+=n?">\n":">",i},Mr.prototype.renderInline=function(t,e,r){let o="";const i=this.rules;for(let n=0,a=t.length;n<a;n++){const a=t[n].type;void 0!==i[a]?o+=i[a](t,n,e,r,this):o+=this.renderToken(t,n,e)}return o},Mr.prototype.renderInlineAsText=function(t,e,r){let o="";for(let i=0,n=t.length;i<n;i++)switch(t[i].type){case"text":case"html_inline":case"html_block":o+=t[i].content;break;case"image":o+=this.renderInlineAsText(t[i].children,e,r);break;case"softbreak":case"hardbreak":o+="\n"}return o},Mr.prototype.render=function(t,e,r){let o="";const i=this.rules;for(let n=0,a=t.length;n<a;n++){const a=t[n].type;"inline"===a?o+=this.renderInline(t[n].children,e,r):void 0!==i[a]?o+=i[a](t,n,e,r,this):o+=this.renderToken(t,n,e,r)}return o},Nr.prototype.q=function(t){for(let e=0;e<this.m.length;e++)if(this.m[e].name===t)return e;return-1},Nr.prototype.R=function(){const t=this,e=[""];t.m.forEach((function(t){t.enabled&&t.alt.forEach((function(t){e.indexOf(t)<0&&e.push(t)}))})),t.v={},e.forEach((function(e){t.v[e]=[],t.m.forEach((function(r){r.enabled&&(e&&r.alt.indexOf(e)<0||t.v[e].push(r.fn))}))}))},Nr.prototype.at=function(t,e,r){const o=this.q(t),i=r||{};if(-1===o)throw new Error("Parser rule not found: "+t);this.m[o].fn=e,this.m[o].alt=i.alt||[],this.v=null},Nr.prototype.before=function(t,e,r,o){const i=this.q(t),n=o||{};if(-1===i)throw new Error("Parser rule not found: "+t);this.m.splice(i,0,{name:e,enabled:!0,fn:r,alt:n.alt||[]}),this.v=null},Nr.prototype.after=function(t,e,r,o){const i=this.q(t),n=o||{};if(-1===i)throw new Error("Parser rule not found: "+t);this.m.splice(i+1,0,{name:e,enabled:!0,fn:r,alt:n.alt||[]}),this.v=null},Nr.prototype.push=function(t,e,r){const o=r||{};this.m.push({name:t,enabled:!0,fn:e,alt:o.alt||[]}),this.v=null},Nr.prototype.enable=function(t,e){Array.isArray(t)||(t=[t]);const r=[];return t.forEach((function(t){const o=this.q(t);if(o<0){if(e)return;throw new Error("Rules manager: invalid rule name "+t)}this.m[o].enabled=!0,r.push(t)}),this),this.v=null,r},Nr.prototype.enableOnly=function(t,e){Array.isArray(t)||(t=[t]),this.m.forEach((function(t){t.enabled=!1})),this.enable(t,e)},Nr.prototype.disable=function(t,e){Array.isArray(t)||(t=[t]);const r=[];return t.forEach((function(t){const o=this.q(t);if(o<0){if(e)return;throw new Error("Rules manager: invalid rule name "+t)}this.m[o].enabled=!1,r.push(t)}),this),this.v=null,r},Nr.prototype.getRules=function(t){return null===this.v&&this.R(),this.v[t]||[]},Ir.prototype.attrIndex=function(t){if(!this.attrs)return-1;const e=this.attrs;for(let r=0,o=e.length;r<o;r++)if(e[r][0]===t)return r;return-1},Ir.prototype.attrPush=function(t){this.attrs?this.attrs.push(t):this.attrs=[t]},Ir.prototype.attrSet=function(t,e){const r=this.attrIndex(t),o=[t,e];r<0?this.attrPush(o):this.attrs[r]=o},Ir.prototype.attrGet=function(t){const e=this.attrIndex(t);let r=null;return e>=0&&(r=this.attrs[e][1]),r},Ir.prototype.attrJoin=function(t,e){const r=this.attrIndex(t);r<0?this.attrPush([t,e]):this.attrs[r][1]=this.attrs[r][1]+" "+e},Br.prototype.Token=Ir;const Cr=/\r\n?|\n/g,Lr=/\0/g;function Wr(t){return/^<\/a\s*>/i.test(t)}const Zr=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,Hr=/\((c|tm|r)\)/i,Kr=/\((c|tm|r)\)/gi,Tr={c:"©",r:"®",tm:"™"};function Jr(t,e){return Tr[e.toLowerCase()]}function Ur(t){let e=0;for(let r=t.length-1;r>=0;r--){const o=t[r];"text"!==o.type||e||(o.content=o.content.replace(Kr,Jr)),"link_open"===o.type&&"auto"===o.info&&e--,"link_close"===o.type&&"auto"===o.info&&e++}}function Yr(t){let e=0;for(let r=t.length-1;r>=0;r--){const o=t[r];"text"!==o.type||e||Zr.test(o.content)&&(o.content=o.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/gm,"$1—").replace(/(^|\s)--(?=\s|$)/gm,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm,"$1–")),"link_open"===o.type&&"auto"===o.info&&e--,"link_close"===o.type&&"auto"===o.info&&e++}}const Qr=/['"]/,$r=/['"]/g;function _r(t,e,r){return t.slice(0,e)+r+t.slice(e+1)}function to(t,e){let r;const o=[];for(let i=0;i<t.length;i++){const n=t[i],a=t[i].level;for(r=o.length-1;r>=0&&!(o[r].level<=a);r--);if(o.length=r+1,"text"!==n.type)continue;let s=n.content,l=0,c=s.length;t:for(;l<c;){$r.lastIndex=l;const b=$r.exec(s);if(!b)break;let d=!0,f=!0;l=b.index+1;const p="'"===b[0];let m=32;if(b.index-1>=0)m=s.charCodeAt(b.index-1);else for(r=i-1;r>=0&&("softbreak"!==t[r].type&&"hardbreak"!==t[r].type);r--)if(t[r].content){m=t[r].content.charCodeAt(t[r].content.length-1);break}let u=32;if(l<c)u=s.charCodeAt(l);else for(r=i+1;r<t.length&&("softbreak"!==t[r].type&&"hardbreak"!==t[r].type);r++)if(t[r].content){u=t[r].content.charCodeAt(0);break}const h=Or(m)||Pr(String.fromCharCode(m)),g=Or(u)||Pr(String.fromCharCode(u)),v=qr(m),w=qr(u);if(w?d=!1:g&&(v||h||(d=!1)),v?f=!1:h&&(w||g||(f=!1)),34===u&&'"'===b[0]&&m>=48&&m<=57&&(f=d=!1),d&&f&&(d=h,f=g),d||f){if(f)for(r=o.length-1;r>=0;r--){let d=o[r];if(o[r].level<a)break;if(d.single===p&&o[r].level===a){let a,f;d=o[r],p?(a=e.md.options.quotes[2],f=e.md.options.quotes[3]):(a=e.md.options.quotes[0],f=e.md.options.quotes[1]),n.content=_r(n.content,b.index,f),t[d.token].content=_r(t[d.token].content,d.pos,a),l+=f.length-1,d.token===i&&(l+=a.length-1),s=n.content,c=s.length,o.length=r;continue t}}d?o.push({token:i,pos:b.index,single:p,level:a}):f&&p&&(n.content=_r(n.content,b.index,"’"))}else p&&(n.content=_r(n.content,b.index,"’"))}}}const eo=[["normalize",function(t){let e;e=t.src.replace(Cr,"\n"),e=e.replace(Lr,"�"),t.src=e}],["block",function(t){let e;t.inlineMode?(e=new t.Token("inline","",0),e.content=t.src,e.map=[0,1],e.children=[],t.tokens.push(e)):t.md.block.parse(t.src,t.md,t.env,t.tokens)}],["inline",function(t){const e=t.tokens;for(let r=0,o=e.length;r<o;r++){const o=e[r];"inline"===o.type&&t.md.inline.parse(o.content,t.md,t.env,o.children)}}],["linkify",function(t){const e=t.tokens;var r;if(t.md.options.linkify)for(let o=0,i=e.length;o<i;o++){if("inline"!==e[o].type||!t.md.linkify.pretest(e[o].content))continue;let i=e[o].children,n=0;for(let a=i.length-1;a>=0;a--){const s=i[a];if("link_close"!==s.type){if("html_inline"===s.type&&(r=s.content,/^<a[>\s]/i.test(r)&&n>0&&n--,Wr(s.content)&&n++),!(n>0)&&"text"===s.type&&t.md.linkify.test(s.content)){const r=s.content;let n=t.md.linkify.match(r);const l=[];let c=s.level,b=0;n.length>0&&0===n[0].index&&a>0&&"text_special"===i[a-1].type&&(n=n.slice(1));for(let e=0;e<n.length;e++){const o=n[e].url,i=t.md.normalizeLink(o);if(!t.md.validateLink(i))continue;let a=n[e].text;a=n[e].schema?"mailto:"!==n[e].schema||/^mailto:/i.test(a)?t.md.normalizeLinkText(a):t.md.normalizeLinkText("mailto:"+a).replace(/^mailto:/,""):t.md.normalizeLinkText("http://"+a).replace(/^http:\/\//,"");const s=n[e].index;if(s>b){const e=new t.Token("text","",0);e.content=r.slice(b,s),e.level=c,l.push(e)}const d=new t.Token("link_open","a",1);d.attrs=[["href",i]],d.level=c++,d.markup="linkify",d.info="auto",l.push(d);const f=new t.Token("text","",0);f.content=a,f.level=c,l.push(f);const p=new t.Token("link_close","a",-1);p.level=--c,p.markup="linkify",p.info="auto",l.push(p),b=n[e].lastIndex}if(b<r.length){const e=new t.Token("text","",0);e.content=r.slice(b),e.level=c,l.push(e)}e[o].children=i=ur(i,a,l)}}else for(a--;i[a].level!==s.level&&"link_open"!==i[a].type;)a--}}}],["replacements",function(t){let e;if(t.md.options.typographer)for(e=t.tokens.length-1;e>=0;e--)"inline"===t.tokens[e].type&&(Hr.test(t.tokens[e].content)&&Ur(t.tokens[e].children),Zr.test(t.tokens[e].content)&&Yr(t.tokens[e].children))}],["smartquotes",function(t){if(t.md.options.typographer)for(let e=t.tokens.length-1;e>=0;e--)"inline"===t.tokens[e].type&&Qr.test(t.tokens[e].content)&&to(t.tokens[e].children,t)}],["text_join",function(t){let e,r;const o=t.tokens,i=o.length;for(let t=0;t<i;t++){if("inline"!==o[t].type)continue;const i=o[t].children,n=i.length;for(e=0;e<n;e++)"text_special"===i[e].type&&(i[e].type="text");for(e=r=0;e<n;e++)"text"===i[e].type&&e+1<n&&"text"===i[e+1].type?i[e+1].content=i[e].content+i[e+1].content:(e!==r&&(i[r]=i[e]),r++);e!==r&&(i.length=r)}}]];function ro(){this.ruler=new Nr;for(let t=0;t<eo.length;t++)this.ruler.push(eo[t][0],eo[t][1])}function oo(t,e,r,o){this.src=t,this.md=e,this.env=r,this.tokens=o,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0;const i=this.src;for(let t=0,e=0,r=0,o=0,n=i.length,a=!1;e<n;e++){const s=i.charCodeAt(e);if(!a){if(Fr(s)){r++,9===s?o+=4-o%4:o++;continue}a=!0}10!==s&&e!==n-1||(10!==s&&e++,this.bMarks.push(t),this.eMarks.push(e),this.tShift.push(r),this.sCount.push(o),this.bsCount.push(0),a=!1,r=0,o=0,t=e+1)}this.bMarks.push(i.length),this.eMarks.push(i.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}ro.prototype.process=function(t){const e=this.ruler.getRules("");for(let r=0,o=e.length;r<o;r++)e[r](t)},ro.prototype.State=Br,oo.prototype.push=function(t,e,r){const o=new Ir(t,e,r);return o.block=!0,r<0&&this.level--,o.level=this.level,r>0&&this.level++,this.tokens.push(o),o},oo.prototype.isEmpty=function(t){return this.bMarks[t]+this.tShift[t]>=this.eMarks[t]},oo.prototype.skipEmptyLines=function(t){for(let e=this.lineMax;t<e&&!(this.bMarks[t]+this.tShift[t]<this.eMarks[t]);t++);return t},oo.prototype.skipSpaces=function(t){for(let e=this.src.length;t<e;t++){if(!Fr(this.src.charCodeAt(t)))break}return t},oo.prototype.skipSpacesBack=function(t,e){if(t<=e)return t;for(;t>e;)if(!Fr(this.src.charCodeAt(--t)))return t+1;return t},oo.prototype.skipChars=function(t,e){for(let r=this.src.length;t<r&&this.src.charCodeAt(t)===e;t++);return t},oo.prototype.skipCharsBack=function(t,e,r){if(t<=r)return t;for(;t>r;)if(e!==this.src.charCodeAt(--t))return t+1;return t},oo.prototype.getLines=function(t,e,r,o){if(t>=e)return"";const i=new Array(e-t);for(let n=0,a=t;a<e;a++,n++){let t=0;const s=this.bMarks[a];let l,c=s;for(l=a+1<e||o?this.eMarks[a]+1:this.eMarks[a];c<l&&t<r;){const e=this.src.charCodeAt(c);if(Fr(e))9===e?t+=4-(t+this.bsCount[a])%4:t++;else{if(!(c-s<this.tShift[a]))break;t++}c++}i[n]=t>r?new Array(t-r+1).join(" ")+this.src.slice(c,l):this.src.slice(c,l)}return i.join("")},oo.prototype.Token=Ir;function io(t,e){const r=t.bMarks[e]+t.tShift[e],o=t.eMarks[e];return t.src.slice(r,o)}function no(t){const e=[],r=t.length;let o=0,i=t.charCodeAt(o),n=!1,a=0,s="";for(;o<r;)124===i&&(n?(s+=t.substring(a,o-1),a=o):(e.push(s+t.substring(a,o)),s="",a=o+1)),n=92===i,o++,i=t.charCodeAt(o);return e.push(s+t.substring(a)),e}function ao(t,e){const r=t.eMarks[e];let o=t.bMarks[e]+t.tShift[e];const i=t.src.charCodeAt(o++);if(42!==i&&45!==i&&43!==i)return-1;if(o<r){if(!Fr(t.src.charCodeAt(o)))return-1}return o}function so(t,e){const r=t.bMarks[e]+t.tShift[e],o=t.eMarks[e];let i=r;if(i+1>=o)return-1;let n=t.src.charCodeAt(i++);if(n<48||n>57)return-1;for(;;){if(i>=o)return-1;if(n=t.src.charCodeAt(i++),!(n>=48&&n<=57)){if(41===n||46===n)break;return-1}if(i-r>=10)return-1}return i<o&&(n=t.src.charCodeAt(i),!Fr(n))?-1:i}const lo="<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>",co="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",bo=new RegExp("^(?:"+lo+"|"+co+"|\x3c!---?>|\x3c!--(?:[^-]|-[^-]|--[^>])*--\x3e|<[?][\\s\\S]*?[?]>|<![A-Za-z][^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"),fo=new RegExp("^(?:"+lo+"|"+co+")"),po=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"].join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(fo.source+"\\s*$"),/^$/,!1]];const mo=[["table",function(t,e,r,o){if(e+2>r)return!1;let i=e+1;if(t.sCount[i]<t.blkIndent)return!1;if(t.sCount[i]-t.blkIndent>=4)return!1;let n=t.bMarks[i]+t.tShift[i];if(n>=t.eMarks[i])return!1;const a=t.src.charCodeAt(n++);if(124!==a&&45!==a&&58!==a)return!1;if(n>=t.eMarks[i])return!1;const s=t.src.charCodeAt(n++);if(124!==s&&45!==s&&58!==s&&!Fr(s))return!1;if(45===a&&Fr(s))return!1;for(;n<t.eMarks[i];){const e=t.src.charCodeAt(n);if(124!==e&&45!==e&&58!==e&&!Fr(e))return!1;n++}let l=io(t,e+1),c=l.split("|");const b=[];for(let t=0;t<c.length;t++){const e=c[t].trim();if(!e){if(0===t||t===c.length-1)continue;return!1}if(!/^:?-+:?$/.test(e))return!1;58===e.charCodeAt(e.length-1)?b.push(58===e.charCodeAt(0)?"center":"right"):58===e.charCodeAt(0)?b.push("left"):b.push("")}if(l=io(t,e).trim(),-1===l.indexOf("|"))return!1;if(t.sCount[e]-t.blkIndent>=4)return!1;c=no(l),c.length&&""===c[0]&&c.shift(),c.length&&""===c[c.length-1]&&c.pop();const d=c.length;if(0===d||d!==b.length)return!1;if(o)return!0;const f=t.parentType;t.parentType="table";const p=t.md.block.ruler.getRules("blockquote"),m=[e,0];t.push("table_open","table",1).map=m,t.push("thead_open","thead",1).map=[e,e+1],t.push("tr_open","tr",1).map=[e,e+1];for(let e=0;e<c.length;e++){const r=t.push("th_open","th",1);b[e]&&(r.attrs=[["style","text-align:"+b[e]]]);const o=t.push("inline","",0);o.content=c[e].trim(),o.children=[],t.push("th_close","th",-1)}let u;t.push("tr_close","tr",-1),t.push("thead_close","thead",-1);let h=0;for(i=e+2;i<r&&!(t.sCount[i]<t.blkIndent);i++){let o=!1;for(let e=0,n=p.length;e<n;e++)if(p[e](t,i,r,!0)){o=!0;break}if(o)break;if(l=io(t,i).trim(),!l)break;if(t.sCount[i]-t.blkIndent>=4)break;if(c=no(l),c.length&&""===c[0]&&c.shift(),c.length&&""===c[c.length-1]&&c.pop(),h+=d-c.length,h>65536)break;if(i===e+2){t.push("tbody_open","tbody",1).map=u=[e+2,0]}t.push("tr_open","tr",1).map=[i,i+1];for(let e=0;e<d;e++){const r=t.push("td_open","td",1);b[e]&&(r.attrs=[["style","text-align:"+b[e]]]);const o=t.push("inline","",0);o.content=c[e]?c[e].trim():"",o.children=[],t.push("td_close","td",-1)}t.push("tr_close","tr",-1)}return u&&(t.push("tbody_close","tbody",-1),u[1]=i),t.push("table_close","table",-1),m[1]=i,t.parentType=f,t.line=i,!0},["paragraph","reference"]],["code",function(t,e,r){if(t.sCount[e]-t.blkIndent<4)return!1;let o=e+1,i=o;for(;o<r;)if(t.isEmpty(o))o++;else{if(!(t.sCount[o]-t.blkIndent>=4))break;o++,i=o}t.line=i;const n=t.push("code_block","code",0);return n.content=t.getLines(e,i,4+t.blkIndent,!1)+"\n",n.map=[e,t.line],!0}],["fence",function(t,e,r,o){let i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e];if(t.sCount[e]-t.blkIndent>=4)return!1;if(i+3>n)return!1;const a=t.src.charCodeAt(i);if(126!==a&&96!==a)return!1;let s=i;i=t.skipChars(i,a);let l=i-s;if(l<3)return!1;const c=t.src.slice(s,i),b=t.src.slice(i,n);if(96===a&&b.indexOf(String.fromCharCode(a))>=0)return!1;if(o)return!0;let d=e,f=!1;for(;(d++,!(d>=r))&&(i=s=t.bMarks[d]+t.tShift[d],n=t.eMarks[d],!(i<n&&t.sCount[d]<t.blkIndent));)if(t.src.charCodeAt(i)===a&&!(t.sCount[d]-t.blkIndent>=4||(i=t.skipChars(i,a),i-s<l||(i=t.skipSpaces(i),i<n)))){f=!0;break}l=t.sCount[e],t.line=d+(f?1:0);const p=t.push("fence","code",0);return p.info=b,p.content=t.getLines(e+1,d,l,!0),p.markup=c,p.map=[e,t.line],!0},["paragraph","reference","blockquote","list"]],["blockquote",function(t,e,r,o){let i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e];const a=t.lineMax;if(t.sCount[e]-t.blkIndent>=4)return!1;if(62!==t.src.charCodeAt(i))return!1;if(o)return!0;const s=[],l=[],c=[],b=[],d=t.md.block.ruler.getRules("blockquote"),f=t.parentType;t.parentType="blockquote";let p,m=!1;for(p=e;p<r;p++){const e=t.sCount[p]<t.blkIndent;if(i=t.bMarks[p]+t.tShift[p],n=t.eMarks[p],i>=n)break;if(62===t.src.charCodeAt(i++)&&!e){let e,r,o=t.sCount[p]+1;32===t.src.charCodeAt(i)?(i++,o++,r=!1,e=!0):9===t.src.charCodeAt(i)?(e=!0,(t.bsCount[p]+o)%4==3?(i++,o++,r=!1):r=!0):e=!1;let a=o;for(s.push(t.bMarks[p]),t.bMarks[p]=i;i<n;){const e=t.src.charCodeAt(i);if(!Fr(e))break;9===e?a+=4-(a+t.bsCount[p]+(r?1:0))%4:a++,i++}m=i>=n,l.push(t.bsCount[p]),t.bsCount[p]=t.sCount[p]+1+(e?1:0),c.push(t.sCount[p]),t.sCount[p]=a-o,b.push(t.tShift[p]),t.tShift[p]=i-t.bMarks[p];continue}if(m)break;let o=!1;for(let e=0,i=d.length;e<i;e++)if(d[e](t,p,r,!0)){o=!0;break}if(o){t.lineMax=p,0!==t.blkIndent&&(s.push(t.bMarks[p]),l.push(t.bsCount[p]),b.push(t.tShift[p]),c.push(t.sCount[p]),t.sCount[p]-=t.blkIndent);break}s.push(t.bMarks[p]),l.push(t.bsCount[p]),b.push(t.tShift[p]),c.push(t.sCount[p]),t.sCount[p]=-1}const u=t.blkIndent;t.blkIndent=0;const h=t.push("blockquote_open","blockquote",1);h.markup=">";const g=[e,0];h.map=g,t.md.block.tokenize(t,e,p),t.push("blockquote_close","blockquote",-1).markup=">",t.lineMax=a,t.parentType=f,g[1]=t.line;for(let r=0;r<b.length;r++)t.bMarks[r+e]=s[r],t.tShift[r+e]=b[r],t.sCount[r+e]=c[r],t.bsCount[r+e]=l[r];return t.blkIndent=u,!0},["paragraph","reference","blockquote","list"]],["hr",function(t,e,r,o){const i=t.eMarks[e];if(t.sCount[e]-t.blkIndent>=4)return!1;let n=t.bMarks[e]+t.tShift[e];const a=t.src.charCodeAt(n++);if(42!==a&&45!==a&&95!==a)return!1;let s=1;for(;n<i;){const e=t.src.charCodeAt(n++);if(e!==a&&!Fr(e))return!1;e===a&&s++}if(s<3)return!1;if(o)return!0;t.line=e+1;const l=t.push("hr","hr",0);return l.map=[e,t.line],l.markup=Array(s+1).join(String.fromCharCode(a)),!0},["paragraph","reference","blockquote","list"]],["list",function(t,e,r,o){let i,n,a,s,l=e,c=!0;if(t.sCount[l]-t.blkIndent>=4)return!1;if(t.listIndent>=0&&t.sCount[l]-t.listIndent>=4&&t.sCount[l]<t.blkIndent)return!1;let b,d,f,p=!1;if(o&&"paragraph"===t.parentType&&t.sCount[l]>=t.blkIndent&&(p=!0),(f=so(t,l))>=0){if(b=!0,a=t.bMarks[l]+t.tShift[l],d=Number(t.src.slice(a,f-1)),p&&1!==d)return!1}else{if(!((f=ao(t,l))>=0))return!1;b=!1}if(p&&t.skipSpaces(f)>=t.eMarks[l])return!1;if(o)return!0;const m=t.src.charCodeAt(f-1),u=t.tokens.length;b?(s=t.push("ordered_list_open","ol",1),1!==d&&(s.attrs=[["start",d]])):s=t.push("bullet_list_open","ul",1);const h=[l,0];s.map=h,s.markup=String.fromCharCode(m);let g=!1;const v=t.md.block.ruler.getRules("list"),w=t.parentType;for(t.parentType="list";l<r;){n=f,i=t.eMarks[l];const e=t.sCount[l]+f-(t.bMarks[l]+t.tShift[l]);let o=e;for(;n<i;){const e=t.src.charCodeAt(n);if(9===e)o+=4-(o+t.bsCount[l])%4;else{if(32!==e)break;o++}n++}const d=n;let p;p=d>=i?1:o-e,p>4&&(p=1);const u=e+p;s=t.push("list_item_open","li",1),s.markup=String.fromCharCode(m);const h=[l,0];s.map=h,b&&(s.info=t.src.slice(a,f-1));const w=t.tight,x=t.tShift[l],y=t.sCount[l],k=t.listIndent;if(t.listIndent=t.blkIndent,t.blkIndent=u,t.tight=!0,t.tShift[l]=d-t.bMarks[l],t.sCount[l]=o,d>=i&&t.isEmpty(l+1)?t.line=Math.min(t.line+2,r):t.md.block.tokenize(t,l,r,!0),t.tight&&!g||(c=!1),g=t.line-l>1&&t.isEmpty(t.line-1),t.blkIndent=t.listIndent,t.listIndent=k,t.tShift[l]=x,t.sCount[l]=y,t.tight=w,s=t.push("list_item_close","li",-1),s.markup=String.fromCharCode(m),l=t.line,h[1]=l,l>=r)break;if(t.sCount[l]<t.blkIndent)break;if(t.sCount[l]-t.blkIndent>=4)break;let j=!1;for(let e=0,o=v.length;e<o;e++)if(v[e](t,l,r,!0)){j=!0;break}if(j)break;if(b){if(f=so(t,l),f<0)break;a=t.bMarks[l]+t.tShift[l]}else if(f=ao(t,l),f<0)break;if(m!==t.src.charCodeAt(f-1))break}return s=b?t.push("ordered_list_close","ol",-1):t.push("bullet_list_close","ul",-1),s.markup=String.fromCharCode(m),h[1]=l,t.line=l,t.parentType=w,c&&function(t,e){const r=t.level+2;for(let o=e+2,i=t.tokens.length-2;o<i;o++)t.tokens[o].level===r&&"paragraph_open"===t.tokens[o].type&&(t.tokens[o+2].hidden=!0,t.tokens[o].hidden=!0,o+=2)}(t,u),!0},["paragraph","reference","blockquote"]],["reference",function(t,e,r,o){let i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e],a=e+1;if(t.sCount[e]-t.blkIndent>=4)return!1;if(91!==t.src.charCodeAt(i))return!1;function s(e){const r=t.lineMax;if(e>=r||t.isEmpty(e))return null;let o=!1;if(t.sCount[e]-t.blkIndent>3&&(o=!0),t.sCount[e]<0&&(o=!0),!o){const o=t.md.block.ruler.getRules("reference"),i=t.parentType;t.parentType="reference";let n=!1;for(let i=0,a=o.length;i<a;i++)if(o[i](t,e,r,!0)){n=!0;break}if(t.parentType=i,n)return null}const i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e];return t.src.slice(i,n+1)}let l=t.src.slice(i,n+1);n=l.length;let c=-1;for(i=1;i<n;i++){const t=l.charCodeAt(i);if(91===t)return!1;if(93===t){c=i;break}if(10===t){const t=s(a);null!==t&&(l+=t,n=l.length,a++)}else if(92===t&&(i++,i<n&&10===l.charCodeAt(i))){const t=s(a);null!==t&&(l+=t,n=l.length,a++)}}if(c<0||58!==l.charCodeAt(c+1))return!1;for(i=c+2;i<n;i++){const t=l.charCodeAt(i);if(10===t){const t=s(a);null!==t&&(l+=t,n=l.length,a++)}else if(!Fr(t))break}const b=t.md.helpers.parseLinkDestination(l,i,n);if(!b.ok)return!1;const d=t.md.normalizeLink(b.str);if(!t.md.validateLink(d))return!1;i=b.pos;const f=i,p=a,m=i;for(;i<n;i++){const t=l.charCodeAt(i);if(10===t){const t=s(a);null!==t&&(l+=t,n=l.length,a++)}else if(!Fr(t))break}let u,h=t.md.helpers.parseLinkTitle(l,i,n);for(;h.can_continue;){const e=s(a);if(null===e)break;l+=e,i=n,n=l.length,a++,h=t.md.helpers.parseLinkTitle(l,i,n,h)}for(i<n&&m!==i&&h.ok?(u=h.str,i=h.pos):(u="",i=f,a=p);i<n;){if(!Fr(l.charCodeAt(i)))break;i++}if(i<n&&10!==l.charCodeAt(i)&&u)for(u="",i=f,a=p;i<n;){if(!Fr(l.charCodeAt(i)))break;i++}if(i<n&&10!==l.charCodeAt(i))return!1;const g=Rr(l.slice(1,c));return!!g&&(o||(void 0===t.env.references&&(t.env.references={}),void 0===t.env.references[g]&&(t.env.references[g]={title:u,href:d}),t.line=a),!0)}],["html_block",function(t,e,r,o){let i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e];if(t.sCount[e]-t.blkIndent>=4)return!1;if(!t.md.options.html)return!1;if(60!==t.src.charCodeAt(i))return!1;let a=t.src.slice(i,n),s=0;for(;s<po.length&&!po[s][0].test(a);s++);if(s===po.length)return!1;if(o)return po[s][2];let l=e+1;if(!po[s][1].test(a))for(;l<r&&!(t.sCount[l]<t.blkIndent);l++)if(i=t.bMarks[l]+t.tShift[l],n=t.eMarks[l],a=t.src.slice(i,n),po[s][1].test(a)){0!==a.length&&l++;break}t.line=l;const c=t.push("html_block","",0);return c.map=[e,l],c.content=t.getLines(e,l,t.blkIndent,!0),!0},["paragraph","reference","blockquote"]],["heading",function(t,e,r,o){let i=t.bMarks[e]+t.tShift[e],n=t.eMarks[e];if(t.sCount[e]-t.blkIndent>=4)return!1;let a=t.src.charCodeAt(i);if(35!==a||i>=n)return!1;let s=1;for(a=t.src.charCodeAt(++i);35===a&&i<n&&s<=6;)s++,a=t.src.charCodeAt(++i);if(s>6||i<n&&!Fr(a))return!1;if(o)return!0;n=t.skipSpacesBack(n,i);const l=t.skipCharsBack(n,35,i);l>i&&Fr(t.src.charCodeAt(l-1))&&(n=l),t.line=e+1;const c=t.push("heading_open","h"+String(s),1);c.markup="########".slice(0,s),c.map=[e,t.line];const b=t.push("inline","",0);return b.content=t.src.slice(i,n).trim(),b.map=[e,t.line],b.children=[],t.push("heading_close","h"+String(s),-1).markup="########".slice(0,s),!0},["paragraph","reference","blockquote"]],["lheading",function(t,e,r){const o=t.md.block.ruler.getRules("paragraph");if(t.sCount[e]-t.blkIndent>=4)return!1;const i=t.parentType;t.parentType="paragraph";let n,a=0,s=e+1;for(;s<r&&!t.isEmpty(s);s++){if(t.sCount[s]-t.blkIndent>3)continue;if(t.sCount[s]>=t.blkIndent){let e=t.bMarks[s]+t.tShift[s];const r=t.eMarks[s];if(e<r&&(n=t.src.charCodeAt(e),(45===n||61===n)&&(e=t.skipChars(e,n),e=t.skipSpaces(e),e>=r))){a=61===n?1:2;break}}if(t.sCount[s]<0)continue;let e=!1;for(let i=0,n=o.length;i<n;i++)if(o[i](t,s,r,!0)){e=!0;break}if(e)break}if(!a)return!1;const l=t.getLines(e,s,t.blkIndent,!1).trim();t.line=s+1;const c=t.push("heading_open","h"+String(a),1);c.markup=String.fromCharCode(n),c.map=[e,t.line];const b=t.push("inline","",0);return b.content=l,b.map=[e,t.line-1],b.children=[],t.push("heading_close","h"+String(a),-1).markup=String.fromCharCode(n),t.parentType=i,!0}],["paragraph",function(t,e,r){const o=t.md.block.ruler.getRules("paragraph"),i=t.parentType;let n=e+1;for(t.parentType="paragraph";n<r&&!t.isEmpty(n);n++){if(t.sCount[n]-t.blkIndent>3)continue;if(t.sCount[n]<0)continue;let e=!1;for(let i=0,a=o.length;i<a;i++)if(o[i](t,n,r,!0)){e=!0;break}if(e)break}const a=t.getLines(e,n,t.blkIndent,!1).trim();t.line=n,t.push("paragraph_open","p",1).map=[e,t.line];const s=t.push("inline","",0);return s.content=a,s.map=[e,t.line],s.children=[],t.push("paragraph_close","p",-1),t.parentType=i,!0}]];function uo(){this.ruler=new Nr;for(let t=0;t<mo.length;t++)this.ruler.push(mo[t][0],mo[t][1],{alt:(mo[t][2]||[]).slice()})}function ho(t,e,r,o){this.src=t,this.env=r,this.md=e,this.tokens=o,this.tokens_meta=Array(o.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}function go(t){switch(t){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}uo.prototype.tokenize=function(t,e,r){const o=this.ruler.getRules(""),i=o.length,n=t.md.options.maxNesting;let a=e,s=!1;for(;a<r&&(t.line=a=t.skipEmptyLines(a),!(a>=r))&&!(t.sCount[a]<t.blkIndent);){if(t.level>=n){t.line=r;break}const e=t.line;let l=!1;for(let n=0;n<i;n++)if(l=o[n](t,a,r,!1),l){if(e>=t.line)throw new Error("block rule didn't increment state.line");break}if(!l)throw new Error("none of the block rules matched");t.tight=!s,t.isEmpty(t.line-1)&&(s=!0),a=t.line,a<r&&t.isEmpty(a)&&(s=!0,a++,t.line=a)}},uo.prototype.parse=function(t,e,r,o){if(!t)return;const i=new this.State(t,e,r,o);this.tokenize(i,i.line,i.lineMax)},uo.prototype.State=oo,ho.prototype.pushPending=function(){const t=new Ir("text","",0);return t.content=this.pending,t.level=this.pendingLevel,this.tokens.push(t),this.pending="",t},ho.prototype.push=function(t,e,r){this.pending&&this.pushPending();const o=new Ir(t,e,r);let i=null;return r<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),o.level=this.level,r>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],i={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(o),this.tokens_meta.push(i),o},ho.prototype.scanDelims=function(t,e){const r=this.posMax,o=this.src.charCodeAt(t),i=t>0?this.src.charCodeAt(t-1):32;let n=t;for(;n<r&&this.src.charCodeAt(n)===o;)n++;const a=n-t,s=n<r?this.src.charCodeAt(n):32,l=Or(i)||Pr(String.fromCharCode(i)),c=Or(s)||Pr(String.fromCharCode(s)),b=qr(i),d=qr(s),f=!d&&(!c||b||l),p=!b&&(!l||d||c);return{can_open:f&&(e||!p||l),can_close:p&&(e||!f||c),length:a}},ho.prototype.Token=Ir;const vo=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;const wo=[];for(let t=0;t<256;t++)wo.push(0);function xo(t,e){let r;const o=[],i=e.length;for(let n=0;n<i;n++){const i=e[n];if(126!==i.marker)continue;if(-1===i.end)continue;const a=e[i.end];r=t.tokens[i.token],r.type="s_open",r.tag="s",r.nesting=1,r.markup="~~",r.content="",r=t.tokens[a.token],r.type="s_close",r.tag="s",r.nesting=-1,r.markup="~~",r.content="","text"===t.tokens[a.token-1].type&&"~"===t.tokens[a.token-1].content&&o.push(a.token-1)}for(;o.length;){const e=o.pop();let i=e+1;for(;i<t.tokens.length&&"s_close"===t.tokens[i].type;)i++;i--,e!==i&&(r=t.tokens[i],t.tokens[i]=t.tokens[e],t.tokens[e]=r)}}"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach((function(t){wo[t.charCodeAt(0)]=1}));var yo={tokenize:function(t,e){const r=t.pos,o=t.src.charCodeAt(r);if(e)return!1;if(126!==o)return!1;const i=t.scanDelims(t.pos,!0);let n=i.length;const a=String.fromCharCode(o);if(n<2)return!1;let s;n%2&&(s=t.push("text","",0),s.content=a,n--);for(let e=0;e<n;e+=2)s=t.push("text","",0),s.content=a+a,t.delimiters.push({marker:o,length:0,token:t.tokens.length-1,end:-1,open:i.can_open,close:i.can_close});return t.pos+=i.length,!0},postProcess:function(t){const e=t.tokens_meta,r=t.tokens_meta.length;xo(t,t.delimiters);for(let o=0;o<r;o++)e[o]&&e[o].delimiters&&xo(t,e[o].delimiters)}};function ko(t,e){for(let r=e.length-1;r>=0;r--){const o=e[r];if(95!==o.marker&&42!==o.marker)continue;if(-1===o.end)continue;const i=e[o.end],n=r>0&&e[r-1].end===o.end+1&&e[r-1].marker===o.marker&&e[r-1].token===o.token-1&&e[o.end+1].token===i.token+1,a=String.fromCharCode(o.marker),s=t.tokens[o.token];s.type=n?"strong_open":"em_open",s.tag=n?"strong":"em",s.nesting=1,s.markup=n?a+a:a,s.content="";const l=t.tokens[i.token];l.type=n?"strong_close":"em_close",l.tag=n?"strong":"em",l.nesting=-1,l.markup=n?a+a:a,l.content="",n&&(t.tokens[e[r-1].token].content="",t.tokens[e[o.end+1].token].content="",r--)}}var jo={tokenize:function(t,e){const r=t.pos,o=t.src.charCodeAt(r);if(e)return!1;if(95!==o&&42!==o)return!1;const i=t.scanDelims(t.pos,42===o);for(let e=0;e<i.length;e++){t.push("text","",0).content=String.fromCharCode(o),t.delimiters.push({marker:o,length:i.length,token:t.tokens.length-1,end:-1,open:i.can_open,close:i.can_close})}return t.pos+=i.length,!0},postProcess:function(t){const e=t.tokens_meta,r=t.tokens_meta.length;ko(t,t.delimiters);for(let o=0;o<r;o++)e[o]&&e[o].delimiters&&ko(t,e[o].delimiters)}};const Do=/^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,zo=/^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;const Eo=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,Ao=/^&([a-z][a-z0-9]{1,31});/i;function Fo(t){const e={},r=t.length;if(!r)return;let o=0,i=-2;const n=[];for(let a=0;a<r;a++){const r=t[a];if(n.push(0),t[o].marker===r.marker&&i===r.token-1||(o=a),i=r.token,r.length=r.length||0,!r.close)continue;e.hasOwnProperty(r.marker)||(e[r.marker]=[-1,-1,-1,-1,-1,-1]);const s=e[r.marker][(r.open?3:0)+r.length%3];let l=o-n[o]-1,c=l;for(;l>s;l-=n[l]+1){const e=t[l];if(e.marker===r.marker&&(e.open&&e.end<0)){let o=!1;if((e.close||r.open)&&(e.length+r.length)%3==0&&(e.length%3==0&&r.length%3==0||(o=!0)),!o){const o=l>0&&!t[l-1].open?n[l-1]+1:0;n[a]=a-l+o,n[l]=o,r.open=!1,e.end=a,e.close=!1,c=-1,i=-2;break}}}-1!==c&&(e[r.marker][(r.open?3:0)+(r.length||0)%3]=c)}}const qo=[["text",function(t,e){let r=t.pos;for(;r<t.posMax&&!go(t.src.charCodeAt(r));)r++;return r!==t.pos&&(e||(t.pending+=t.src.slice(t.pos,r)),t.pos=r,!0)}],["linkify",function(t,e){if(!t.md.options.linkify)return!1;if(t.linkLevel>0)return!1;const r=t.pos;if(r+3>t.posMax)return!1;if(58!==t.src.charCodeAt(r))return!1;if(47!==t.src.charCodeAt(r+1))return!1;if(47!==t.src.charCodeAt(r+2))return!1;const o=t.pending.match(vo);if(!o)return!1;const i=o[1],n=t.md.linkify.matchAtStart(t.src.slice(r-i.length));if(!n)return!1;let a=n.url;if(a.length<=i.length)return!1;a=a.replace(/\*+$/,"");const s=t.md.normalizeLink(a);if(!t.md.validateLink(s))return!1;if(!e){t.pending=t.pending.slice(0,-i.length);const e=t.push("link_open","a",1);e.attrs=[["href",s]],e.markup="linkify",e.info="auto";t.push("text","",0).content=t.md.normalizeLinkText(a);const r=t.push("link_close","a",-1);r.markup="linkify",r.info="auto"}return t.pos+=a.length-i.length,!0}],["newline",function(t,e){let r=t.pos;if(10!==t.src.charCodeAt(r))return!1;const o=t.pending.length-1,i=t.posMax;if(!e)if(o>=0&&32===t.pending.charCodeAt(o))if(o>=1&&32===t.pending.charCodeAt(o-1)){let e=o-1;for(;e>=1&&32===t.pending.charCodeAt(e-1);)e--;t.pending=t.pending.slice(0,e),t.push("hardbreak","br",0)}else t.pending=t.pending.slice(0,-1),t.push("softbreak","br",0);else t.push("softbreak","br",0);for(r++;r<i&&Fr(t.src.charCodeAt(r));)r++;return t.pos=r,!0}],["escape",function(t,e){let r=t.pos;const o=t.posMax;if(92!==t.src.charCodeAt(r))return!1;if(r++,r>=o)return!1;let i=t.src.charCodeAt(r);if(10===i){for(e||t.push("hardbreak","br",0),r++;r<o&&(i=t.src.charCodeAt(r),Fr(i));)r++;return t.pos=r,!0}let n=t.src[r];if(i>=55296&&i<=56319&&r+1<o){const e=t.src.charCodeAt(r+1);e>=56320&&e<=57343&&(n+=t.src[r+1],r++)}const a="\\"+n;if(!e){const e=t.push("text_special","",0);i<256&&0!==wo[i]?e.content=n:e.content=a,e.markup=a,e.info="escape"}return t.pos=r+1,!0}],["backticks",function(t,e){let r=t.pos;if(96!==t.src.charCodeAt(r))return!1;const o=r;r++;const i=t.posMax;for(;r<i&&96===t.src.charCodeAt(r);)r++;const n=t.src.slice(o,r),a=n.length;if(t.backticksScanned&&(t.backticks[a]||0)<=o)return e||(t.pending+=n),t.pos+=a,!0;let s,l=r;for(;-1!==(s=t.src.indexOf("`",l));){for(l=s+1;l<i&&96===t.src.charCodeAt(l);)l++;const o=l-s;if(o===a){if(!e){const e=t.push("code_inline","code",0);e.markup=n,e.content=t.src.slice(r,s).replace(/\n/g," ").replace(/^ (.+) $/,"$1")}return t.pos=l,!0}t.backticks[o]=s}return t.backticksScanned=!0,e||(t.pending+=n),t.pos+=a,!0}],["strikethrough",yo.tokenize],["emphasis",jo.tokenize],["link",function(t,e){let r,o,i,n,a="",s="",l=t.pos,c=!0;if(91!==t.src.charCodeAt(t.pos))return!1;const b=t.pos,d=t.posMax,f=t.pos+1,p=t.md.helpers.parseLinkLabel(t,t.pos,!0);if(p<0)return!1;let m=p+1;if(m<d&&40===t.src.charCodeAt(m)){for(c=!1,m++;m<d&&(r=t.src.charCodeAt(m),Fr(r)||10===r);m++);if(m>=d)return!1;if(l=m,i=t.md.helpers.parseLinkDestination(t.src,m,t.posMax),i.ok){for(a=t.md.normalizeLink(i.str),t.md.validateLink(a)?m=i.pos:a="",l=m;m<d&&(r=t.src.charCodeAt(m),Fr(r)||10===r);m++);if(i=t.md.helpers.parseLinkTitle(t.src,m,t.posMax),m<d&&l!==m&&i.ok)for(s=i.str,m=i.pos;m<d&&(r=t.src.charCodeAt(m),Fr(r)||10===r);m++);}(m>=d||41!==t.src.charCodeAt(m))&&(c=!0),m++}if(c){if(void 0===t.env.references)return!1;if(m<d&&91===t.src.charCodeAt(m)?(l=m+1,m=t.md.helpers.parseLinkLabel(t,m),m>=0?o=t.src.slice(l,m++):m=p+1):m=p+1,o||(o=t.src.slice(f,p)),n=t.env.references[Rr(o)],!n)return t.pos=b,!1;a=n.href,s=n.title}if(!e){t.pos=f,t.posMax=p;const e=[["href",a]];t.push("link_open","a",1).attrs=e,s&&e.push(["title",s]),t.linkLevel++,t.md.inline.tokenize(t),t.linkLevel--,t.push("link_close","a",-1)}return t.pos=m,t.posMax=d,!0}],["image",function(t,e){let r,o,i,n,a,s,l,c,b="";const d=t.pos,f=t.posMax;if(33!==t.src.charCodeAt(t.pos))return!1;if(91!==t.src.charCodeAt(t.pos+1))return!1;const p=t.pos+2,m=t.md.helpers.parseLinkLabel(t,t.pos+1,!1);if(m<0)return!1;if(n=m+1,n<f&&40===t.src.charCodeAt(n)){for(n++;n<f&&(r=t.src.charCodeAt(n),Fr(r)||10===r);n++);if(n>=f)return!1;for(c=n,s=t.md.helpers.parseLinkDestination(t.src,n,t.posMax),s.ok&&(b=t.md.normalizeLink(s.str),t.md.validateLink(b)?n=s.pos:b=""),c=n;n<f&&(r=t.src.charCodeAt(n),Fr(r)||10===r);n++);if(s=t.md.helpers.parseLinkTitle(t.src,n,t.posMax),n<f&&c!==n&&s.ok)for(l=s.str,n=s.pos;n<f&&(r=t.src.charCodeAt(n),Fr(r)||10===r);n++);else l="";if(n>=f||41!==t.src.charCodeAt(n))return t.pos=d,!1;n++}else{if(void 0===t.env.references)return!1;if(n<f&&91===t.src.charCodeAt(n)?(c=n+1,n=t.md.helpers.parseLinkLabel(t,n),n>=0?i=t.src.slice(c,n++):n=m+1):n=m+1,i||(i=t.src.slice(p,m)),a=t.env.references[Rr(i)],!a)return t.pos=d,!1;b=a.href,l=a.title}if(!e){o=t.src.slice(p,m);const e=[];t.md.inline.parse(o,t.md,t.env,e);const r=t.push("image","img",0),i=[["src",b],["alt",""]];r.attrs=i,r.children=e,r.content=o,l&&i.push(["title",l])}return t.pos=n,t.posMax=f,!0}],["autolink",function(t,e){let r=t.pos;if(60!==t.src.charCodeAt(r))return!1;const o=t.pos,i=t.posMax;for(;;){if(++r>=i)return!1;const e=t.src.charCodeAt(r);if(60===e)return!1;if(62===e)break}const n=t.src.slice(o+1,r);if(zo.test(n)){const r=t.md.normalizeLink(n);if(!t.md.validateLink(r))return!1;if(!e){const e=t.push("link_open","a",1);e.attrs=[["href",r]],e.markup="autolink",e.info="auto";t.push("text","",0).content=t.md.normalizeLinkText(n);const o=t.push("link_close","a",-1);o.markup="autolink",o.info="auto"}return t.pos+=n.length+2,!0}if(Do.test(n)){const r=t.md.normalizeLink("mailto:"+n);if(!t.md.validateLink(r))return!1;if(!e){const e=t.push("link_open","a",1);e.attrs=[["href",r]],e.markup="autolink",e.info="auto";t.push("text","",0).content=t.md.normalizeLinkText(n);const o=t.push("link_close","a",-1);o.markup="autolink",o.info="auto"}return t.pos+=n.length+2,!0}return!1}],["html_inline",function(t,e){if(!t.md.options.html)return!1;const r=t.posMax,o=t.pos;if(60!==t.src.charCodeAt(o)||o+2>=r)return!1;const i=t.src.charCodeAt(o+1);if(33!==i&&63!==i&&47!==i&&!function(t){const e=32|t;return e>=97&&e<=122}(i))return!1;const n=t.src.slice(o).match(bo);if(!n)return!1;if(!e){const e=t.push("html_inline","",0);e.content=n[0],a=e.content,/^<a[>\s]/i.test(a)&&t.linkLevel++,function(t){return/^<\/a\s*>/i.test(t)}(e.content)&&t.linkLevel--}var a;return t.pos+=n[0].length,!0}],["entity",function(t,e){const r=t.pos,o=t.posMax;if(38!==t.src.charCodeAt(r))return!1;if(r+1>=o)return!1;if(35===t.src.charCodeAt(r+1)){const o=t.src.slice(r).match(Eo);if(o){if(!e){const e="x"===o[1][0].toLowerCase()?parseInt(o[1].slice(1),16):parseInt(o[1],10),r=t.push("text_special","",0);r.content=hr(e)?gr(e):gr(65533),r.markup=o[0],r.info="entity"}return t.pos+=o[0].length,!0}}else{const o=t.src.slice(r).match(Ao);if(o){const r=dr(o[0]);if(r!==o[0]){if(!e){const e=t.push("text_special","",0);e.content=r,e.markup=o[0],e.info="entity"}return t.pos+=o[0].length,!0}}}return!1}]],Po=[["balance_pairs",function(t){const e=t.tokens_meta,r=t.tokens_meta.length;Fo(t.delimiters);for(let t=0;t<r;t++)e[t]&&e[t].delimiters&&Fo(e[t].delimiters)}],["strikethrough",yo.postProcess],["emphasis",jo.postProcess],["fragments_join",function(t){let e,r,o=0;const i=t.tokens,n=t.tokens.length;for(e=r=0;e<n;e++)i[e].nesting<0&&o--,i[e].level=o,i[e].nesting>0&&o++,"text"===i[e].type&&e+1<n&&"text"===i[e+1].type?i[e+1].content=i[e].content+i[e+1].content:(e!==r&&(i[r]=i[e]),r++);e!==r&&(i.length=r)}]];function Oo(){this.ruler=new Nr;for(let t=0;t<qo.length;t++)this.ruler.push(qo[t][0],qo[t][1]);this.ruler2=new Nr;for(let t=0;t<Po.length;t++)this.ruler2.push(Po[t][0],Po[t][1])}function Ro(t){return Array.prototype.slice.call(arguments,1).forEach((function(e){e&&Object.keys(e).forEach((function(r){t[r]=e[r]}))})),t}function So(t){return Object.prototype.toString.call(t)}function Xo(t){return"[object Function]"===So(t)}function Vo(t){return t.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}Oo.prototype.skipToken=function(t){const e=t.pos,r=this.ruler.getRules(""),o=r.length,i=t.md.options.maxNesting,n=t.cache;if(void 0!==n[e])return void(t.pos=n[e]);let a=!1;if(t.level<i){for(let i=0;i<o;i++)if(t.level++,a=r[i](t,!0),t.level--,a){if(e>=t.pos)throw new Error("inline rule didn't increment state.pos");break}}else t.pos=t.posMax;a||t.pos++,n[e]=t.pos},Oo.prototype.tokenize=function(t){const e=this.ruler.getRules(""),r=e.length,o=t.posMax,i=t.md.options.maxNesting;for(;t.pos<o;){const n=t.pos;let a=!1;if(t.level<i)for(let o=0;o<r;o++)if(a=e[o](t,!1),a){if(n>=t.pos)throw new Error("inline rule didn't increment state.pos");break}if(a){if(t.pos>=o)break}else t.pending+=t.src[t.pos++]}t.pending&&t.pushPending()},Oo.prototype.parse=function(t,e,r,o){const i=new this.State(t,e,r,o);this.tokenize(i);const n=this.ruler2.getRules(""),a=n.length;for(let t=0;t<a;t++)n[t](i)},Oo.prototype.State=ho;const Go={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};const Mo={"http:":{validate:function(t,e,r){const o=t.slice(e);return r.re.http||(r.re.http=new RegExp("^\\/\\/"+r.re.src_auth+r.re.src_host_port_strict+r.re.src_path,"i")),r.re.http.test(o)?o.match(r.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(t,e,r){const o=t.slice(e);return r.re.no_http||(r.re.no_http=new RegExp("^"+r.re.src_auth+"(?:localhost|(?:(?:"+r.re.src_domain+")\\.)+"+r.re.src_domain_root+")"+r.re.src_port+r.re.src_host_terminator+r.re.src_path,"i")),r.re.no_http.test(o)?e>=3&&":"===t[e-3]||e>=3&&"/"===t[e-3]?0:o.match(r.re.no_http)[0].length:0}},"mailto:":{validate:function(t,e,r){const o=t.slice(e);return r.re.mailto||(r.re.mailto=new RegExp("^"+r.re.src_email_name+"@"+r.re.src_host_strict,"i")),r.re.mailto.test(o)?o.match(r.re.mailto)[0].length:0}}},No="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function Io(t){const e=t.re=function(t){const e={};t=t||{},e.src_Any=Ze.source,e.src_Cc=He.source,e.src_Z=Je.source,e.src_P=Ke.source,e.src_ZPCc=[e.src_Z,e.src_P,e.src_Cc].join("|"),e.src_ZCc=[e.src_Z,e.src_Cc].join("|");const r="[><｜]";return e.src_pseudo_letter="(?:(?![><｜]|"+e.src_ZPCc+")"+e.src_Any+")",e.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",e.src_auth="(?:(?:(?!"+e.src_ZCc+"|[@/\\[\\]()]).)+@)?",e.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",e.src_host_terminator="(?=$|[><｜]|"+e.src_ZPCc+")(?!"+(t["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+e.src_ZPCc+"))",e.src_path="(?:[/?#](?:(?!"+e.src_ZCc+"|"+r+"|[()[\\]{}.,\"'?!\\-;]).|\\[(?:(?!"+e.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+e.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+e.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+e.src_ZCc+'|["]).)+\\"|\\\'(?:(?!'+e.src_ZCc+"|[']).)+\\'|\\'(?="+e.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+e.src_ZCc+"|[.]|$)|"+(t["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+e.src_ZCc+"|$)|;(?!"+e.src_ZCc+"|$)|\\!+(?!"+e.src_ZCc+"|[!]|$)|\\?(?!"+e.src_ZCc+"|[?]|$))+|\\/)?",e.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',e.src_xn="xn--[a-z0-9\\-]{1,59}",e.src_domain_root="(?:"+e.src_xn+"|"+e.src_pseudo_letter+"{1,63})",e.src_domain="(?:"+e.src_xn+"|(?:"+e.src_pseudo_letter+")|(?:"+e.src_pseudo_letter+"(?:-|"+e.src_pseudo_letter+"){0,61}"+e.src_pseudo_letter+"))",e.src_host="(?:(?:(?:(?:"+e.src_domain+")\\.)*"+e.src_domain+"))",e.tpl_host_fuzzy="(?:"+e.src_ip4+"|(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%)))",e.tpl_host_no_ip_fuzzy="(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%))",e.src_host_strict=e.src_host+e.src_host_terminator,e.tpl_host_fuzzy_strict=e.tpl_host_fuzzy+e.src_host_terminator,e.src_host_port_strict=e.src_host+e.src_port+e.src_host_terminator,e.tpl_host_port_fuzzy_strict=e.tpl_host_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_port_no_ip_fuzzy_strict=e.tpl_host_no_ip_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+e.src_ZPCc+"|>|$))",e.tpl_email_fuzzy='(^|[><｜]|"|\\(|'+e.src_ZCc+")("+e.src_email_name+"@"+e.tpl_host_fuzzy_strict+")",e.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_fuzzy_strict+e.src_path+")",e.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_no_ip_fuzzy_strict+e.src_path+")",e}(t.X),r=t.V.slice();function o(t){return t.replace("%TLDS%",e.src_tlds)}t.onCompile(),t.G||r.push("a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]"),r.push(e.src_xn),e.src_tlds=r.join("|"),e.email_fuzzy=RegExp(o(e.tpl_email_fuzzy),"i"),e.link_fuzzy=RegExp(o(e.tpl_link_fuzzy),"i"),e.link_no_ip_fuzzy=RegExp(o(e.tpl_link_no_ip_fuzzy),"i"),e.host_fuzzy_test=RegExp(o(e.tpl_host_fuzzy_test),"i");const i=[];function n(t,e){throw new Error('(LinkifyIt) Invalid schema "'+t+'": '+e)}t.M={},Object.keys(t.N).forEach((function(e){const r=t.N[e];if(null===r)return;const o={validate:null,link:null};if(t.M[e]=o,"[object Object]"===So(r))return!function(t){return"[object RegExp]"===So(t)}(r.validate)?Xo(r.validate)?o.validate=r.validate:n(e,r):o.validate=function(t){return function(e,r){const o=e.slice(r);return t.test(o)?o.match(t)[0].length:0}}(r.validate),void(Xo(r.normalize)?o.normalize=r.normalize:r.normalize?n(e,r):o.normalize=function(t,e){e.normalize(t)});!function(t){return"[object String]"===So(t)}(r)?n(e,r):i.push(e)})),i.forEach((function(e){t.M[t.N[e]]&&(t.M[e].validate=t.M[t.N[e]].validate,t.M[e].normalize=t.M[t.N[e]].normalize)})),t.M[""]={validate:null,normalize:function(t,e){e.normalize(t)}};const a=Object.keys(t.M).filter((function(e){return e.length>0&&t.M[e]})).map(Vo).join("|");t.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+a+")","i"),t.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+a+")","ig"),t.re.schema_at_start=RegExp("^"+t.re.schema_search.source,"i"),t.re.pretest=RegExp("("+t.re.schema_test.source+")|("+t.re.host_fuzzy_test.source+")|@","i"),function(t){t.L=-1,t.W=""}(t)}function Bo(t,e){const r=t.L,o=t.H,i=t.W.slice(r,o);this.schema=t.K.toLowerCase(),this.index=r+e,this.lastIndex=o+e,this.raw=i,this.text=i,this.url=i}function Co(t,e){const r=new Bo(t,e);return t.M[r.schema].normalize(r,t),r}function Lo(t,e){if(!(this instanceof Lo))return new Lo(t,e);var r;e||(r=t,Object.keys(r||{}).reduce((function(t,e){return t||Go.hasOwnProperty(e)}),!1)&&(e=t,t={})),this.X=Ro({},Go,e),this.L=-1,this.H=-1,this.K="",this.W="",this.N=Ro({},Mo,t),this.M={},this.V=No,this.G=!1,this.re={},Io(this)}Lo.prototype.add=function(t,e){return this.N[t]=e,Io(this),this},Lo.prototype.set=function(t){return this.X=Ro(this.X,t),this},Lo.prototype.test=function(t){if(this.W=t,this.L=-1,!t.length)return!1;let e,r,o,i,n,a,s,l,c;if(this.re.schema_test.test(t))for(s=this.re.schema_search,s.lastIndex=0;null!==(e=s.exec(t));)if(i=this.testSchemaAt(t,e[2],s.lastIndex),i){this.K=e[2],this.L=e.index+e[1].length,this.H=e.index+e[0].length+i;break}return this.X.fuzzyLink&&this.M["http:"]&&(l=t.search(this.re.host_fuzzy_test),l>=0&&(this.L<0||l<this.L)&&null!==(r=t.match(this.X.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))&&(n=r.index+r[1].length,(this.L<0||n<this.L)&&(this.K="",this.L=n,this.H=r.index+r[0].length))),this.X.fuzzyEmail&&this.M["mailto:"]&&(c=t.indexOf("@"),c>=0&&null!==(o=t.match(this.re.email_fuzzy))&&(n=o.index+o[1].length,a=o.index+o[0].length,(this.L<0||n<this.L||n===this.L&&a>this.H)&&(this.K="mailto:",this.L=n,this.H=a))),this.L>=0},Lo.prototype.pretest=function(t){return this.re.pretest.test(t)},Lo.prototype.testSchemaAt=function(t,e,r){return this.M[e.toLowerCase()]?this.M[e.toLowerCase()].validate(t,r,this):0},Lo.prototype.match=function(t){const e=[];let r=0;this.L>=0&&this.W===t&&(e.push(Co(this,r)),r=this.H);let o=r?t.slice(r):t;for(;this.test(o);)e.push(Co(this,r)),o=o.slice(this.H),r+=this.H;return e.length?e:null},Lo.prototype.matchAtStart=function(t){if(this.W=t,this.L=-1,!t.length)return null;const e=this.re.schema_at_start.exec(t);if(!e)return null;const r=this.testSchemaAt(t,e[2],e[0].length);return r?(this.K=e[2],this.L=e.index+e[1].length,this.H=e.index+e[0].length+r,Co(this,0)):null},Lo.prototype.tlds=function(t,e){return t=Array.isArray(t)?t:[t],e?(this.V=this.V.concat(t).sort().filter((function(t,e,r){return t!==r[e-1]})).reverse(),Io(this),this):(this.V=t.slice(),this.G=!0,Io(this),this)},Lo.prototype.normalize=function(t){t.schema||(t.url="http://"+t.url),"mailto:"!==t.schema||/^mailto:/i.test(t.url)||(t.url="mailto:"+t.url)},Lo.prototype.onCompile=function(){};const Wo=2147483647,Zo=36,Ho=/^xn--/,Ko=/[^\0-\x7F]/,To=/[\x2E\u3002\uFF0E\uFF61]/g,Jo={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},Uo=Math.floor,Yo=String.fromCharCode;function Qo(t){throw new RangeError(Jo[t])}function $o(t,e){const r=t.split("@");let o="";r.length>1&&(o=r[0]+"@",t=r[1]);const i=function(t,e){const r=[];let o=t.length;for(;o--;)r[o]=e(t[o]);return r}((t=t.replace(To,".")).split("."),e).join(".");return o+i}function _o(t){const e=[];let r=0;const o=t.length;for(;r<o;){const i=t.charCodeAt(r++);if(i>=55296&&i<=56319&&r<o){const o=t.charCodeAt(r++);56320==(64512&o)?e.push(((1023&i)<<10)+(1023&o)+65536):(e.push(i),r--)}else e.push(i)}return e}const ti=function(t,e){return t+22+75*(t<26)-((0!=e)<<5)},ei=function(t,e,r){let o=0;for(t=r?Uo(t/700):t>>1,t+=Uo(t/e);t>455;o+=Zo)t=Uo(t/35);return Uo(o+36*t/(t+38))},ri=function(t){const e=[],r=t.length;let o=0,i=128,n=72,a=t.lastIndexOf("-");a<0&&(a=0);for(let r=0;r<a;++r)t.charCodeAt(r)>=128&&Qo("not-basic"),e.push(t.charCodeAt(r));for(let l=a>0?a+1:0;l<r;){const a=o;for(let e=1,i=Zo;;i+=Zo){l>=r&&Qo("invalid-input");const a=(s=t.charCodeAt(l++))>=48&&s<58?s-48+26:s>=65&&s<91?s-65:s>=97&&s<123?s-97:Zo;a>=Zo&&Qo("invalid-input"),a>Uo((Wo-o)/e)&&Qo("overflow"),o+=a*e;const c=i<=n?1:i>=n+26?26:i-n;if(a<c)break;const b=Zo-c;e>Uo(Wo/b)&&Qo("overflow"),e*=b}const c=e.length+1;n=ei(o-a,c,0==a),Uo(o/c)>Wo-i&&Qo("overflow"),i+=Uo(o/c),o%=c,e.splice(o++,0,i)}var s;return String.fromCodePoint(...e)},oi=function(t){const e=[],r=(t=_o(t)).length;let o=128,i=0,n=72;for(const r of t)r<128&&e.push(Yo(r));const a=e.length;let s=a;for(a&&e.push("-");s<r;){let r=Wo;for(const e of t)e>=o&&e<r&&(r=e);const l=s+1;r-o>Uo((Wo-i)/l)&&Qo("overflow"),i+=(r-o)*l,o=r;for(const r of t)if(r<o&&++i>Wo&&Qo("overflow"),r===o){let t=i;for(let r=Zo;;r+=Zo){const o=r<=n?1:r>=n+26?26:r-n;if(t<o)break;const i=t-o,a=Zo-o;e.push(Yo(ti(o+i%a,0))),t=Uo(i/a)}e.push(Yo(ti(t,0))),n=ei(i,l,s===a),i=0,++s}++i,++o}return e.join("")},ii=function(t){return $o(t,(function(t){return Ko.test(t)?"xn--"+oi(t):t}))},ni=function(t){return $o(t,(function(t){return Ho.test(t)?ri(t.slice(4).toLowerCase()):t}))};const ai={default:{options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},zero:{options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},commonmark:{options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}}},si=/^(vbscript|javascript|file|data):/,li=/^data:image\/(gif|png|jpeg|webp);/;function ci(t){const e=t.trim().toLowerCase();return!si.test(e)||li.test(e)}const bi=["http:","https:","mailto:"];function di(t){const e=Ce(t,!0);if(e.hostname&&(!e.protocol||bi.indexOf(e.protocol)>=0))try{e.hostname=ii(e.hostname)}catch(t){}return Ae(Fe(e))}function fi(t){const e=Ce(t,!0);if(e.hostname&&(!e.protocol||bi.indexOf(e.protocol)>=0))try{e.hostname=ni(e.hostname)}catch(t){}return ze(Fe(e),ze.defaultChars+"%")}function pi(t,e){if(!(this instanceof pi))return new pi(t,e);e||fr(t)||(e=t||{},t="default"),this.inline=new Oo,this.block=new uo,this.core=new ro,this.renderer=new Mr,this.linkify=new Lo,this.validateLink=ci,this.normalizeLink=di,this.normalizeLinkText=fi,this.utils=Xr,this.helpers=mr({},Vr),this.options={},this.configure(t),e&&this.set(e)}pi.prototype.set=function(t){return mr(this.options,t),this},pi.prototype.configure=function(t){const e=this;if(fr(t)){const e=t;if(!(t=ai[e]))throw new Error('Wrong `markdown-it` preset "'+e+'", check name')}if(!t)throw new Error("Wrong `markdown-it` preset, can't be empty");return t.options&&e.set(t.options),t.components&&Object.keys(t.components).forEach((function(r){t.components[r].rules&&e[r].ruler.enableOnly(t.components[r].rules),t.components[r].rules2&&e[r].ruler2.enableOnly(t.components[r].rules2)})),this},pi.prototype.enable=function(t,e){let r=[];Array.isArray(t)||(t=[t]),["core","block","inline"].forEach((function(e){r=r.concat(this[e].ruler.enable(t,!0))}),this),r=r.concat(this.inline.ruler2.enable(t,!0));const o=t.filter((function(t){return r.indexOf(t)<0}));if(o.length&&!e)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+o);return this},pi.prototype.disable=function(t,e){let r=[];Array.isArray(t)||(t=[t]),["core","block","inline"].forEach((function(e){r=r.concat(this[e].ruler.disable(t,!0))}),this),r=r.concat(this.inline.ruler2.disable(t,!0));const o=t.filter((function(t){return r.indexOf(t)<0}));if(o.length&&!e)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+o);return this},pi.prototype.use=function(t){const e=[this].concat(Array.prototype.slice.call(arguments,1));return t.apply(t,e),this},pi.prototype.parse=function(t,e){if("string"!=typeof t)throw new Error("Input data should be a String");const r=new this.core.State(t,this,e);return this.core.process(r),r.tokens},pi.prototype.render=function(t,e){return e=e||{},this.renderer.render(this.parse(t,e),this.options,e)},pi.prototype.parseInline=function(t,e){const r=new this.core.State(t,this,e);return r.inlineMode=!0,this.core.process(r),r.tokens},pi.prototype.renderInline=function(t,e){return e=e||{},this.renderer.render(this.parseInline(t,e),this.options,e)};const mi=new pi({html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!0,typographer:!0,quotes:"\"\"''",highlight:function(t,e){return""}});!function(t,e,r,o){const i=t.renderer.rules.table_open||function(t,e,r,o,i){return i.renderToken(t,e,r)};t.renderer.rules[`${e}_open`]=(t,e,n,a,s)=>{const l=t[e],c=l.attrIndex(r);return c<0?l.attrPush([r,o]):l.attrs&&(l.attrs[c][1]+=` ${o}`),i(t,e,n,a,s)}}(mi,"table","class","table table-striped table-responsive"),function(t,e,r){const o=t.renderer.rules.image||function(t,e,r,o,i){return i.renderToken(t,e,r)};t.renderer.rules.image=function(t,i,n,a,s){const l=t[i];return l.attrGet("width")||l.attrSet("width",`${e}`),l.attrGet("height")||l.attrSet("height",`${r}`),o(t,i,n,a,s)}}(mi,100,100);let ui=class extends Bt{markdown="";static styles=[...super.styles,l`
            blockquote {
                padding: 10px 20px;
                margin: 0 0 20px;
                font-size: 17.5px;
                border-left: 5px solid #eee;
            }
            pre {
                display: block;
                padding: 9.5px;
                margin: 0 0 10px;
                font-size: 13px;
                line-height: 1.42857143;
                color: #333;
                word-break: break-all;
                word-wrap: break-word;
                background-color: #f5f5f5;
                border: 1px solid #ccc;
                border-radius: 4px;
            }
            pre code {
                padding: 0;
                font-size: inherit;
                color: inherit;
                white-space: pre-wrap;
                background-color: transparent;
                border-radius: 0;
            }
            code {
                padding: 2px 4px;
                font-size: 90%;
                color: #c7254e;
                background-color: #f9f2f4;
                border-radius: 4px;
            }
            h1,h2,h3,h4,h5,h6 {
                text-decoration: underline;
            }
        `];render(){const t=mi.render(this.markdown);return U`<div>
            ${je(t)}
        </div>`}};t([A({attribute:"markdown",type:String,reflect:!0}),e("design:type",String)],ui.prototype,"markdown",void 0),ui=t([r("markdown-it")],ui);let hi=class extends Zt{renderInput(){return U``}renderField(){return U`
            <div class="form-group row"><markdown-it .markdown="${this.value}"></markdown-it></div>
        `}convertToInput(t){return t}convertToValue(t){return"string"!=typeof t?"":t}};hi=t([r("fz-markdown")],hi);let gi=class extends Zt{renderInput(){return U`<div class="input-group" >${this.value}</div>`}convertToInput(t){return null==t||""==t?null:t}convertToValue(t){return St(t)?this.empty:t}connectedCallback(){super.connectedCallback(),null==this.value&&(this.value=we())}};gi=t([r("fz-uuid")],gi);let vi=class extends Ht{renderEnum(){return U`
            <div class="dropdown">
                <input  
                    id="query"
                    class="form-control" 
                    type="text" 
                    autocomplete="off"
                    placeholder=${this.label}
                    ?readonly=${this.readonly}
                    ?required=${this.required}
                    @input=${this.change}
                    @keypress=${this.change}
                    @focus=${this.openList}
                />
                <div id="list" class="dropdown-menu w-100">
                    ${0==this.enums?.length?U`<a class="dropdown-item disabled"  style="font-style: italic">No match...</a>`:""}
                    ${this.showNullChoice?U`<a class="dropdown-item" @click="${()=>this.select({label:"<vide>",value:this.empty})}" >&lt;empty&gt;</a>`:""}
                    ${this.enums?.map((t=>U`<a class="dropdown-item" @click="${()=>this.select(t)}" >${this.boldPrefix(t.label)}</a>`))}
                </div>
            </div>`}get query(){return this.queryElem?this.queryElem.value:""}boldPrefix(t){if(null==this.query||0==this.query.length)return t;const e=t.split(new RegExp(this.query,"i")).join(`<b>${this.query}</b>`);return je(e)}async firstUpdated(t){const e=this.enums?.find((t=>this.value===t.value));this.queryElem.value=e?e.label:"",super.firstUpdated(t)}change(){this.requestUpdate()}openList(){this.listElem.style.setProperty("display","block"),this.queryElem.select()}closeList(){this.listElem.style.setProperty("display","none")}select(t){this.queryElem.value=t.label,this.value=this.convertToValue(t.value),this.closeList(),this.requestUpdate()}evalEnums(){super.evalEnums();const t=this.query.toUpperCase();this.enums=this.enums?.filter((e=>e.label.toUpperCase().includes(t))).slice(0,10)??[]}};t([q("#query"),e("design:type",HTMLInputElement)],vi.prototype,"queryElem",void 0),t([q("#list"),e("design:type",HTMLElement)],vi.prototype,"listElem",void 0),vi=t([r("fz-enum-typeahead")],vi);var wi={$schema:"http://json-schema.org/draft-07/schema#",$id:"http://json-schema.org/draft-07/schema-3s#",title:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},type:["object","boolean"],properties:{$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},$comment:{type:"string"},title:{type:"string"},description:{type:"string"},default:!0,readOnly:{type:"boolean",default:!1},examples:{type:"array",items:!0},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:!0},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},propertyNames:{format:"regex"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:!0,enum:{type:"array",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},contentMediaType:{type:"string"},contentEncoding:{type:"string"},if:{$ref:"#"},then:{$ref:"#"},else:{$ref:"#"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},default:!0};function xi(t){return t&&t.J&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var yi,ki={exports:{}},ji={},Di={},zi={},Ei={},Ai={},Fi={};function qi(){return yi||(yi=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.regexpCode=t.getEsmExportName=t.getProperty=t.safeStringify=t.stringify=t.strConcat=t.addCodeArg=t.str=t._=t.nil=t._Code=t.Name=t.IDENTIFIER=t._CodeOrName=void 0;class e{}t._CodeOrName=e,t.IDENTIFIER=/^[a-z$_][a-z$_0-9]*$/i;class r extends e{constructor(e){if(super(),!t.IDENTIFIER.test(e))throw new Error("CodeGen: name must be a valid identifier");this.str=e}toString(){return this.str}emptyStr(){return!1}get names(){return{[this.str]:1}}}t.Name=r;class o extends e{constructor(t){super(),this._items="string"==typeof t?[t]:t}toString(){return this.str}emptyStr(){if(this._items.length>1)return!1;const t=this._items[0];return""===t||'""'===t}get str(){var t;return null!==(t=this._str)&&void 0!==t?t:this._str=this._items.reduce(((t,e)=>`${t}${e}`),"")}get names(){var t;return null!==(t=this._names)&&void 0!==t?t:this._names=this._items.reduce(((t,e)=>(e instanceof r&&(t[e.str]=(t[e.str]||0)+1),t)),{})}}function i(t,...e){const r=[t[0]];let i=0;for(;i<e.length;)s(r,e[i]),r.push(t[++i]);return new o(r)}t._Code=o,t.nil=new o(""),t._=i;const n=new o("+");function a(t,...e){const r=[c(t[0])];let i=0;for(;i<e.length;)r.push(n),s(r,e[i]),r.push(n,c(t[++i]));return function(t){let e=1;for(;e<t.length-1;){if(t[e]===n){const r=l(t[e-1],t[e+1]);if(void 0!==r){t.splice(e-1,3,r);continue}t[e++]="+"}e++}}(r),new o(r)}function s(t,e){e instanceof o?t.push(...e._items):e instanceof r?t.push(e):t.push(function(t){return"number"==typeof t||"boolean"==typeof t||null===t?t:c(Array.isArray(t)?t.join(","):t)}(e))}function l(t,e){if('""'===e)return t;if('""'===t)return e;if("string"==typeof t){if(e instanceof r||'"'!==t[t.length-1])return;return"string"!=typeof e?`${t.slice(0,-1)}${e}"`:'"'===e[0]?t.slice(0,-1)+e.slice(1):void 0}return"string"!=typeof e||'"'!==e[0]||t instanceof r?void 0:`"${t}${e.slice(1)}`}function c(t){return JSON.stringify(t).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}t.str=a,t.addCodeArg=s,t.strConcat=function(t,e){return e.emptyStr()?t:t.emptyStr()?e:a`${t}${e}`},t.stringify=function(t){return new o(c(t))},t.safeStringify=c,t.getProperty=function(e){return"string"==typeof e&&t.IDENTIFIER.test(e)?new o(`.${e}`):i`[${e}]`},t.getEsmExportName=function(e){if("string"==typeof e&&t.IDENTIFIER.test(e))return new o(`${e}`);throw new Error(`CodeGen: invalid export name: ${e}, use explicit $id name mapping`)},t.regexpCode=function(t){return new o(t.toString())}}(Fi)),Fi}var Pi,Oi,Ri={};function Si(){return Pi||(Pi=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.ValueScope=t.ValueScopeName=t.Scope=t.varKinds=t.UsedValueState=void 0;const e=qi();class r extends Error{constructor(t){super(`CodeGen: "code" for ${t} not defined`),this.value=t.value}}var o;!function(t){t[t.Started=0]="Started",t[t.Completed=1]="Completed"}(o||(t.UsedValueState=o={})),t.varKinds={const:new e.Name("const"),let:new e.Name("let"),var:new e.Name("var")};class i{constructor({prefixes:t,parent:e}={}){this._names={},this._prefixes=t,this._parent=e}toName(t){return t instanceof e.Name?t:this.name(t)}name(t){return new e.Name(this._newName(t))}_newName(t){return`${t}${(this._names[t]||this._nameGroup(t)).index++}`}_nameGroup(t){var e,r;if((null===(r=null===(e=this._parent)||void 0===e?void 0:e._prefixes)||void 0===r?void 0:r.has(t))||this._prefixes&&!this._prefixes.has(t))throw new Error(`CodeGen: prefix "${t}" is not allowed in this scope`);return this._names[t]={prefix:t,index:0}}}t.Scope=i;class n extends e.Name{constructor(t,e){super(e),this.prefix=t}setValue(t,{property:r,itemIndex:o}){this.value=t,this.scopePath=e._`.${new e.Name(r)}[${o}]`}}t.ValueScopeName=n;const a=e._`\n`;t.ValueScope=class extends i{constructor(t){super(t),this._values={},this._scope=t.scope,this.opts={...t,_n:t.lines?a:e.nil}}get(){return this._scope}name(t){return new n(t,this._newName(t))}value(t,e){var r;if(void 0===e.ref)throw new Error("CodeGen: ref must be passed in value");const o=this.toName(t),{prefix:i}=o,n=null!==(r=e.key)&&void 0!==r?r:e.ref;let a=this._values[i];if(a){const t=a.get(n);if(t)return t}else a=this._values[i]=new Map;a.set(n,o);const s=this._scope[i]||(this._scope[i]=[]),l=s.length;return s[l]=e.ref,o.setValue(e,{property:i,itemIndex:l}),o}getValue(t,e){const r=this._values[t];if(r)return r.get(e)}scopeRefs(t,r=this._values){return this._reduceValues(r,(r=>{if(void 0===r.scopePath)throw new Error(`CodeGen: name "${r}" has no value`);return e._`${t}${r.scopePath}`}))}scopeCode(t=this._values,e,r){return this._reduceValues(t,(t=>{if(void 0===t.value)throw new Error(`CodeGen: name "${t}" has no value`);return t.value.code}),e,r)}_reduceValues(i,n,a={},s){let l=e.nil;for(const c in i){const b=i[c];if(!b)continue;const d=a[c]=a[c]||new Map;b.forEach((i=>{if(d.has(i))return;d.set(i,o.Started);let a=n(i);if(a){const r=this.opts.es5?t.varKinds.var:t.varKinds.const;l=e._`${l}${r} ${i} = ${a};${this.opts._n}`}else{if(!(a=null==s?void 0:s(i)))throw new r(i);l=e._`${l}${a}${this.opts._n}`}d.set(i,o.Completed)}))}return l}}}(Ri)),Ri}function Xi(){return Oi||(Oi=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.or=t.and=t.not=t.CodeGen=t.operators=t.varKinds=t.ValueScopeName=t.ValueScope=t.Scope=t.Name=t.regexpCode=t.stringify=t.getProperty=t.nil=t.strConcat=t.str=t._=void 0;const e=qi(),r=Si();var o=qi();Object.defineProperty(t,"_",{enumerable:!0,get:function(){return o._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return o.str}}),Object.defineProperty(t,"strConcat",{enumerable:!0,get:function(){return o.strConcat}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return o.nil}}),Object.defineProperty(t,"getProperty",{enumerable:!0,get:function(){return o.getProperty}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return o.stringify}}),Object.defineProperty(t,"regexpCode",{enumerable:!0,get:function(){return o.regexpCode}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return o.Name}});var i=Si();Object.defineProperty(t,"Scope",{enumerable:!0,get:function(){return i.Scope}}),Object.defineProperty(t,"ValueScope",{enumerable:!0,get:function(){return i.ValueScope}}),Object.defineProperty(t,"ValueScopeName",{enumerable:!0,get:function(){return i.ValueScopeName}}),Object.defineProperty(t,"varKinds",{enumerable:!0,get:function(){return i.varKinds}}),t.operators={GT:new e._Code(">"),GTE:new e._Code(">="),LT:new e._Code("<"),LTE:new e._Code("<="),EQ:new e._Code("==="),NEQ:new e._Code("!=="),NOT:new e._Code("!"),OR:new e._Code("||"),AND:new e._Code("&&"),ADD:new e._Code("+")};class n{optimizeNodes(){return this}optimizeNames(t,e){return this}}class a extends n{constructor(t,e,r){super(),this.varKind=t,this.name=e,this.rhs=r}render({es5:t,_n:e}){const o=t?r.varKinds.var:this.varKind,i=void 0===this.rhs?"":` = ${this.rhs}`;return`${o} ${this.name}${i};`+e}optimizeNames(t,e){if(t[this.name.str])return this.rhs&&(this.rhs=q(this.rhs,t,e)),this}get names(){return this.rhs instanceof e._CodeOrName?this.rhs.names:{}}}class s extends n{constructor(t,e,r){super(),this.lhs=t,this.rhs=e,this.sideEffects=r}render({_n:t}){return`${this.lhs} = ${this.rhs};`+t}optimizeNames(t,r){if(!(this.lhs instanceof e.Name)||t[this.lhs.str]||this.sideEffects)return this.rhs=q(this.rhs,t,r),this}get names(){return F(this.lhs instanceof e.Name?{}:{...this.lhs.names},this.rhs)}}class l extends s{constructor(t,e,r,o){super(t,r,o),this.op=e}render({_n:t}){return`${this.lhs} ${this.op}= ${this.rhs};`+t}}class c extends n{constructor(t){super(),this.label=t,this.names={}}render({_n:t}){return`${this.label}:`+t}}class b extends n{constructor(t){super(),this.label=t,this.names={}}render({_n:t}){return`break${this.label?` ${this.label}`:""};`+t}}class d extends n{constructor(t){super(),this.error=t}render({_n:t}){return`throw ${this.error};`+t}get names(){return this.error.names}}class f extends n{constructor(t){super(),this.code=t}render({_n:t}){return`${this.code};`+t}optimizeNodes(){return`${this.code}`?this:void 0}optimizeNames(t,e){return this.code=q(this.code,t,e),this}get names(){return this.code instanceof e._CodeOrName?this.code.names:{}}}class p extends n{constructor(t=[]){super(),this.nodes=t}render(t){return this.nodes.reduce(((e,r)=>e+r.render(t)),"")}optimizeNodes(){const{nodes:t}=this;let e=t.length;for(;e--;){const r=t[e].optimizeNodes();Array.isArray(r)?t.splice(e,1,...r):r?t[e]=r:t.splice(e,1)}return t.length>0?this:void 0}optimizeNames(t,e){const{nodes:r}=this;let o=r.length;for(;o--;){const i=r[o];i.optimizeNames(t,e)||(P(t,i.names),r.splice(o,1))}return r.length>0?this:void 0}get names(){return this.nodes.reduce(((t,e)=>A(t,e.names)),{})}}class m extends p{render(t){return"{"+t._n+super.render(t)+"}"+t._n}}class u extends p{}class h extends m{}h.kind="else";class g extends m{constructor(t,e){super(e),this.condition=t}render(t){let e=`if(${this.condition})`+super.render(t);return this.else&&(e+="else "+this.else.render(t)),e}optimizeNodes(){super.optimizeNodes();const t=this.condition;if(!0===t)return this.nodes;let e=this.else;if(e){const t=e.optimizeNodes();e=this.else=Array.isArray(t)?new h(t):t}return e?!1===t?e instanceof g?e:e.nodes:this.nodes.length?this:new g(O(t),e instanceof g?[e]:e.nodes):!1!==t&&this.nodes.length?this:void 0}optimizeNames(t,e){var r;if(this.else=null===(r=this.else)||void 0===r?void 0:r.optimizeNames(t,e),super.optimizeNames(t,e)||this.else)return this.condition=q(this.condition,t,e),this}get names(){const t=super.names;return F(t,this.condition),this.else&&A(t,this.else.names),t}}g.kind="if";class v extends m{}v.kind="for";class w extends v{constructor(t){super(),this.iteration=t}render(t){return`for(${this.iteration})`+super.render(t)}optimizeNames(t,e){if(super.optimizeNames(t,e))return this.iteration=q(this.iteration,t,e),this}get names(){return A(super.names,this.iteration.names)}}class x extends v{constructor(t,e,r,o){super(),this.varKind=t,this.name=e,this.from=r,this.to=o}render(t){const e=t.es5?r.varKinds.var:this.varKind,{name:o,from:i,to:n}=this;return`for(${e} ${o}=${i}; ${o}<${n}; ${o}++)`+super.render(t)}get names(){const t=F(super.names,this.from);return F(t,this.to)}}class y extends v{constructor(t,e,r,o){super(),this.loop=t,this.varKind=e,this.name=r,this.iterable=o}render(t){return`for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})`+super.render(t)}optimizeNames(t,e){if(super.optimizeNames(t,e))return this.iterable=q(this.iterable,t,e),this}get names(){return A(super.names,this.iterable.names)}}class k extends m{constructor(t,e,r){super(),this.name=t,this.args=e,this.async=r}render(t){return`${this.async?"async ":""}function ${this.name}(${this.args})`+super.render(t)}}k.kind="func";class j extends p{render(t){return"return "+super.render(t)}}j.kind="return";class D extends m{render(t){let e="try"+super.render(t);return this.catch&&(e+=this.catch.render(t)),this.finally&&(e+=this.finally.render(t)),e}optimizeNodes(){var t,e;return super.optimizeNodes(),null===(t=this.catch)||void 0===t||t.optimizeNodes(),null===(e=this.finally)||void 0===e||e.optimizeNodes(),this}optimizeNames(t,e){var r,o;return super.optimizeNames(t,e),null===(r=this.catch)||void 0===r||r.optimizeNames(t,e),null===(o=this.finally)||void 0===o||o.optimizeNames(t,e),this}get names(){const t=super.names;return this.catch&&A(t,this.catch.names),this.finally&&A(t,this.finally.names),t}}class z extends m{constructor(t){super(),this.error=t}render(t){return`catch(${this.error})`+super.render(t)}}z.kind="catch";class E extends m{render(t){return"finally"+super.render(t)}}E.kind="finally";function A(t,e){for(const r in e)t[r]=(t[r]||0)+(e[r]||0);return t}function F(t,r){return r instanceof e._CodeOrName?A(t,r.names):t}function q(t,r,o){return t instanceof e.Name?i(t):function(t){return t instanceof e._Code&&t._items.some((t=>t instanceof e.Name&&1===r[t.str]&&void 0!==o[t.str]))}(t)?new e._Code(t._items.reduce(((t,r)=>(r instanceof e.Name&&(r=i(r)),r instanceof e._Code?t.push(...r._items):t.push(r),t)),[])):t;function i(t){const e=o[t.str];return void 0===e||1!==r[t.str]?t:(delete r[t.str],e)}}function P(t,e){for(const r in e)t[r]=(t[r]||0)-(e[r]||0)}function O(t){return"boolean"==typeof t||"number"==typeof t||null===t?!t:e._`!${V(t)}`}t.CodeGen=class{constructor(t,e={}){this._values={},this._blockStarts=[],this._constants={},this.opts={...e,_n:e.lines?"\n":""},this._extScope=t,this._scope=new r.Scope({parent:t}),this._nodes=[new u]}toString(){return this._root.render(this.opts)}name(t){return this._scope.name(t)}scopeName(t){return this._extScope.name(t)}scopeValue(t,e){const r=this._extScope.value(t,e);return(this._values[r.prefix]||(this._values[r.prefix]=new Set)).add(r),r}getScopeValue(t,e){return this._extScope.getValue(t,e)}scopeRefs(t){return this._extScope.scopeRefs(t,this._values)}scopeCode(){return this._extScope.scopeCode(this._values)}_def(t,e,r,o){const i=this._scope.toName(e);return void 0!==r&&o&&(this._constants[i.str]=r),this._leafNode(new a(t,i,r)),i}const(t,e,o){return this._def(r.varKinds.const,t,e,o)}let(t,e,o){return this._def(r.varKinds.let,t,e,o)}var(t,e,o){return this._def(r.varKinds.var,t,e,o)}assign(t,e,r){return this._leafNode(new s(t,e,r))}add(e,r){return this._leafNode(new l(e,t.operators.ADD,r))}code(t){return"function"==typeof t?t():t!==e.nil&&this._leafNode(new f(t)),this}object(...t){const r=["{"];for(const[o,i]of t)r.length>1&&r.push(","),r.push(o),(o!==i||this.opts.es5)&&(r.push(":"),(0,e.addCodeArg)(r,i));return r.push("}"),new e._Code(r)}if(t,e,r){if(this._blockNode(new g(t)),e&&r)this.code(e).else().code(r).endIf();else if(e)this.code(e).endIf();else if(r)throw new Error('CodeGen: "else" body without "then" body');return this}elseIf(t){return this._elseNode(new g(t))}else(){return this._elseNode(new h)}endIf(){return this._endBlockNode(g,h)}_for(t,e){return this._blockNode(t),e&&this.code(e).endFor(),this}for(t,e){return this._for(new w(t),e)}forRange(t,e,o,i,n=(this.opts.es5?r.varKinds.var:r.varKinds.let)){const a=this._scope.toName(t);return this._for(new x(n,a,e,o),(()=>i(a)))}forOf(t,o,i,n=r.varKinds.const){const a=this._scope.toName(t);if(this.opts.es5){const t=o instanceof e.Name?o:this.var("_arr",o);return this.forRange("_i",0,e._`${t}.length`,(r=>{this.var(a,e._`${t}[${r}]`),i(a)}))}return this._for(new y("of",n,a,o),(()=>i(a)))}forIn(t,o,i,n=(this.opts.es5?r.varKinds.var:r.varKinds.const)){if(this.opts.ownProperties)return this.forOf(t,e._`Object.keys(${o})`,i);const a=this._scope.toName(t);return this._for(new y("in",n,a,o),(()=>i(a)))}endFor(){return this._endBlockNode(v)}label(t){return this._leafNode(new c(t))}break(t){return this._leafNode(new b(t))}return(t){const e=new j;if(this._blockNode(e),this.code(t),1!==e.nodes.length)throw new Error('CodeGen: "return" should have one node');return this._endBlockNode(j)}try(t,e,r){if(!e&&!r)throw new Error('CodeGen: "try" without "catch" and "finally"');const o=new D;if(this._blockNode(o),this.code(t),e){const t=this.name("e");this._currNode=o.catch=new z(t),e(t)}return r&&(this._currNode=o.finally=new E,this.code(r)),this._endBlockNode(z,E)}throw(t){return this._leafNode(new d(t))}block(t,e){return this._blockStarts.push(this._nodes.length),t&&this.code(t).endBlock(e),this}endBlock(t){const e=this._blockStarts.pop();if(void 0===e)throw new Error("CodeGen: not in self-balancing block");const r=this._nodes.length-e;if(r<0||void 0!==t&&r!==t)throw new Error(`CodeGen: wrong number of nodes: ${r} vs ${t} expected`);return this._nodes.length=e,this}func(t,r=e.nil,o,i){return this._blockNode(new k(t,r,o)),i&&this.code(i).endFunc(),this}endFunc(){return this._endBlockNode(k)}optimize(t=1){for(;t-- >0;)this._root.optimizeNodes(),this._root.optimizeNames(this._root.names,this._constants)}_leafNode(t){return this._currNode.nodes.push(t),this}_blockNode(t){this._currNode.nodes.push(t),this._nodes.push(t)}_endBlockNode(t,e){const r=this._currNode;if(r instanceof t||e&&r instanceof e)return this._nodes.pop(),this;throw new Error(`CodeGen: not in block "${e?`${t.kind}/${e.kind}`:t.kind}"`)}_elseNode(t){const e=this._currNode;if(!(e instanceof g))throw new Error('CodeGen: "else" without "if"');return this._currNode=e.else=t,this}get _root(){return this._nodes[0]}get _currNode(){const t=this._nodes;return t[t.length-1]}set _currNode(t){const e=this._nodes;e[e.length-1]=t}},t.not=O;const R=X(t.operators.AND);t.and=function(...t){return t.reduce(R)};const S=X(t.operators.OR);function X(t){return(r,o)=>r===e.nil?o:o===e.nil?r:e._`${V(r)} ${t} ${V(o)}`}function V(t){return t instanceof e.Name?t:e._`(${t})`}t.or=function(...t){return t.reduce(S)}}(Ai)),Ai}var Vi,Gi={};function Mi(){if(Vi)return Gi;Vi=1,Object.defineProperty(Gi,"J",{value:!0}),Gi.checkStrictMode=Gi.getErrorPath=Gi.Type=Gi.useFunc=Gi.setEvaluated=Gi.evaluatedPropsToName=Gi.mergeEvaluated=Gi.eachItem=Gi.unescapeJsonPointer=Gi.escapeJsonPointer=Gi.escapeFragment=Gi.unescapeFragment=Gi.schemaRefOrVal=Gi.schemaHasRulesButRef=Gi.schemaHasRules=Gi.checkUnknownRules=Gi.alwaysValidSchema=Gi.toHash=void 0;const t=Xi(),e=qi();function r(t,e=t.schema){const{opts:r,self:o}=t;if(!r.strictSchema)return;if("boolean"==typeof e)return;const i=o.RULES.keywords;for(const r in e)i[r]||d(t,`unknown keyword: "${r}"`)}function o(t,e){if("boolean"==typeof t)return!t;for(const r in t)if(e[r])return!0;return!1}function i(t){return"number"==typeof t?`${t}`:t.replace(/~/g,"~0").replace(/\//g,"~1")}function n(t){return t.replace(/~1/g,"/").replace(/~0/g,"~")}function a({mergeNames:e,mergeToName:r,mergeValues:o,resultToName:i}){return(n,a,s,l)=>{const c=void 0===s?a:s instanceof t.Name?(a instanceof t.Name?e(n,a,s):r(n,a,s),s):a instanceof t.Name?(r(n,s,a),a):o(a,s);return l!==t.Name||c instanceof t.Name?c:i(n,c)}}function s(e,r){if(!0===r)return e.var("props",!0);const o=e.var("props",t._`{}`);return void 0!==r&&l(e,o,r),o}function l(e,r,o){Object.keys(o).forEach((o=>e.assign(t._`${r}${(0,t.getProperty)(o)}`,!0)))}Gi.toHash=function(t){const e={};for(const r of t)e[r]=!0;return e},Gi.alwaysValidSchema=function(t,e){return"boolean"==typeof e?e:0===Object.keys(e).length||(r(t,e),!o(e,t.self.RULES.all))},Gi.checkUnknownRules=r,Gi.schemaHasRules=o,Gi.schemaHasRulesButRef=function(t,e){if("boolean"==typeof t)return!t;for(const r in t)if("$ref"!==r&&e.all[r])return!0;return!1},Gi.schemaRefOrVal=function({topSchemaRef:e,schemaPath:r},o,i,n){if(!n){if("number"==typeof o||"boolean"==typeof o)return o;if("string"==typeof o)return t._`${o}`}return t._`${e}${r}${(0,t.getProperty)(i)}`},Gi.unescapeFragment=function(t){return n(decodeURIComponent(t))},Gi.escapeFragment=function(t){return encodeURIComponent(i(t))},Gi.escapeJsonPointer=i,Gi.unescapeJsonPointer=n,Gi.eachItem=function(t,e){if(Array.isArray(t))for(const r of t)e(r);else e(t)},Gi.mergeEvaluated={props:a({mergeNames:(e,r,o)=>e.if(t._`${o} !== true && ${r} !== undefined`,(()=>{e.if(t._`${r} === true`,(()=>e.assign(o,!0)),(()=>e.assign(o,t._`${o} || {}`).code(t._`Object.assign(${o}, ${r})`)))})),mergeToName:(e,r,o)=>e.if(t._`${o} !== true`,(()=>{!0===r?e.assign(o,!0):(e.assign(o,t._`${o} || {}`),l(e,o,r))})),mergeValues:(t,e)=>!0===t||{...t,...e},resultToName:s}),items:a({mergeNames:(e,r,o)=>e.if(t._`${o} !== true && ${r} !== undefined`,(()=>e.assign(o,t._`${r} === true ? true : ${o} > ${r} ? ${o} : ${r}`))),mergeToName:(e,r,o)=>e.if(t._`${o} !== true`,(()=>e.assign(o,!0===r||t._`${o} > ${r} ? ${o} : ${r}`))),mergeValues:(t,e)=>!0===t||Math.max(t,e),resultToName:(t,e)=>t.var("items",e)})},Gi.evaluatedPropsToName=s,Gi.setEvaluated=l;const c={};var b;function d(t,e,r=t.opts.strictSchema){if(r){if(e=`strict mode: ${e}`,!0===r)throw new Error(e);t.self.logger.warn(e)}}return Gi.useFunc=function(t,r){return t.scopeValue("func",{ref:r,code:c[r.code]||(c[r.code]=new e._Code(r.code))})},function(t){t[t.Num=0]="Num",t[t.Str=1]="Str"}(b||(Gi.Type=b={})),Gi.getErrorPath=function(e,r,o){if(e instanceof t.Name){const i=r===b.Num;return o?i?t._`"[" + ${e} + "]"`:t._`"['" + ${e} + "']"`:i?t._`"/" + ${e}`:t._`"/" + ${e}.replace(/~/g, "~0").replace(/\\//g, "~1")`}return o?(0,t.getProperty)(e).toString():"/"+i(e)},Gi.checkStrictMode=d,Gi}var Ni,Ii,Bi,Ci={};function Li(){if(Ni)return Ci;Ni=1,Object.defineProperty(Ci,"J",{value:!0});const t=Xi(),e={data:new t.Name("data"),valCxt:new t.Name("valCxt"),instancePath:new t.Name("instancePath"),parentData:new t.Name("parentData"),parentDataProperty:new t.Name("parentDataProperty"),rootData:new t.Name("rootData"),dynamicAnchors:new t.Name("dynamicAnchors"),vErrors:new t.Name("vErrors"),errors:new t.Name("errors"),this:new t.Name("this"),self:new t.Name("self"),scope:new t.Name("scope"),json:new t.Name("json"),jsonPos:new t.Name("jsonPos"),jsonLen:new t.Name("jsonLen"),jsonPart:new t.Name("jsonPart")};return Ci.default=e,Ci}function Wi(){return Ii||(Ii=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.extendErrors=t.resetErrorsCount=t.reportExtraError=t.reportError=t.keyword$DataError=t.keywordError=void 0;const e=Xi(),r=Mi(),o=Li();function i(t,r){const i=t.const("err",r);t.if(e._`${o.default.vErrors} === null`,(()=>t.assign(o.default.vErrors,e._`[${i}]`)),e._`${o.default.vErrors}.push(${i})`),t.code(e._`${o.default.errors}++`)}function n(t,r){const{gen:o,validateName:i,schemaEnv:n}=t;n.$async?o.throw(e._`new ${t.ValidationError}(${r})`):(o.assign(e._`${i}.errors`,r),o.return(!1))}t.keywordError={message:({keyword:t})=>e.str`must pass "${t}" keyword validation`},t.keyword$DataError={message:({keyword:t,schemaType:r})=>r?e.str`"${t}" keyword must be ${r} ($data)`:e.str`"${t}" keyword is invalid ($data)`},t.reportError=function(r,o=t.keywordError,a,l){const{it:c}=r,{gen:b,compositeRule:d,allErrors:f}=c,p=s(r,o,a);(null!=l?l:d||f)?i(b,p):n(c,e._`[${p}]`)},t.reportExtraError=function(e,r=t.keywordError,a){const{it:l}=e,{gen:c,compositeRule:b,allErrors:d}=l;i(c,s(e,r,a)),b||d||n(l,o.default.vErrors)},t.resetErrorsCount=function(t,r){t.assign(o.default.errors,r),t.if(e._`${o.default.vErrors} !== null`,(()=>t.if(r,(()=>t.assign(e._`${o.default.vErrors}.length`,r)),(()=>t.assign(o.default.vErrors,null)))))},t.extendErrors=function({gen:t,keyword:r,schemaValue:i,data:n,errsCount:a,it:s}){if(void 0===a)throw new Error("ajv implementation error");const l=t.name("err");t.forRange("i",a,o.default.errors,(a=>{t.const(l,e._`${o.default.vErrors}[${a}]`),t.if(e._`${l}.instancePath === undefined`,(()=>t.assign(e._`${l}.instancePath`,(0,e.strConcat)(o.default.instancePath,s.errorPath)))),t.assign(e._`${l}.schemaPath`,e.str`${s.errSchemaPath}/${r}`),s.opts.verbose&&(t.assign(e._`${l}.schema`,i),t.assign(e._`${l}.data`,n))}))};const a={keyword:new e.Name("keyword"),schemaPath:new e.Name("schemaPath"),params:new e.Name("params"),propertyName:new e.Name("propertyName"),message:new e.Name("message"),schema:new e.Name("schema"),parentSchema:new e.Name("parentSchema")};function s(t,r,i){const{createErrors:n}=t.it;return!1===n?e._`{}`:function(t,r,i={}){const{gen:n,it:s}=t,b=[l(s,i),c(t,i)];return function(t,{params:r,message:i},n){const{keyword:s,data:l,schemaValue:c,it:b}=t,{opts:d,propertyName:f,topSchemaRef:p,schemaPath:m}=b;n.push([a.keyword,s],[a.params,"function"==typeof r?r(t):r||e._`{}`]),d.messages&&n.push([a.message,"function"==typeof i?i(t):i]);d.verbose&&n.push([a.schema,c],[a.parentSchema,e._`${p}${m}`],[o.default.data,l]);f&&n.push([a.propertyName,f])}(t,r,b),n.object(...b)}(t,r,i)}function l({errorPath:t},{instancePath:i}){const n=i?e.str`${t}${(0,r.getErrorPath)(i,r.Type.Str)}`:t;return[o.default.instancePath,(0,e.strConcat)(o.default.instancePath,n)]}function c({keyword:t,it:{errSchemaPath:o}},{schemaPath:i,parentSchema:n}){let s=n?o:e.str`${o}/${t}`;return i&&(s=e.str`${s}${(0,r.getErrorPath)(i,r.Type.Str)}`),[a.schemaPath,s]}}(Ei)),Ei}var Zi,Hi={},Ki={};function Ti(){if(Zi)return Ki;Zi=1,Object.defineProperty(Ki,"J",{value:!0}),Ki.getRules=Ki.isJSONType=void 0;const t=new Set(["string","number","integer","boolean","null","object","array"]);return Ki.isJSONType=function(e){return"string"==typeof e&&t.has(e)},Ki.getRules=function(){const t={number:{type:"number",rules:[]},string:{type:"string",rules:[]},array:{type:"array",rules:[]},object:{type:"object",rules:[]}};return{types:{...t,integer:!0,boolean:!0,null:!0},rules:[{rules:[]},t.number,t.string,t.array,t.object],post:{rules:[]},all:{},keywords:{}}},Ki}var Ji,Ui,Yi={};function Qi(){if(Ji)return Yi;function t(t,r){return r.rules.some((r=>e(t,r)))}function e(t,e){var r;return void 0!==t[e.keyword]||(null===(r=e.definition.implements)||void 0===r?void 0:r.some((e=>void 0!==t[e])))}return Ji=1,Object.defineProperty(Yi,"J",{value:!0}),Yi.shouldUseRule=Yi.shouldUseGroup=Yi.schemaHasRulesForType=void 0,Yi.schemaHasRulesForType=function({schema:e,self:r},o){const i=r.RULES.types[o];return i&&!0!==i&&t(e,i)},Yi.shouldUseGroup=t,Yi.shouldUseRule=e,Yi}function $i(){if(Ui)return Hi;Ui=1,Object.defineProperty(Hi,"J",{value:!0}),Hi.reportTypeError=Hi.checkDataTypes=Hi.checkDataType=Hi.coerceAndCheckDataType=Hi.getJSONTypes=Hi.getSchemaTypes=Hi.DataType=void 0;const t=Ti(),e=Qi(),r=Wi(),o=Xi(),i=Mi();var n;function a(e){const r=Array.isArray(e)?e:e?[e]:[];if(r.every(t.isJSONType))return r;throw new Error("type must be JSONType or JSONType[]: "+r.join(","))}!function(t){t[t.Correct=0]="Correct",t[t.Wrong=1]="Wrong"}(n||(Hi.DataType=n={})),Hi.getSchemaTypes=function(t){const e=a(t.type);if(e.includes("null")){if(!1===t.nullable)throw new Error("type: null contradicts nullable: false")}else{if(!e.length&&void 0!==t.nullable)throw new Error('"nullable" cannot be used without "type"');!0===t.nullable&&e.push("null")}return e},Hi.getJSONTypes=a,Hi.coerceAndCheckDataType=function(t,r){const{gen:i,data:a,opts:l}=t,b=function(t,e){return e?t.filter((t=>s.has(t)||"array"===e&&"array"===t)):[]}(r,l.coerceTypes),f=r.length>0&&!(0===b.length&&1===r.length&&(0,e.schemaHasRulesForType)(t,r[0]));if(f){const e=c(r,a,l.strictNumbers,n.Wrong);i.if(e,(()=>{b.length?function(t,e,r){const{gen:i,data:n,opts:a}=t,l=i.let("dataType",o._`typeof ${n}`),b=i.let("coerced",o._`undefined`);"array"===a.coerceTypes&&i.if(o._`${l} == 'object' && Array.isArray(${n}) && ${n}.length == 1`,(()=>i.assign(n,o._`${n}[0]`).assign(l,o._`typeof ${n}`).if(c(e,n,a.strictNumbers),(()=>i.assign(b,n)))));i.if(o._`${b} !== undefined`);for(const t of r)(s.has(t)||"array"===t&&"array"===a.coerceTypes)&&f(t);function f(t){switch(t){case"string":return void i.elseIf(o._`${l} == "number" || ${l} == "boolean"`).assign(b,o._`"" + ${n}`).elseIf(o._`${n} === null`).assign(b,o._`""`);case"number":return void i.elseIf(o._`${l} == "boolean" || ${n} === null
              || (${l} == "string" && ${n} && ${n} == +${n})`).assign(b,o._`+${n}`);case"integer":return void i.elseIf(o._`${l} === "boolean" || ${n} === null
              || (${l} === "string" && ${n} && ${n} == +${n} && !(${n} % 1))`).assign(b,o._`+${n}`);case"boolean":return void i.elseIf(o._`${n} === "false" || ${n} === 0 || ${n} === null`).assign(b,!1).elseIf(o._`${n} === "true" || ${n} === 1`).assign(b,!0);case"null":return i.elseIf(o._`${n} === "" || ${n} === 0 || ${n} === false`),void i.assign(b,null);case"array":i.elseIf(o._`${l} === "string" || ${l} === "number"
              || ${l} === "boolean" || ${n} === null`).assign(b,o._`[${n}]`)}}i.else(),d(t),i.endIf(),i.if(o._`${b} !== undefined`,(()=>{i.assign(n,b),function({gen:t,parentData:e,parentDataProperty:r},i){t.if(o._`${e} !== undefined`,(()=>t.assign(o._`${e}[${r}]`,i)))}(t,b)}))}(t,r,b):d(t)}))}return f};const s=new Set(["string","number","integer","boolean","null"]);function l(t,e,r,i=n.Correct){const a=i===n.Correct?o.operators.EQ:o.operators.NEQ;let s;switch(t){case"null":return o._`${e} ${a} null`;case"array":s=o._`Array.isArray(${e})`;break;case"object":s=o._`${e} && typeof ${e} == "object" && !Array.isArray(${e})`;break;case"integer":s=l(o._`!(${e} % 1) && !isNaN(${e})`);break;case"number":s=l();break;default:return o._`typeof ${e} ${a} ${t}`}return i===n.Correct?s:(0,o.not)(s);function l(t=o.nil){return(0,o.and)(o._`typeof ${e} == "number"`,t,r?o._`isFinite(${e})`:o.nil)}}function c(t,e,r,n){if(1===t.length)return l(t[0],e,r,n);let a;const s=(0,i.toHash)(t);if(s.array&&s.object){const t=o._`typeof ${e} != "object"`;a=s.null?t:o._`!${e} || ${t}`,delete s.null,delete s.array,delete s.object}else a=o.nil;s.number&&delete s.integer;for(const t in s)a=(0,o.and)(a,l(t,e,r,n));return a}Hi.checkDataType=l,Hi.checkDataTypes=c;const b={message:({schema:t})=>`must be ${t}`,params:({schema:t,schemaValue:e})=>"string"==typeof t?o._`{type: ${t}}`:o._`{type: ${e}}`};function d(t){const e=function(t){const{gen:e,data:r,schema:o}=t,n=(0,i.schemaRefOrVal)(t,o,"type");return{gen:e,keyword:"type",data:r,schema:o.type,schemaCode:n,schemaValue:n,parentSchema:o,params:{},it:t}}(t);(0,r.reportError)(e,b)}return Hi.reportTypeError=d,Hi}var _i,tn={};var en,rn,on={},nn={};function an(){if(en)return nn;en=1,Object.defineProperty(nn,"J",{value:!0}),nn.validateUnion=nn.validateArray=nn.usePattern=nn.callValidateCode=nn.schemaProperties=nn.allSchemaProperties=nn.noPropertyInData=nn.propertyInData=nn.isOwnProperty=nn.hasPropFunc=nn.reportMissingProp=nn.checkMissingProp=nn.checkReportMissingProp=void 0;const t=Xi(),e=Mi(),r=Li(),o=Mi();function i(e){return e.scopeValue("func",{ref:Object.prototype.hasOwnProperty,code:t._`Object.prototype.hasOwnProperty`})}function n(e,r,o){return t._`${i(e)}.call(${r}, ${o})`}function a(e,r,o,i){const a=t._`${r}${(0,t.getProperty)(o)} === undefined`;return i?(0,t.or)(a,(0,t.not)(n(e,r,o))):a}function s(t){return t?Object.keys(t).filter((t=>"__proto__"!==t)):[]}nn.checkReportMissingProp=function(e,r){const{gen:o,data:i,it:n}=e;o.if(a(o,i,r,n.opts.ownProperties),(()=>{e.setParams({missingProperty:t._`${r}`},!0),e.error()}))},nn.checkMissingProp=function({gen:e,data:r,it:{opts:o}},i,n){return(0,t.or)(...i.map((i=>(0,t.and)(a(e,r,i,o.ownProperties),t._`${n} = ${i}`))))},nn.reportMissingProp=function(t,e){t.setParams({missingProperty:e},!0),t.error()},nn.hasPropFunc=i,nn.isOwnProperty=n,nn.propertyInData=function(e,r,o,i){const a=t._`${r}${(0,t.getProperty)(o)} !== undefined`;return i?t._`${a} && ${n(e,r,o)}`:a},nn.noPropertyInData=a,nn.allSchemaProperties=s,nn.schemaProperties=function(t,r){return s(r).filter((o=>!(0,e.alwaysValidSchema)(t,r[o])))},nn.callValidateCode=function({schemaCode:e,data:o,it:{gen:i,topSchemaRef:n,schemaPath:a,errorPath:s},it:l},c,b,d){const f=d?t._`${e}, ${o}, ${n}${a}`:o,p=[[r.default.instancePath,(0,t.strConcat)(r.default.instancePath,s)],[r.default.parentData,l.parentData],[r.default.parentDataProperty,l.parentDataProperty],[r.default.rootData,r.default.rootData]];l.opts.dynamicRef&&p.push([r.default.dynamicAnchors,r.default.dynamicAnchors]);const m=t._`${f}, ${i.object(...p)}`;return b!==t.nil?t._`${c}.call(${b}, ${m})`:t._`${c}(${m})`};const l=t._`new RegExp`;return nn.usePattern=function({gen:e,it:{opts:r}},i){const n=r.unicodeRegExp?"u":"",{regExp:a}=r.code,s=a(i,n);return e.scopeValue("pattern",{key:s.toString(),ref:s,code:t._`${"new RegExp"===a.code?l:(0,o.useFunc)(e,a)}(${i}, ${n})`})},nn.validateArray=function(r){const{gen:o,data:i,keyword:n,it:a}=r,s=o.name("valid");if(a.allErrors){const t=o.let("valid",!0);return l((()=>o.assign(t,!1))),t}return o.var(s,!0),l((()=>o.break())),s;function l(a){const l=o.const("len",t._`${i}.length`);o.forRange("i",0,l,(i=>{r.subschema({keyword:n,dataProp:i,dataPropType:e.Type.Num},s),o.if((0,t.not)(s),a)}))}},nn.validateUnion=function(r){const{gen:o,schema:i,keyword:n,it:a}=r;if(!Array.isArray(i))throw new Error("ajv implementation error");if(i.some((t=>(0,e.alwaysValidSchema)(a,t)))&&!a.opts.unevaluated)return;const s=o.let("valid",!1),l=o.name("_valid");o.block((()=>i.forEach(((e,i)=>{const a=r.subschema({keyword:n,schemaProp:i,compositeRule:!0},l);o.assign(s,t._`${s} || ${l}`);r.mergeValidEvaluated(a,l)||o.if((0,t.not)(s))})))),r.result(s,(()=>r.reset()),(()=>r.error(!0)))},nn}function sn(){if(rn)return on;rn=1,Object.defineProperty(on,"J",{value:!0}),on.validateKeywordUsage=on.validSchemaType=on.funcKeywordCode=on.macroKeywordCode=void 0;const t=Xi(),e=Li(),r=an(),o=Wi();function i(e){const{gen:r,data:o,it:i}=e;r.if(i.parentData,(()=>r.assign(o,t._`${i.parentData}[${i.parentDataProperty}]`)))}function n(e,r,o){if(void 0===o)throw new Error(`keyword "${r}" failed to compile`);return e.scopeValue("keyword","function"==typeof o?{ref:o}:{ref:o,code:(0,t.stringify)(o)})}return on.macroKeywordCode=function(e,r){const{gen:o,keyword:i,schema:a,parentSchema:s,it:l}=e,c=r.macro.call(l.self,a,s,l),b=n(o,i,c);!1!==l.opts.validateSchema&&l.self.validateSchema(c,!0);const d=o.name("valid");e.subschema({schema:c,schemaPath:t.nil,errSchemaPath:`${l.errSchemaPath}/${i}`,topSchemaRef:b,compositeRule:!0},d),e.pass(d,(()=>e.error(!0)))},on.funcKeywordCode=function(a,s){var l;const{gen:c,keyword:b,schema:d,parentSchema:f,$data:p,it:m}=a;!function({schemaEnv:t},e){if(e.async&&!t.$async)throw new Error("async keyword in sync schema")}(m,s);const u=!p&&s.compile?s.compile.call(m.self,d,f,m):s.validate,h=n(c,b,u),g=c.let("valid");function v(o=(s.async?t._`await `:t.nil)){const i=m.opts.passContext?e.default.this:e.default.self,n=!("compile"in s&&!p||!1===s.schema);c.assign(g,t._`${o}${(0,r.callValidateCode)(a,h,i,n)}`,s.modifying)}function w(e){var r;c.if((0,t.not)(null!==(r=s.valid)&&void 0!==r?r:g),e)}a.block$data(g,(function(){if(!1===s.errors)v(),s.modifying&&i(a),w((()=>a.error()));else{const r=s.async?function(){const e=c.let("ruleErrs",null);return c.try((()=>v(t._`await `)),(r=>c.assign(g,!1).if(t._`${r} instanceof ${m.ValidationError}`,(()=>c.assign(e,t._`${r}.errors`)),(()=>c.throw(r))))),e}():function(){const e=t._`${h}.errors`;return c.assign(e,null),v(t.nil),e}();s.modifying&&i(a),w((()=>function(r,i){const{gen:n}=r;n.if(t._`Array.isArray(${i})`,(()=>{n.assign(e.default.vErrors,t._`${e.default.vErrors} === null ? ${i} : ${e.default.vErrors}.concat(${i})`).assign(e.default.errors,t._`${e.default.vErrors}.length`),(0,o.extendErrors)(r)}),(()=>r.error()))}(a,r)))}})),a.ok(null!==(l=s.valid)&&void 0!==l?l:g)},on.validSchemaType=function(t,e,r=!1){return!e.length||e.some((e=>"array"===e?Array.isArray(t):"object"===e?t&&"object"==typeof t&&!Array.isArray(t):typeof t==e||r&&void 0===t))},on.validateKeywordUsage=function({schema:t,opts:e,self:r,errSchemaPath:o},i,n){if(Array.isArray(i.keyword)?!i.keyword.includes(n):i.keyword!==n)throw new Error("ajv implementation error");const a=i.dependencies;if(null==a?void 0:a.some((e=>!Object.prototype.hasOwnProperty.call(t,e))))throw new Error(`parent schema must have dependencies of ${n}: ${a.join(",")}`);if(i.validateSchema){if(!i.validateSchema(t[n])){const t=`keyword "${n}" value is invalid at path "${o}": `+r.errorsText(i.validateSchema.errors);if("log"!==e.validateSchema)throw new Error(t);r.logger.error(t)}}},on}var ln,cn={};var bn,dn,fn={};function pn(){return dn||(dn=1,bn=function t(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){if(e.constructor!==r.constructor)return!1;var o,i,n;if(Array.isArray(e)){if((o=e.length)!=r.length)return!1;for(i=o;0!=i--;)if(!t(e[i],r[i]))return!1;return!0}if(e.constructor===RegExp)return e.source===r.source&&e.flags===r.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===r.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===r.toString();if((o=(n=Object.keys(e)).length)!==Object.keys(r).length)return!1;for(i=o;0!=i--;)if(!Object.prototype.hasOwnProperty.call(r,n[i]))return!1;for(i=o;0!=i--;){var a=n[i];if(!t(e[a],r[a]))return!1}return!0}return e!=e&&r!=r}),bn}var mn,un,hn,gn={exports:{}};function vn(){if(mn)return gn.exports;mn=1;var t=gn.exports=function(t,r,o){"function"==typeof r&&(o=r,r={}),e(r,"function"==typeof(o=r.cb||o)?o:o.pre||function(){},o.post||function(){},t,"",t)};function e(r,o,i,n,a,s,l,c,b,d){if(n&&"object"==typeof n&&!Array.isArray(n)){for(var f in o(n,a,s,l,c,b,d),n){var p=n[f];if(Array.isArray(p)){if(f in t.arrayKeywords)for(var m=0;m<p.length;m++)e(r,o,i,p[m],a+"/"+f+"/"+m,s,a,f,n,m)}else if(f in t.propsKeywords){if(p&&"object"==typeof p)for(var u in p)e(r,o,i,p[u],a+"/"+f+"/"+u.replace(/~/g,"~0").replace(/\//g,"~1"),s,a,f,n,u)}else(f in t.keywords||r.allKeys&&!(f in t.skipKeywords))&&e(r,o,i,p,a+"/"+f,s,a,f,n)}i(n,a,s,l,c,b,d)}}return t.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0,if:!0,then:!0,else:!0},t.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},t.propsKeywords={$defs:!0,definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},t.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0},gn.exports}function wn(){if(un)return fn;un=1,Object.defineProperty(fn,"J",{value:!0}),fn.getSchemaRefs=fn.resolveUrl=fn.normalizeId=fn._getFullPath=fn.getFullPath=fn.inlineRef=void 0;const t=Mi(),e=pn(),r=vn(),o=new Set(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum","const"]);fn.inlineRef=function(t,e=!0){return"boolean"==typeof t||(!0===e?!n(t):!!e&&a(t)<=e)};const i=new Set(["$ref","$recursiveRef","$recursiveAnchor","$dynamicRef","$dynamicAnchor"]);function n(t){for(const e in t){if(i.has(e))return!0;const r=t[e];if(Array.isArray(r)&&r.some(n))return!0;if("object"==typeof r&&n(r))return!0}return!1}function a(e){let r=0;for(const i in e){if("$ref"===i)return 1/0;if(r++,!o.has(i)&&("object"==typeof e[i]&&(0,t.eachItem)(e[i],(t=>r+=a(t))),r===1/0))return 1/0}return r}function s(t,e="",r){!1!==r&&(e=b(e));const o=t.parse(e);return l(t,o)}function l(t,e){return t.serialize(e).split("#")[0]+"#"}fn.getFullPath=s,fn._getFullPath=l;const c=/#\/?$/;function b(t){return t?t.replace(c,""):""}fn.normalizeId=b,fn.resolveUrl=function(t,e,r){return r=b(r),t.resolve(e,r)};const d=/^[a-z_][-a-z0-9._]*$/i;return fn.getSchemaRefs=function(t,o){if("boolean"==typeof t)return{};const{schemaId:i,uriResolver:n}=this.opts,a=b(t[i]||o),l={"":a},c=s(n,a,!1),f={},p=new Set;return r(t,{allKeys:!0},((t,e,r,o)=>{if(void 0===o)return;const n=c+e;let a=l[o];function s(e){const r=this.opts.uriResolver.resolve;if(e=b(a?r(a,e):e),p.has(e))throw u(e);p.add(e);let o=this.refs[e];return"string"==typeof o&&(o=this.refs[o]),"object"==typeof o?m(t,o.schema,e):e!==b(n)&&("#"===e[0]?(m(t,f[e],e),f[e]=t):this.refs[e]=n),e}function h(t){if("string"==typeof t){if(!d.test(t))throw new Error(`invalid anchor "${t}"`);s.call(this,`#${t}`)}}"string"==typeof t[i]&&(a=s.call(this,t[i])),h.call(this,t.$anchor),h.call(this,t.$dynamicAnchor),l[e]=a})),f;function m(t,r,o){if(void 0!==r&&!e(t,r))throw u(o)}function u(t){return new Error(`reference "${t}" resolves to more than one schema`)}},fn}function xn(){if(hn)return Di;hn=1,Object.defineProperty(Di,"J",{value:!0}),Di.getData=Di.KeywordCxt=Di.validateFunctionCode=void 0;const t=function(){if(Bi)return zi;Bi=1,Object.defineProperty(zi,"J",{value:!0}),zi.boolOrEmptySchema=zi.topBoolOrEmptySchema=void 0;const t=Wi(),e=Xi(),r=Li(),o={message:"boolean schema is false"};function i(e,r){const{gen:i,data:n}=e,a={gen:i,keyword:"false schema",data:n,schema:!1,schemaCode:!1,schemaValue:!1,params:{},it:e};(0,t.reportError)(a,o,void 0,r)}return zi.topBoolOrEmptySchema=function(t){const{gen:o,schema:n,validateName:a}=t;!1===n?i(t,!1):"object"==typeof n&&!0===n.$async?o.return(r.default.data):(o.assign(e._`${a}.errors`,null),o.return(!0))},zi.boolOrEmptySchema=function(t,e){const{gen:r,schema:o}=t;!1===o?(r.var(e,!1),i(t)):r.var(e,!0)},zi}(),e=$i(),r=Qi(),o=$i(),i=function(){if(_i)return tn;_i=1,Object.defineProperty(tn,"J",{value:!0}),tn.assignDefaults=void 0;const t=Xi(),e=Mi();function r(r,o,i){const{gen:n,compositeRule:a,data:s,opts:l}=r;if(void 0===i)return;const c=t._`${s}${(0,t.getProperty)(o)}`;if(a)return void(0,e.checkStrictMode)(r,`default is ignored for: ${c}`);let b=t._`${c} === undefined`;"empty"===l.useDefaults&&(b=t._`${b} || ${c} === null || ${c} === ""`),n.if(b,t._`${c} = ${(0,t.stringify)(i)}`)}return tn.assignDefaults=function(t,e){const{properties:o,items:i}=t.schema;if("object"===e&&o)for(const e in o)r(t,e,o[e].default);else"array"===e&&Array.isArray(i)&&i.forEach(((e,o)=>r(t,o,e.default)))},tn}(),n=sn(),a=function(){if(ln)return cn;ln=1,Object.defineProperty(cn,"J",{value:!0}),cn.extendSubschemaMode=cn.extendSubschemaData=cn.getSubschema=void 0;const t=Xi(),e=Mi();return cn.getSubschema=function(r,{keyword:o,schemaProp:i,schema:n,schemaPath:a,errSchemaPath:s,topSchemaRef:l}){if(void 0!==o&&void 0!==n)throw new Error('both "keyword" and "schema" passed, only one allowed');if(void 0!==o){const n=r.schema[o];return void 0===i?{schema:n,schemaPath:t._`${r.schemaPath}${(0,t.getProperty)(o)}`,errSchemaPath:`${r.errSchemaPath}/${o}`}:{schema:n[i],schemaPath:t._`${r.schemaPath}${(0,t.getProperty)(o)}${(0,t.getProperty)(i)}`,errSchemaPath:`${r.errSchemaPath}/${o}/${(0,e.escapeFragment)(i)}`}}if(void 0!==n){if(void 0===a||void 0===s||void 0===l)throw new Error('"schemaPath", "errSchemaPath" and "topSchemaRef" are required with "schema"');return{schema:n,schemaPath:a,topSchemaRef:l,errSchemaPath:s}}throw new Error('either "keyword" or "schema" must be passed')},cn.extendSubschemaData=function(r,o,{dataProp:i,dataPropType:n,data:a,dataTypes:s,propertyName:l}){if(void 0!==a&&void 0!==i)throw new Error('both "data" and "dataProp" passed, only one allowed');const{gen:c}=o;if(void 0!==i){const{errorPath:a,dataPathArr:s,opts:l}=o;b(c.let("data",t._`${o.data}${(0,t.getProperty)(i)}`,!0)),r.errorPath=t.str`${a}${(0,e.getErrorPath)(i,n,l.jsPropertySyntax)}`,r.parentDataProperty=t._`${i}`,r.dataPathArr=[...s,r.parentDataProperty]}function b(t){r.data=t,r.dataLevel=o.dataLevel+1,r.dataTypes=[],o.definedProperties=new Set,r.parentData=o.data,r.dataNames=[...o.dataNames,t]}void 0!==a&&(b(a instanceof t.Name?a:c.let("data",a,!0)),void 0!==l&&(r.propertyName=l)),s&&(r.dataTypes=s)},cn.extendSubschemaMode=function(t,{jtdDiscriminator:e,jtdMetadata:r,compositeRule:o,createErrors:i,allErrors:n}){void 0!==o&&(t.compositeRule=o),void 0!==i&&(t.createErrors=i),void 0!==n&&(t.allErrors=n),t.jtdDiscriminator=e,t.jtdMetadata=r},cn}(),s=Xi(),l=Li(),c=wn(),b=Mi(),d=Wi();function f({gen:t,validateName:e,schema:r,schemaEnv:o,opts:i},n){i.code.es5?t.func(e,s._`${l.default.data}, ${l.default.valCxt}`,o.$async,(()=>{t.code(s._`"use strict"; ${p(r,i)}`),function(t,e){t.if(l.default.valCxt,(()=>{t.var(l.default.instancePath,s._`${l.default.valCxt}.${l.default.instancePath}`),t.var(l.default.parentData,s._`${l.default.valCxt}.${l.default.parentData}`),t.var(l.default.parentDataProperty,s._`${l.default.valCxt}.${l.default.parentDataProperty}`),t.var(l.default.rootData,s._`${l.default.valCxt}.${l.default.rootData}`),e.dynamicRef&&t.var(l.default.dynamicAnchors,s._`${l.default.valCxt}.${l.default.dynamicAnchors}`)}),(()=>{t.var(l.default.instancePath,s._`""`),t.var(l.default.parentData,s._`undefined`),t.var(l.default.parentDataProperty,s._`undefined`),t.var(l.default.rootData,l.default.data),e.dynamicRef&&t.var(l.default.dynamicAnchors,s._`{}`)}))}(t,i),t.code(n)})):t.func(e,s._`${l.default.data}, ${function(t){return s._`{${l.default.instancePath}="", ${l.default.parentData}, ${l.default.parentDataProperty}, ${l.default.rootData}=${l.default.data}${t.dynamicRef?s._`, ${l.default.dynamicAnchors}={}`:s.nil}}={}`}(i)}`,o.$async,(()=>t.code(p(r,i)).code(n)))}function p(t,e){const r="object"==typeof t&&t[e.schemaId];return r&&(e.code.source||e.code.process)?s._`/*# sourceURL=${r} */`:s.nil}function m(e,r){h(e)&&(g(e),u(e))?function(t,e){const{schema:r,gen:o,opts:i}=t;i.$comment&&r.$comment&&w(t);(function(t){const e=t.schema[t.opts.schemaId];e&&(t.baseId=(0,c.resolveUrl)(t.opts.uriResolver,t.baseId,e))})(t),function(t){if(t.schema.$async&&!t.schemaEnv.$async)throw new Error("async schema in sync schema")}(t);const n=o.const("_errs",l.default.errors);v(t,n),o.var(e,s._`${n} === ${l.default.errors}`)}(e,r):(0,t.boolOrEmptySchema)(e,r)}function u({schema:t,self:e}){if("boolean"==typeof t)return!t;for(const r in t)if(e.RULES.all[r])return!0;return!1}function h(t){return"boolean"!=typeof t.schema}function g(t){(0,b.checkUnknownRules)(t),function(t){const{schema:e,errSchemaPath:r,opts:o,self:i}=t;e.$ref&&o.ignoreKeywordsWithRef&&(0,b.schemaHasRulesButRef)(e,i.RULES)&&i.logger.warn(`$ref: keywords ignored in schema at path "${r}"`)}(t)}function v(t,r){if(t.opts.jtd)return x(t,[],!1,r);const o=(0,e.getSchemaTypes)(t.schema);x(t,o,!(0,e.coerceAndCheckDataType)(t,o),r)}function w({gen:t,schemaEnv:e,schema:r,errSchemaPath:o,opts:i}){const n=r.$comment;if(!0===i.$comment)t.code(s._`${l.default.self}.logger.log(${n})`);else if("function"==typeof i.$comment){const r=s.str`${o}/$comment`,i=t.scopeValue("root",{ref:e.root});t.code(s._`${l.default.self}.opts.$comment(${n}, ${r}, ${i}.schema)`)}}function x(t,e,i,n){const{gen:a,schema:c,data:d,allErrors:f,opts:p,self:m}=t,{RULES:u}=m;function h(b){(0,r.shouldUseGroup)(c,b)&&(b.type?(a.if((0,o.checkDataType)(b.type,d,p.strictNumbers)),y(t,b),1===e.length&&e[0]===b.type&&i&&(a.else(),(0,o.reportTypeError)(t)),a.endIf()):y(t,b),f||a.if(s._`${l.default.errors} === ${n||0}`))}!c.$ref||!p.ignoreKeywordsWithRef&&(0,b.schemaHasRulesButRef)(c,u)?(p.jtd||function(t,e){if(t.schemaEnv.meta||!t.opts.strictTypes)return;(function(t,e){if(!e.length)return;if(!t.dataTypes.length)return void(t.dataTypes=e);e.forEach((e=>{j(t.dataTypes,e)||D(t,`type "${e}" not allowed by context "${t.dataTypes.join(",")}"`)})),function(t,e){const r=[];for(const o of t.dataTypes)j(e,o)?r.push(o):e.includes("integer")&&"number"===o&&r.push("integer");t.dataTypes=r}(t,e)})(t,e),t.opts.allowUnionTypes||function(t,e){e.length>1&&(2!==e.length||!e.includes("null"))&&D(t,"use allowUnionTypes to allow union type keyword")}(t,e);!function(t,e){const o=t.self.RULES.all;for(const i in o){const n=o[i];if("object"==typeof n&&(0,r.shouldUseRule)(t.schema,n)){const{type:r}=n.definition;r.length&&!r.some((t=>k(e,t)))&&D(t,`missing type "${r.join(",")}" for keyword "${i}"`)}}}(t,t.dataTypes)}(t,e),a.block((()=>{for(const t of u.rules)h(t);h(u.post)}))):a.block((()=>E(t,"$ref",u.all.$ref.definition)))}function y(t,e){const{gen:o,schema:n,opts:{useDefaults:a}}=t;a&&(0,i.assignDefaults)(t,e.type),o.block((()=>{for(const o of e.rules)(0,r.shouldUseRule)(n,o)&&E(t,o.keyword,o.definition,e.type)}))}function k(t,e){return t.includes(e)||"number"===e&&t.includes("integer")}function j(t,e){return t.includes(e)||"integer"===e&&t.includes("number")}function D(t,e){e+=` at "${t.schemaEnv.baseId+t.errSchemaPath}" (strictTypes)`,(0,b.checkStrictMode)(t,e,t.opts.strictTypes)}Di.validateFunctionCode=function(e){h(e)&&(g(e),u(e))?function(t){const{schema:e,opts:r,gen:o}=t;f(t,(()=>{r.$comment&&e.$comment&&w(t),function(t){const{schema:e,opts:r}=t;void 0!==e.default&&r.useDefaults&&r.strictSchema&&(0,b.checkStrictMode)(t,"default is ignored in the schema root")}(t),o.let(l.default.vErrors,null),o.let(l.default.errors,0),r.unevaluated&&function(t){const{gen:e,validateName:r}=t;t.evaluated=e.const("evaluated",s._`${r}.evaluated`),e.if(s._`${t.evaluated}.dynamicProps`,(()=>e.assign(s._`${t.evaluated}.props`,s._`undefined`))),e.if(s._`${t.evaluated}.dynamicItems`,(()=>e.assign(s._`${t.evaluated}.items`,s._`undefined`)))}(t),v(t),function(t){const{gen:e,schemaEnv:r,validateName:o,ValidationError:i,opts:n}=t;r.$async?e.if(s._`${l.default.errors} === 0`,(()=>e.return(l.default.data)),(()=>e.throw(s._`new ${i}(${l.default.vErrors})`))):(e.assign(s._`${o}.errors`,l.default.vErrors),n.unevaluated&&function({gen:t,evaluated:e,props:r,items:o}){r instanceof s.Name&&t.assign(s._`${e}.props`,r);o instanceof s.Name&&t.assign(s._`${e}.items`,o)}(t),e.return(s._`${l.default.errors} === 0`))}(t)}))}(e):f(e,(()=>(0,t.topBoolOrEmptySchema)(e)))};class z{constructor(t,e,r){if((0,n.validateKeywordUsage)(t,e,r),this.gen=t.gen,this.allErrors=t.allErrors,this.keyword=r,this.data=t.data,this.schema=t.schema[r],this.$data=e.$data&&t.opts.$data&&this.schema&&this.schema.$data,this.schemaValue=(0,b.schemaRefOrVal)(t,this.schema,r,this.$data),this.schemaType=e.schemaType,this.parentSchema=t.schema,this.params={},this.it=t,this.def=e,this.$data)this.schemaCode=t.gen.const("vSchema",q(this.$data,t));else if(this.schemaCode=this.schemaValue,!(0,n.validSchemaType)(this.schema,e.schemaType,e.allowUndefined))throw new Error(`${r} value must be ${JSON.stringify(e.schemaType)}`);("code"in e?e.trackErrors:!1!==e.errors)&&(this.errsCount=t.gen.const("_errs",l.default.errors))}result(t,e,r){this.failResult((0,s.not)(t),e,r)}failResult(t,e,r){this.gen.if(t),r?r():this.error(),e?(this.gen.else(),e(),this.allErrors&&this.gen.endIf()):this.allErrors?this.gen.endIf():this.gen.else()}pass(t,e){this.failResult((0,s.not)(t),void 0,e)}fail(t){if(void 0===t)return this.error(),void(this.allErrors||this.gen.if(!1));this.gen.if(t),this.error(),this.allErrors?this.gen.endIf():this.gen.else()}fail$data(t){if(!this.$data)return this.fail(t);const{schemaCode:e}=this;this.fail(s._`${e} !== undefined && (${(0,s.or)(this.invalid$data(),t)})`)}error(t,e,r){if(e)return this.setParams(e),this._error(t,r),void this.setParams({});this._error(t,r)}_error(t,e){(t?d.reportExtraError:d.reportError)(this,this.def.error,e)}$dataError(){(0,d.reportError)(this,this.def.$dataError||d.keyword$DataError)}reset(){if(void 0===this.errsCount)throw new Error('add "trackErrors" to keyword definition');(0,d.resetErrorsCount)(this.gen,this.errsCount)}ok(t){this.allErrors||this.gen.if(t)}setParams(t,e){e?Object.assign(this.params,t):this.params=t}block$data(t,e,r=s.nil){this.gen.block((()=>{this.check$data(t,r),e()}))}check$data(t=s.nil,e=s.nil){if(!this.$data)return;const{gen:r,schemaCode:o,schemaType:i,def:n}=this;r.if((0,s.or)(s._`${o} === undefined`,e)),t!==s.nil&&r.assign(t,!0),(i.length||n.validateSchema)&&(r.elseIf(this.invalid$data()),this.$dataError(),t!==s.nil&&r.assign(t,!1)),r.else()}invalid$data(){const{gen:t,schemaCode:e,schemaType:r,def:i,it:n}=this;return(0,s.or)(function(){if(r.length){if(!(e instanceof s.Name))throw new Error("ajv implementation error");const t=Array.isArray(r)?r:[r];return s._`${(0,o.checkDataTypes)(t,e,n.opts.strictNumbers,o.DataType.Wrong)}`}return s.nil}(),function(){if(i.validateSchema){const r=t.scopeValue("validate$data",{ref:i.validateSchema});return s._`!${r}(${e})`}return s.nil}())}subschema(t,e){const r=(0,a.getSubschema)(this.it,t);(0,a.extendSubschemaData)(r,this.it,t),(0,a.extendSubschemaMode)(r,t);const o={...this.it,...r,items:void 0,props:void 0};return m(o,e),o}mergeEvaluated(t,e){const{it:r,gen:o}=this;r.opts.unevaluated&&(!0!==r.props&&void 0!==t.props&&(r.props=b.mergeEvaluated.props(o,t.props,r.props,e)),!0!==r.items&&void 0!==t.items&&(r.items=b.mergeEvaluated.items(o,t.items,r.items,e)))}mergeValidEvaluated(t,e){const{it:r,gen:o}=this;if(r.opts.unevaluated&&(!0!==r.props||!0!==r.items))return o.if(e,(()=>this.mergeEvaluated(t,s.Name))),!0}}function E(t,e,r,o){const i=new z(t,r,e);"code"in r?r.code(i,o):i.$data&&r.validate?(0,n.funcKeywordCode)(i,r):"macro"in r?(0,n.macroKeywordCode)(i,r):(r.compile||r.validate)&&(0,n.funcKeywordCode)(i,r)}Di.KeywordCxt=z;const A=/^\/(?:[^~]|~0|~1)*$/,F=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function q(t,{dataLevel:e,dataNames:r,dataPathArr:o}){let i,n;if(""===t)return l.default.rootData;if("/"===t[0]){if(!A.test(t))throw new Error(`Invalid JSON-pointer: ${t}`);i=t,n=l.default.rootData}else{const a=F.exec(t);if(!a)throw new Error(`Invalid JSON-pointer: ${t}`);const s=+a[1];if(i=a[2],"#"===i){if(s>=e)throw new Error(d("property/index",s));return o[e-s]}if(s>e)throw new Error(d("data",s));if(n=r[e-s],!i)return n}let a=n;const c=i.split("/");for(const t of c)t&&(n=s._`${n}${(0,s.getProperty)((0,b.unescapeJsonPointer)(t))}`,a=s._`${a} && ${n}`);return a;function d(t,r){return`Cannot access ${t} ${r} levels up, current level is ${e}`}}return Di.getData=q,Di}var yn,kn={};function jn(){if(yn)return kn;yn=1,Object.defineProperty(kn,"J",{value:!0});class t extends Error{constructor(t){super("validation failed"),this.errors=t,this.ajv=this.validation=!0}}return kn.default=t,kn}var Dn,zn={};function En(){if(Dn)return zn;Dn=1,Object.defineProperty(zn,"J",{value:!0});const t=wn();class e extends Error{constructor(e,r,o,i){super(i||`can't resolve reference ${o} from id ${r}`),this.missingRef=(0,t.resolveUrl)(e,r,o),this.missingSchema=(0,t.normalizeId)((0,t.getFullPath)(e,this.missingRef))}}return zn.default=e,zn}var An,Fn={};function qn(){if(An)return Fn;An=1,Object.defineProperty(Fn,"J",{value:!0}),Fn.resolveSchema=Fn.getCompilingSchema=Fn.resolveRef=Fn.compileSchema=Fn.SchemaEnv=void 0;const t=Xi(),e=jn(),r=Li(),o=wn(),i=Mi(),n=xn();class a{constructor(t){var e;let r;this.refs={},this.dynamicAnchors={},"object"==typeof t.schema&&(r=t.schema),this.schema=t.schema,this.schemaId=t.schemaId,this.root=t.root||this,this.baseId=null!==(e=t.baseId)&&void 0!==e?e:(0,o.normalizeId)(null==r?void 0:r[t.schemaId||"$id"]),this.schemaPath=t.schemaPath,this.localRefs=t.localRefs,this.meta=t.meta,this.$async=null==r?void 0:r.$async,this.refs={}}}function s(i){const a=c.call(this,i);if(a)return a;const s=(0,o.getFullPath)(this.opts.uriResolver,i.root.baseId),{es5:l,lines:b}=this.opts.code,{ownProperties:d}=this.opts,f=new t.CodeGen(this.scope,{es5:l,lines:b,ownProperties:d});let p;i.$async&&(p=f.scopeValue("Error",{ref:e.default,code:t._`require("ajv/dist/runtime/validation_error").default`}));const m=f.scopeName("validate");i.validateName=m;const u={gen:f,allErrors:this.opts.allErrors,data:r.default.data,parentData:r.default.parentData,parentDataProperty:r.default.parentDataProperty,dataNames:[r.default.data],dataPathArr:[t.nil],dataLevel:0,dataTypes:[],definedProperties:new Set,topSchemaRef:f.scopeValue("schema",!0===this.opts.code.source?{ref:i.schema,code:(0,t.stringify)(i.schema)}:{ref:i.schema}),validateName:m,ValidationError:p,schema:i.schema,schemaEnv:i,rootId:s,baseId:i.baseId||s,schemaPath:t.nil,errSchemaPath:i.schemaPath||(this.opts.jtd?"":"#"),errorPath:t._`""`,opts:this.opts,self:this};let h;try{this._compilations.add(i),(0,n.validateFunctionCode)(u),f.optimize(this.opts.code.optimize);const e=f.toString();h=`${f.scopeRefs(r.default.scope)}return ${e}`,this.opts.code.process&&(h=this.opts.code.process(h,i));const o=new Function(`${r.default.self}`,`${r.default.scope}`,h)(this,this.scope.get());if(this.scope.value(m,{ref:o}),o.errors=null,o.schema=i.schema,o.schemaEnv=i,i.$async&&(o.$async=!0),!0===this.opts.code.source&&(o.source={validateName:m,validateCode:e,scopeValues:f._values}),this.opts.unevaluated){const{props:e,items:r}=u;o.evaluated={props:e instanceof t.Name?void 0:e,items:r instanceof t.Name?void 0:r,dynamicProps:e instanceof t.Name,dynamicItems:r instanceof t.Name},o.source&&(o.source.evaluated=(0,t.stringify)(o.evaluated))}return i.validate=o,i}catch(t){throw delete i.validate,delete i.validateName,h&&this.logger.error("Error compiling schema, function code:",h),t}finally{this._compilations.delete(i)}}function l(t){return(0,o.inlineRef)(t.schema,this.opts.inlineRefs)?t.schema:t.validate?t:s.call(this,t)}function c(t){for(const o of this._compilations)if(r=t,(e=o).schema===r.schema&&e.root===r.root&&e.baseId===r.baseId)return o;var e,r}function b(t,e){let r;for(;"string"==typeof(r=this.refs[e]);)e=r;return r||this.schemas[e]||d.call(this,t,e)}function d(t,e){const r=this.opts.uriResolver.parse(e),i=(0,o._getFullPath)(this.opts.uriResolver,r);let n=(0,o.getFullPath)(this.opts.uriResolver,t.baseId,void 0);if(Object.keys(t.schema).length>0&&i===n)return p.call(this,r,t);const l=(0,o.normalizeId)(i),c=this.refs[l]||this.schemas[l];if("string"==typeof c){const e=d.call(this,t,c);if("object"!=typeof(null==e?void 0:e.schema))return;return p.call(this,r,e)}if("object"==typeof(null==c?void 0:c.schema)){if(c.validate||s.call(this,c),l===(0,o.normalizeId)(e)){const{schema:e}=c,{schemaId:r}=this.opts,i=e[r];return i&&(n=(0,o.resolveUrl)(this.opts.uriResolver,n,i)),new a({schema:e,schemaId:r,root:t,baseId:n})}return p.call(this,r,c)}}Fn.SchemaEnv=a,Fn.compileSchema=s,Fn.resolveRef=function(t,e,r){var i;r=(0,o.resolveUrl)(this.opts.uriResolver,e,r);const n=t.refs[r];if(n)return n;let s=b.call(this,t,r);if(void 0===s){const o=null===(i=t.localRefs)||void 0===i?void 0:i[r],{schemaId:n}=this.opts;o&&(s=new a({schema:o,schemaId:n,root:t,baseId:e}))}return void 0!==s?t.refs[r]=l.call(this,s):void 0},Fn.getCompilingSchema=c,Fn.resolveSchema=d;const f=new Set(["properties","patternProperties","enum","dependencies","definitions"]);function p(t,{baseId:e,schema:r,root:n}){var s;if("/"!==(null===(s=t.fragment)||void 0===s?void 0:s[0]))return;for(const n of t.fragment.slice(1).split("/")){if("boolean"==typeof r)return;const t=r[(0,i.unescapeFragment)(n)];if(void 0===t)return;const a="object"==typeof(r=t)&&r[this.opts.schemaId];!f.has(n)&&a&&(e=(0,o.resolveUrl)(this.opts.uriResolver,e,a))}let l;if("boolean"!=typeof r&&r.$ref&&!(0,i.schemaHasRulesButRef)(r,this.RULES)){const t=(0,o.resolveUrl)(this.opts.uriResolver,e,r.$ref);l=d.call(this,n,t)}const{schemaId:c}=this.opts;return l=l||new a({schema:r,schemaId:c,root:n,baseId:e}),l.schema!==l.root.schema?l:void 0}return Fn}var Pn,On,Rn,Sn,Xn,Vn,Gn,Mn,Nn,In={$id:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#",description:"Meta-schema for $data reference (JSON AnySchema extension proposal)",type:"object",required:["$data"],properties:{$data:{type:"string",anyOf:[{format:"relative-json-pointer"},{format:"json-pointer"}]}},additionalProperties:!1},Bn={},Cn={exports:{}};function Ln(){if(Sn)return Rn;Sn=1;const{HEX:t}=On?Pn:(On=1,Pn={HEX:{0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15}}),e=/^(?:(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)$/u;function r(t){if(a(t,".")<3)return{host:t,isIPV4:!1};const r=t.match(e)||[],[o]=r;return o?{host:n(o,"."),isIPV4:!0}:{host:t,isIPV4:!1}}function o(e,r=!1){let o="",i=!0;for(const r of e){if(void 0===t[r])return;"0"!==r&&!0===i&&(i=!1),i||(o+=r)}return r&&0===o.length&&(o="0"),o}function i(t){if(a(t,":")<2)return{host:t,isIPV6:!1};const e=function(t){let e=0;const r={error:!1,address:"",zone:""},i=[],n=[];let a=!1,s=!1,l=!1;function c(){if(n.length){if(!1===a){const t=o(n);if(void 0===t)return r.error=!0,!1;i.push(t)}n.length=0}return!0}for(let o=0;o<t.length;o++){const b=t[o];if("["!==b&&"]"!==b)if(":"!==b)if("%"===b){if(!c())break;a=!0}else n.push(b);else{if(!0===s&&(l=!0),!c())break;if(e++,i.push(":"),e>7){r.error=!0;break}o-1>=0&&":"===t[o-1]&&(s=!0)}}return n.length&&(a?r.zone=n.join(""):l?i.push(n.join("")):i.push(o(n))),r.address=i.join(""),r}(t);if(e.error)return{host:t,isIPV6:!1};{let t=e.address,r=e.address;return e.zone&&(t+="%"+e.zone,r+="%25"+e.zone),{host:t,escapedHost:r,isIPV6:!0}}}function n(t,e){let r="",o=!0;const i=t.length;for(let n=0;n<i;n++){const a=t[n];"0"===a&&o?(n+1<=i&&t[n+1]===e||n+1===i)&&(r+=a,o=!1):(o=a===e,r+=a)}return r}function a(t,e){let r=0;for(let o=0;o<t.length;o++)t[o]===e&&r++;return r}const s=/^\.\.?\//u,l=/^\/\.(?:\/|$)/u,c=/^\/\.\.(?:\/|$)/u,b=/^\/?(?:.|\n)*?(?=\/|$)/u;return Rn={recomposeAuthority:function(t){const e=[];if(void 0!==t.userinfo&&(e.push(t.userinfo),e.push("@")),void 0!==t.host){let o=unescape(t.host);const n=r(o);if(n.isIPV4)o=n.host;else{const e=i(n.host);o=!0===e.isIPV6?`[${e.escapedHost}]`:t.host}e.push(o)}return"number"!=typeof t.port&&"string"!=typeof t.port||(e.push(":"),e.push(String(t.port))),e.length?e.join(""):void 0},normalizeComponentEncoding:function(t,e){const r=!0!==e?escape:unescape;return void 0!==t.scheme&&(t.scheme=r(t.scheme)),void 0!==t.userinfo&&(t.userinfo=r(t.userinfo)),void 0!==t.host&&(t.host=r(t.host)),void 0!==t.path&&(t.path=r(t.path)),void 0!==t.query&&(t.query=r(t.query)),void 0!==t.fragment&&(t.fragment=r(t.fragment)),t},removeDotSegments:function(t){const e=[];for(;t.length;)if(t.match(s))t=t.replace(s,"");else if(t.match(l))t=t.replace(l,"/");else if(t.match(c))t=t.replace(c,"/"),e.pop();else if("."===t||".."===t)t="";else{const r=t.match(b);if(!r)throw new Error("Unexpected dot segment condition");{const o=r[0];t=t.slice(o.length),e.push(o)}}return e.join("")},normalizeIPv4:r,normalizeIPv6:i,stringArrayToHexStripped:o},Rn}function Wn(){if(Gn)return Cn.exports;Gn=1;const{normalizeIPv6:t,normalizeIPv4:e,removeDotSegments:r,recomposeAuthority:o,normalizeComponentEncoding:i}=Ln(),n=function(){if(Vn)return Xn;Vn=1;const t=/^[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}$/iu,e=/([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu;function r(t){return"boolean"==typeof t.secure?t.secure:"wss"===String(t.scheme).toLowerCase()}function o(t){return t.host||(t.error=t.error||"HTTP URIs must have a host."),t}function i(t){const e="https"===String(t.scheme).toLowerCase();return t.port!==(e?443:80)&&""!==t.port||(t.port=void 0),t.path||(t.path="/"),t}const n={scheme:"http",domainHost:!0,parse:o,serialize:i},a={scheme:"ws",domainHost:!0,parse:function(t){return t.secure=r(t),t.resourceName=(t.path||"/")+(t.query?"?"+t.query:""),t.path=void 0,t.query=void 0,t},serialize:function(t){if(t.port!==(r(t)?443:80)&&""!==t.port||(t.port=void 0),"boolean"==typeof t.secure&&(t.scheme=t.secure?"wss":"ws",t.secure=void 0),t.resourceName){const[e,r]=t.resourceName.split("?");t.path=e&&"/"!==e?e:void 0,t.query=r,t.resourceName=void 0}return t.fragment=void 0,t}},s={http:n,https:{scheme:"https",domainHost:n.domainHost,parse:o,serialize:i},ws:a,wss:{scheme:"wss",domainHost:a.domainHost,parse:a.parse,serialize:a.serialize},urn:{scheme:"urn",parse:function(t,r){if(!t.path)return t.error="URN can not be parsed",t;const o=t.path.match(e);if(o){const e=r.scheme||t.scheme||"urn";t.nid=o[1].toLowerCase(),t.nss=o[2];const i=`${e}:${r.nid||t.nid}`,n=s[i];t.path=void 0,n&&(t=n.parse(t,r))}else t.error=t.error||"URN can not be parsed.";return t},serialize:function(t,e){const r=e.scheme||t.scheme||"urn",o=t.nid.toLowerCase(),i=`${r}:${e.nid||o}`,n=s[i];n&&(t=n.serialize(t,e));const a=t,l=t.nss;return a.path=`${o||e.nid}:${l}`,e.skipEscape=!0,a},skipNormalize:!0},"urn:uuid":{scheme:"urn:uuid",parse:function(e,r){const o=e;return o.uuid=o.nss,o.nss=void 0,r.tolerant||o.uuid&&t.test(o.uuid)||(o.error=o.error||"UUID is not valid."),o},serialize:function(t){const e=t;return e.nss=(t.uuid||"").toLowerCase(),e},skipNormalize:!0}};return Xn=s}();function a(t,e,o,i){const n={};return i||(t=b(s(t,o),o),e=b(s(e,o),o)),!(o=o||{}).tolerant&&e.scheme?(n.scheme=e.scheme,n.userinfo=e.userinfo,n.host=e.host,n.port=e.port,n.path=r(e.path||""),n.query=e.query):(void 0!==e.userinfo||void 0!==e.host||void 0!==e.port?(n.userinfo=e.userinfo,n.host=e.host,n.port=e.port,n.path=r(e.path||""),n.query=e.query):(e.path?("/"===e.path.charAt(0)?n.path=r(e.path):(void 0===t.userinfo&&void 0===t.host&&void 0===t.port||t.path?t.path?n.path=t.path.slice(0,t.path.lastIndexOf("/")+1)+e.path:n.path=e.path:n.path="/"+e.path,n.path=r(n.path)),n.query=e.query):(n.path=t.path,void 0!==e.query?n.query=e.query:n.query=t.query),n.userinfo=t.userinfo,n.host=t.host,n.port=t.port),n.scheme=t.scheme),n.fragment=e.fragment,n}function s(t,e){const i={host:t.host,scheme:t.scheme,userinfo:t.userinfo,port:t.port,path:t.path,query:t.query,nid:t.nid,nss:t.nss,uuid:t.uuid,fragment:t.fragment,reference:t.reference,resourceName:t.resourceName,secure:t.secure,error:""},a=Object.assign({},e),s=[],l=n[(a.scheme||i.scheme||"").toLowerCase()];l&&l.serialize&&l.serialize(i,a),void 0!==i.path&&(a.skipEscape?i.path=unescape(i.path):(i.path=escape(i.path),void 0!==i.scheme&&(i.path=i.path.split("%3A").join(":")))),"suffix"!==a.reference&&i.scheme&&s.push(i.scheme,":");const c=o(i);if(void 0!==c&&("suffix"!==a.reference&&s.push("//"),s.push(c),i.path&&"/"!==i.path.charAt(0)&&s.push("/")),void 0!==i.path){let t=i.path;a.absolutePath||l&&l.absolutePath||(t=r(t)),void 0===c&&(t=t.replace(/^\/\//u,"/%2F")),s.push(t)}return void 0!==i.query&&s.push("?",i.query),void 0!==i.fragment&&s.push("#",i.fragment),s.join("")}const l=Array.from({length:127},((t,e)=>/[^!"$&'()*+,\-.;=_`a-z{}~]/u.test(String.fromCharCode(e))));const c=/^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;function b(r,o){const i=Object.assign({},o),a={scheme:void 0,userinfo:void 0,host:"",port:void 0,path:"",query:void 0,fragment:void 0},s=-1!==r.indexOf("%");let b=!1;"suffix"===i.reference&&(r=(i.scheme?i.scheme+":":"")+"//"+r);const d=r.match(c);if(d){if(a.scheme=d[1],a.userinfo=d[3],a.host=d[4],a.port=parseInt(d[5],10),a.path=d[6]||"",a.query=d[7],a.fragment=d[8],isNaN(a.port)&&(a.port=d[5]),a.host){const r=e(a.host);if(!1===r.isIPV4){const e=t(r.host);a.host=e.host.toLowerCase(),b=e.isIPV6}else a.host=r.host,b=!0}void 0!==a.scheme||void 0!==a.userinfo||void 0!==a.host||void 0!==a.port||void 0!==a.query||a.path?void 0===a.scheme?a.reference="relative":void 0===a.fragment?a.reference="absolute":a.reference="uri":a.reference="same-document",i.reference&&"suffix"!==i.reference&&i.reference!==a.reference&&(a.error=a.error||"URI is not a "+i.reference+" reference.");const r=n[(i.scheme||a.scheme||"").toLowerCase()];if(!(i.unicodeSupport||r&&r.unicodeSupport)&&a.host&&(i.domainHost||r&&r.domainHost)&&!1===b&&function(t){let e=0;for(let r=0,o=t.length;r<o;++r)if(e=t.charCodeAt(r),e>126||l[e])return!0;return!1}(a.host))try{a.host=URL.domainToASCII(a.host.toLowerCase())}catch(t){a.error=a.error||"Host's domain name can not be converted to ASCII: "+t}(!r||r&&!r.skipNormalize)&&(s&&void 0!==a.scheme&&(a.scheme=unescape(a.scheme)),s&&void 0!==a.host&&(a.host=unescape(a.host)),a.path&&(a.path=escape(unescape(a.path))),a.fragment&&(a.fragment=encodeURI(decodeURIComponent(a.fragment)))),r&&r.parse&&r.parse(a,i)}else a.error=a.error||"URI can not be parsed.";return a}const d={SCHEMES:n,normalize:function(t,e){return"string"==typeof t?t=s(b(t,e),e):"object"==typeof t&&(t=b(s(t,e),e)),t},resolve:function(t,e,r){const o=Object.assign({scheme:"null"},r);return s(a(b(t,o),b(e,o),o,!0),{...o,skipEscape:!0})},resolveComponents:a,equal:function(t,e,r){return"string"==typeof t?(t=unescape(t),t=s(i(b(t,r),!0),{...r,skipEscape:!0})):"object"==typeof t&&(t=s(i(t,!0),{...r,skipEscape:!0})),"string"==typeof e?(e=unescape(e),e=s(i(b(e,r),!0),{...r,skipEscape:!0})):"object"==typeof e&&(e=s(i(e,!0),{...r,skipEscape:!0})),t.toLowerCase()===e.toLowerCase()},serialize:s,parse:b};return Cn.exports=d,Cn.exports.default=d,Cn.exports.fastUri=d,Cn.exports}function Zn(){return Nn||(Nn=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=void 0;var e=xn();Object.defineProperty(t,"KeywordCxt",{enumerable:!0,get:function(){return e.KeywordCxt}});var r=Xi();Object.defineProperty(t,"_",{enumerable:!0,get:function(){return r._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return r.str}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return r.stringify}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return r.nil}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return r.Name}}),Object.defineProperty(t,"CodeGen",{enumerable:!0,get:function(){return r.CodeGen}});const o=jn(),i=En(),n=Ti(),a=qn(),s=Xi(),l=wn(),c=$i(),b=Mi(),d=In,f=function(){if(Mn)return Bn;Mn=1,Object.defineProperty(Bn,"J",{value:!0});const t=Wn();return t.code='require("ajv/dist/runtime/uri").default',Bn.default=t,Bn}(),p=(t,e)=>new RegExp(t,e);p.code="new RegExp";const m=["removeAdditional","useDefaults","coerceTypes"],u=new Set(["validate","serialize","parse","wrapper","root","schema","keyword","pattern","formats","validate$data","func","obj","Error"]),h={errorDataPath:"",format:"`validateFormats: false` can be used instead.",nullable:'"nullable" keyword is supported by default.',jsonPointers:"Deprecated jsPropertySyntax can be used instead.",extendRefs:"Deprecated ignoreKeywordsWithRef can be used instead.",missingRefs:"Pass empty schema with $id that should be ignored to ajv.addSchema.",processCode:"Use option `code: {process: (code, schemaEnv: object) => string}`",sourceCode:"Use option `code: {source: true}`",strictDefaults:"It is default now, see option `strict`.",strictKeywords:"It is default now, see option `strict`.",uniqueItems:'"uniqueItems" keyword is always validated.',unknownFormats:"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).",cache:"Map is used as cache, schema object as key.",serialize:"Map is used as cache, schema object as key.",ajvErrors:"It is default now."},g={ignoreKeywordsWithRef:"",jsPropertySyntax:"",unicode:'"minLength"/"maxLength" account for unicode characters by default.'};function v(t){var e,r,o,i,n,a,s,l,c,b,d,m,u,h,g,v,w,x,y,k,j,D,z,E,A;const F=t.strict,q=null===(e=t.code)||void 0===e?void 0:e.optimize,P=!0===q||void 0===q?1:q||0,O=null!==(o=null===(r=t.code)||void 0===r?void 0:r.regExp)&&void 0!==o?o:p,R=null!==(i=t.uriResolver)&&void 0!==i?i:f.default;return{strictSchema:null===(a=null!==(n=t.strictSchema)&&void 0!==n?n:F)||void 0===a||a,strictNumbers:null===(l=null!==(s=t.strictNumbers)&&void 0!==s?s:F)||void 0===l||l,strictTypes:null!==(b=null!==(c=t.strictTypes)&&void 0!==c?c:F)&&void 0!==b?b:"log",strictTuples:null!==(m=null!==(d=t.strictTuples)&&void 0!==d?d:F)&&void 0!==m?m:"log",strictRequired:null!==(h=null!==(u=t.strictRequired)&&void 0!==u?u:F)&&void 0!==h&&h,code:t.code?{...t.code,optimize:P,regExp:O}:{optimize:P,regExp:O},loopRequired:null!==(g=t.loopRequired)&&void 0!==g?g:200,loopEnum:null!==(v=t.loopEnum)&&void 0!==v?v:200,meta:null===(w=t.meta)||void 0===w||w,messages:null===(x=t.messages)||void 0===x||x,inlineRefs:null===(y=t.inlineRefs)||void 0===y||y,schemaId:null!==(k=t.schemaId)&&void 0!==k?k:"$id",addUsedSchema:null===(j=t.addUsedSchema)||void 0===j||j,validateSchema:null===(D=t.validateSchema)||void 0===D||D,validateFormats:null===(z=t.validateFormats)||void 0===z||z,unicodeRegExp:null===(E=t.unicodeRegExp)||void 0===E||E,int32range:null===(A=t.int32range)||void 0===A||A,uriResolver:R}}class w{constructor(t={}){this.schemas={},this.refs={},this.formats={},this._compilations=new Set,this._loading={},this._cache=new Map,t=this.opts={...t,...v(t)};const{es5:e,lines:r}=this.opts.code;this.scope=new s.ValueScope({scope:{},prefixes:u,es5:e,lines:r}),this.logger=function(t){if(!1===t)return E;if(void 0===t)return console;if(t.log&&t.warn&&t.error)return t;throw new Error("logger must implement log, warn and error methods")}(t.logger);const o=t.validateFormats;t.validateFormats=!1,this.RULES=(0,n.getRules)(),x.call(this,h,t,"NOT SUPPORTED"),x.call(this,g,t,"DEPRECATED","warn"),this._metaOpts=z.call(this),t.formats&&j.call(this),this._addVocabularies(),this._addDefaultMetaSchema(),t.keywords&&D.call(this,t.keywords),"object"==typeof t.meta&&this.addMetaSchema(t.meta),k.call(this),t.validateFormats=o}_addVocabularies(){this.addKeyword("$async")}_addDefaultMetaSchema(){const{$data:t,meta:e,schemaId:r}=this.opts;let o=d;"id"===r&&(o={...d},o.id=o.$id,delete o.$id),e&&t&&this.addMetaSchema(o,o[r],!1)}defaultMeta(){const{meta:t,schemaId:e}=this.opts;return this.opts.defaultMeta="object"==typeof t?t[e]||t:void 0}validate(t,e){let r;if("string"==typeof t){if(r=this.getSchema(t),!r)throw new Error(`no schema with key or ref "${t}"`)}else r=this.compile(t);const o=r(e);return"$async"in r||(this.errors=r.errors),o}compile(t,e){const r=this._addSchema(t,e);return r.validate||this._compileSchemaEnv(r)}compileAsync(t,e){if("function"!=typeof this.opts.loadSchema)throw new Error("options.loadSchema should be a function");const{loadSchema:r}=this.opts;return o.call(this,t,e);async function o(t,e){await n.call(this,t.$schema);const r=this._addSchema(t,e);return r.validate||a.call(this,r)}async function n(t){t&&!this.getSchema(t)&&await o.call(this,{$ref:t},!0)}async function a(t){try{return this._compileSchemaEnv(t)}catch(e){if(!(e instanceof i.default))throw e;return s.call(this,e),await l.call(this,e.missingSchema),a.call(this,t)}}function s({missingSchema:t,missingRef:e}){if(this.refs[t])throw new Error(`AnySchema ${t} is loaded but ${e} cannot be resolved`)}async function l(t){const r=await c.call(this,t);this.refs[t]||await n.call(this,r.$schema),this.refs[t]||this.addSchema(r,t,e)}async function c(t){const e=this._loading[t];if(e)return e;try{return await(this._loading[t]=r(t))}finally{delete this._loading[t]}}}addSchema(t,e,r,o=this.opts.validateSchema){if(Array.isArray(t)){for(const e of t)this.addSchema(e,void 0,r,o);return this}let i;if("object"==typeof t){const{schemaId:e}=this.opts;if(i=t[e],void 0!==i&&"string"!=typeof i)throw new Error(`schema ${e} must be string`)}return e=(0,l.normalizeId)(e||i),this._checkUnique(e),this.schemas[e]=this._addSchema(t,r,e,o,!0),this}addMetaSchema(t,e,r=this.opts.validateSchema){return this.addSchema(t,e,!0,r),this}validateSchema(t,e){if("boolean"==typeof t)return!0;let r;if(r=t.$schema,void 0!==r&&"string"!=typeof r)throw new Error("$schema must be a string");if(r=r||this.opts.defaultMeta||this.defaultMeta(),!r)return this.logger.warn("meta-schema not available"),this.errors=null,!0;const o=this.validate(r,t);if(!o&&e){const t="schema is invalid: "+this.errorsText();if("log"!==this.opts.validateSchema)throw new Error(t);this.logger.error(t)}return o}getSchema(t){let e;for(;"string"==typeof(e=y.call(this,t));)t=e;if(void 0===e){const{schemaId:r}=this.opts,o=new a.SchemaEnv({schema:{},schemaId:r});if(e=a.resolveSchema.call(this,o,t),!e)return;this.refs[t]=e}return e.validate||this._compileSchemaEnv(e)}removeSchema(t){if(t instanceof RegExp)return this._removeAllSchemas(this.schemas,t),this._removeAllSchemas(this.refs,t),this;switch(typeof t){case"undefined":return this._removeAllSchemas(this.schemas),this._removeAllSchemas(this.refs),this._cache.clear(),this;case"string":{const e=y.call(this,t);return"object"==typeof e&&this._cache.delete(e.schema),delete this.schemas[t],delete this.refs[t],this}case"object":{const e=t;this._cache.delete(e);let r=t[this.opts.schemaId];return r&&(r=(0,l.normalizeId)(r),delete this.schemas[r],delete this.refs[r]),this}default:throw new Error("ajv.removeSchema: invalid parameter")}}addVocabulary(t){for(const e of t)this.addKeyword(e);return this}addKeyword(t,e){let r;if("string"==typeof t)r=t,"object"==typeof e&&(this.logger.warn("these parameters are deprecated, see docs for addKeyword"),e.keyword=r);else{if("object"!=typeof t||void 0!==e)throw new Error("invalid addKeywords parameters");if(r=(e=t).keyword,Array.isArray(r)&&!r.length)throw new Error("addKeywords: keyword must be string or non-empty array")}if(F.call(this,r,e),!e)return(0,b.eachItem)(r,(t=>q.call(this,t))),this;O.call(this,e);const o={...e,type:(0,c.getJSONTypes)(e.type),schemaType:(0,c.getJSONTypes)(e.schemaType)};return(0,b.eachItem)(r,0===o.type.length?t=>q.call(this,t,o):t=>o.type.forEach((e=>q.call(this,t,o,e)))),this}getKeyword(t){const e=this.RULES.all[t];return"object"==typeof e?e.definition:!!e}removeKeyword(t){const{RULES:e}=this;delete e.keywords[t],delete e.all[t];for(const r of e.rules){const e=r.rules.findIndex((e=>e.keyword===t));e>=0&&r.rules.splice(e,1)}return this}addFormat(t,e){return"string"==typeof e&&(e=new RegExp(e)),this.formats[t]=e,this}errorsText(t=this.errors,{separator:e=", ",dataVar:r="data"}={}){return t&&0!==t.length?t.map((t=>`${r}${t.instancePath} ${t.message}`)).reduce(((t,r)=>t+e+r)):"No errors"}$dataMetaSchema(t,e){const r=this.RULES.all;t=JSON.parse(JSON.stringify(t));for(const o of e){const e=o.split("/").slice(1);let i=t;for(const t of e)i=i[t];for(const t in r){const e=r[t];if("object"!=typeof e)continue;const{$data:o}=e.definition,n=i[t];o&&n&&(i[t]=S(n))}}return t}_removeAllSchemas(t,e){for(const r in t){const o=t[r];e&&!e.test(r)||("string"==typeof o?delete t[r]:o&&!o.meta&&(this._cache.delete(o.schema),delete t[r]))}}_addSchema(t,e,r,o=this.opts.validateSchema,i=this.opts.addUsedSchema){let n;const{schemaId:s}=this.opts;if("object"==typeof t)n=t[s];else{if(this.opts.jtd)throw new Error("schema must be object");if("boolean"!=typeof t)throw new Error("schema must be object or boolean")}let c=this._cache.get(t);if(void 0!==c)return c;r=(0,l.normalizeId)(n||r);const b=l.getSchemaRefs.call(this,t,r);return c=new a.SchemaEnv({schema:t,schemaId:s,meta:e,baseId:r,localRefs:b}),this._cache.set(c.schema,c),i&&!r.startsWith("#")&&(r&&this._checkUnique(r),this.refs[r]=c),o&&this.validateSchema(t,!0),c}_checkUnique(t){if(this.schemas[t]||this.refs[t])throw new Error(`schema with key or id "${t}" already exists`)}_compileSchemaEnv(t){if(t.meta?this._compileMetaSchema(t):a.compileSchema.call(this,t),!t.validate)throw new Error("ajv implementation error");return t.validate}_compileMetaSchema(t){const e=this.opts;this.opts=this._metaOpts;try{a.compileSchema.call(this,t)}finally{this.opts=e}}}function x(t,e,r,o="error"){for(const i in t){const n=i;n in e&&this.logger[o](`${r}: option ${i}. ${t[n]}`)}}function y(t){return t=(0,l.normalizeId)(t),this.schemas[t]||this.refs[t]}function k(){const t=this.opts.schemas;if(t)if(Array.isArray(t))this.addSchema(t);else for(const e in t)this.addSchema(t[e],e)}function j(){for(const t in this.opts.formats){const e=this.opts.formats[t];e&&this.addFormat(t,e)}}function D(t){if(Array.isArray(t))this.addVocabulary(t);else{this.logger.warn("keywords option as map is deprecated, pass array");for(const e in t){const r=t[e];r.keyword||(r.keyword=e),this.addKeyword(r)}}}function z(){const t={...this.opts};for(const e of m)delete t[e];return t}w.ValidationError=o.default,w.MissingRefError=i.default,t.default=w;const E={log(){},warn(){},error(){}};const A=/^[a-z_$][a-z0-9_$:-]*$/i;function F(t,e){const{RULES:r}=this;if((0,b.eachItem)(t,(t=>{if(r.keywords[t])throw new Error(`Keyword ${t} is already defined`);if(!A.test(t))throw new Error(`Keyword ${t} has invalid name`)})),e&&e.$data&&!("code"in e)&&!("validate"in e))throw new Error('$data keyword must have "code" or "validate" function')}function q(t,e,r){var o;const i=null==e?void 0:e.post;if(r&&i)throw new Error('keyword with "post" flag cannot have "type"');const{RULES:n}=this;let a=i?n.post:n.rules.find((({type:t})=>t===r));if(a||(a={type:r,rules:[]},n.rules.push(a)),n.keywords[t]=!0,!e)return;const s={keyword:t,definition:{...e,type:(0,c.getJSONTypes)(e.type),schemaType:(0,c.getJSONTypes)(e.schemaType)}};e.before?P.call(this,a,s,e.before):a.rules.push(s),n.all[t]=s,null===(o=e.implements)||void 0===o||o.forEach((t=>this.addKeyword(t)))}function P(t,e,r){const o=t.rules.findIndex((t=>t.keyword===r));o>=0?t.rules.splice(o,0,e):(t.rules.push(e),this.logger.warn(`rule ${r} is not defined`))}function O(t){let{metaSchema:e}=t;void 0!==e&&(t.$data&&this.opts.$data&&(e=S(e)),t.validateSchema=this.compile(e,!0))}const R={$ref:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"};function S(t){return{anyOf:[t,R]}}}(ji)),ji}var Hn,Kn={},Tn={},Jn={};var Un,Yn,Qn={};function $n(){if(Yn)return Tn;Yn=1,Object.defineProperty(Tn,"J",{value:!0});const t=function(){if(Hn)return Jn;Hn=1,Object.defineProperty(Jn,"J",{value:!0});const t={keyword:"id",code(){throw new Error('NOT SUPPORTED: keyword "id", use "$id" for schema ID')}};return Jn.default=t,Jn}(),e=function(){if(Un)return Qn;Un=1,Object.defineProperty(Qn,"J",{value:!0}),Qn.callRef=Qn.getValidate=void 0;const t=En(),e=an(),r=Xi(),o=Li(),i=qn(),n=Mi(),a={keyword:"$ref",schemaType:"string",code(e){const{gen:o,schema:n,it:a}=e,{baseId:c,schemaEnv:b,validateName:d,opts:f,self:p}=a,{root:m}=b;if(("#"===n||"#/"===n)&&c===m.baseId)return function(){if(b===m)return l(e,d,b,b.$async);const t=o.scopeValue("root",{ref:m});return l(e,r._`${t}.validate`,m,m.$async)}();const u=i.resolveRef.call(p,m,c,n);if(void 0===u)throw new t.default(a.opts.uriResolver,c,n);return u instanceof i.SchemaEnv?function(t){const r=s(e,t);l(e,r,t,t.$async)}(u):function(t){const i=o.scopeValue("schema",!0===f.code.source?{ref:t,code:(0,r.stringify)(t)}:{ref:t}),a=o.name("valid"),s=e.subschema({schema:t,dataTypes:[],schemaPath:r.nil,topSchemaRef:i,errSchemaPath:n},a);e.mergeEvaluated(s),e.ok(a)}(u)}};function s(t,e){const{gen:o}=t;return e.validate?o.scopeValue("validate",{ref:e.validate}):r._`${o.scopeValue("wrapper",{ref:e})}.validate`}function l(t,i,a,s){const{gen:l,it:c}=t,{allErrors:b,schemaEnv:d,opts:f}=c,p=f.passContext?o.default.this:r.nil;function m(t){const e=r._`${t}.errors`;l.assign(o.default.vErrors,r._`${o.default.vErrors} === null ? ${e} : ${o.default.vErrors}.concat(${e})`),l.assign(o.default.errors,r._`${o.default.vErrors}.length`)}function u(t){var e;if(!c.opts.unevaluated)return;const o=null===(e=null==a?void 0:a.validate)||void 0===e?void 0:e.evaluated;if(!0!==c.props)if(o&&!o.dynamicProps)void 0!==o.props&&(c.props=n.mergeEvaluated.props(l,o.props,c.props));else{const e=l.var("props",r._`${t}.evaluated.props`);c.props=n.mergeEvaluated.props(l,e,c.props,r.Name)}if(!0!==c.items)if(o&&!o.dynamicItems)void 0!==o.items&&(c.items=n.mergeEvaluated.items(l,o.items,c.items));else{const e=l.var("items",r._`${t}.evaluated.items`);c.items=n.mergeEvaluated.items(l,e,c.items,r.Name)}}s?function(){if(!d.$async)throw new Error("async schema referenced by sync schema");const o=l.let("valid");l.try((()=>{l.code(r._`await ${(0,e.callValidateCode)(t,i,p)}`),u(i),b||l.assign(o,!0)}),(t=>{l.if(r._`!(${t} instanceof ${c.ValidationError})`,(()=>l.throw(t))),m(t),b||l.assign(o,!1)})),t.ok(o)}():t.result((0,e.callValidateCode)(t,i,p),(()=>u(i)),(()=>m(i)))}return Qn.getValidate=s,Qn.callRef=l,Qn.default=a,Qn}(),r=["$schema","$id","$defs","$vocabulary",{keyword:"$comment"},"definitions",t.default,e.default];return Tn.default=r,Tn}var _n,ta={},ea={};var ra,oa={};var ia,na,aa={},sa={};function la(){if(na)return aa;na=1,Object.defineProperty(aa,"J",{value:!0});const t=Xi(),e=Mi(),r=function(){if(ia)return sa;function t(t){const e=t.length;let r,o=0,i=0;for(;i<e;)o++,r=t.charCodeAt(i++),r>=55296&&r<=56319&&i<e&&(r=t.charCodeAt(i),56320==(64512&r)&&i++);return o}return ia=1,Object.defineProperty(sa,"J",{value:!0}),sa.default=t,t.code='require("ajv/dist/runtime/ucs2length").default',sa}(),o={message({keyword:e,schemaCode:r}){const o="maxLength"===e?"more":"fewer";return t.str`must NOT have ${o} than ${r} characters`},params:({schemaCode:e})=>t._`{limit: ${e}}`},i={keyword:["maxLength","minLength"],type:"string",schemaType:"number",$data:!0,error:o,code(o){const{keyword:i,data:n,schemaCode:a,it:s}=o,l="maxLength"===i?t.operators.GT:t.operators.LT,c=!1===s.opts.unicode?t._`${n}.length`:t._`${(0,e.useFunc)(o.gen,r.default)}(${n})`;o.fail$data(t._`${c} ${l} ${a}`)}};return aa.default=i,aa}var ca,ba={};var da,fa={};var pa,ma={};function ua(){if(pa)return ma;pa=1,Object.defineProperty(ma,"J",{value:!0});const t=an(),e=Xi(),r=Mi(),o={keyword:"required",type:"object",schemaType:"array",$data:!0,error:{message:({params:{missingProperty:t}})=>e.str`must have required property '${t}'`,params:({params:{missingProperty:t}})=>e._`{missingProperty: ${t}}`},code(o){const{gen:i,schema:n,schemaCode:a,data:s,$data:l,it:c}=o,{opts:b}=c;if(!l&&0===n.length)return;const d=n.length>=b.loopRequired;if(c.allErrors?function(){if(d||l)o.block$data(e.nil,f);else for(const e of n)(0,t.checkReportMissingProp)(o,e)}():function(){const r=i.let("missing");if(d||l){const n=i.let("valid",!0);o.block$data(n,(()=>function(r,n){o.setParams({missingProperty:r}),i.forOf(r,a,(()=>{i.assign(n,(0,t.propertyInData)(i,s,r,b.ownProperties)),i.if((0,e.not)(n),(()=>{o.error(),i.break()}))}),e.nil)}(r,n))),o.ok(n)}else i.if((0,t.checkMissingProp)(o,n,r)),(0,t.reportMissingProp)(o,r),i.else()}(),b.strictRequired){const t=o.parentSchema.properties,{definedProperties:e}=o.it;for(const o of n)if(void 0===(null==t?void 0:t[o])&&!e.has(o)){const t=`required property "${o}" is not defined at "${c.schemaEnv.baseId+c.errSchemaPath}" (strictRequired)`;(0,r.checkStrictMode)(c,t,c.opts.strictRequired)}}function f(){i.forOf("prop",a,(e=>{o.setParams({missingProperty:e}),i.if((0,t.noPropertyInData)(i,s,e,b.ownProperties),(()=>o.error()))}))}}};return ma.default=o,ma}var ha,ga={};var va,wa,xa={},ya={};function ka(){if(va)return ya;va=1,Object.defineProperty(ya,"J",{value:!0});const t=pn();return t.code='require("ajv/dist/runtime/equal").default',ya.default=t,ya}function ja(){if(wa)return xa;wa=1,Object.defineProperty(xa,"J",{value:!0});const t=$i(),e=Xi(),r=Mi(),o=ka(),i={message:({params:{i:t,j:r}})=>e.str`must NOT have duplicate items (items ## ${r} and ${t} are identical)`,params:({params:{i:t,j:r}})=>e._`{i: ${t}, j: ${r}}`},n={keyword:"uniqueItems",type:"array",schemaType:"boolean",$data:!0,error:i,code(i){const{gen:n,data:a,$data:s,schema:l,parentSchema:c,schemaCode:b,it:d}=i;if(!s&&!l)return;const f=n.let("valid"),p=c.items?(0,t.getSchemaTypes)(c.items):[];function m(r,o){const s=n.name("item"),l=(0,t.checkDataTypes)(p,s,d.opts.strictNumbers,t.DataType.Wrong),c=n.const("indices",e._`{}`);n.for(e._`;${r}--;`,(()=>{n.let(s,e._`${a}[${r}]`),n.if(l,e._`continue`),p.length>1&&n.if(e._`typeof ${s} == "string"`,e._`${s} += "_"`),n.if(e._`typeof ${c}[${s}] == "number"`,(()=>{n.assign(o,e._`${c}[${s}]`),i.error(),n.assign(f,!1).break()})).code(e._`${c}[${s}] = ${r}`)}))}function u(t,s){const l=(0,r.useFunc)(n,o.default),c=n.name("outer");n.label(c).for(e._`;${t}--;`,(()=>n.for(e._`${s} = ${t}; ${s}--;`,(()=>n.if(e._`${l}(${a}[${t}], ${a}[${s}])`,(()=>{i.error(),n.assign(f,!1).break(c)}))))))}i.block$data(f,(function(){const t=n.let("i",e._`${a}.length`),r=n.let("j");i.setParams({i:t,j:r}),n.assign(f,!0),n.if(e._`${t} > 1`,(()=>(p.length>0&&!p.some((t=>"object"===t||"array"===t))?m:u)(t,r)))}),e._`${b} === false`),i.ok(f)}};return xa.default=n,xa}var Da,za={};var Ea,Aa,Fa={};function qa(){if(Ea)return Fa;Ea=1,Object.defineProperty(Fa,"J",{value:!0});const t=Xi(),e=Mi(),r=ka(),o={keyword:"enum",schemaType:"array",$data:!0,error:{message:"must be equal to one of the allowed values",params:({schemaCode:e})=>t._`{allowedValues: ${e}}`},code(o){const{gen:i,data:n,$data:a,schema:s,schemaCode:l,it:c}=o;if(!a&&0===s.length)throw new Error("enum must have non-empty array");const b=s.length>=c.opts.loopEnum;let d;const f=()=>null!=d?d:d=(0,e.useFunc)(i,r.default);let p;if(b||a)p=i.let("valid"),o.block$data(p,(function(){i.assign(p,!1),i.forOf("v",l,(e=>i.if(t._`${f()}(${n}, ${e})`,(()=>i.assign(p,!0).break()))))}));else{if(!Array.isArray(s))throw new Error("ajv implementation error");const e=i.const("vSchema",l);p=(0,t.or)(...s.map(((r,o)=>function(e,r){const o=s[r];return"object"==typeof o&&null!==o?t._`${f()}(${n}, ${e}[${r}])`:t._`${n} === ${o}`}(e,o))))}o.pass(p)}};return Fa.default=o,Fa}function Pa(){if(Aa)return ta;Aa=1,Object.defineProperty(ta,"J",{value:!0});const t=function(){if(_n)return ea;_n=1,Object.defineProperty(ea,"J",{value:!0});const t=Xi(),e=t.operators,r={maximum:{okStr:"<=",ok:e.LTE,fail:e.GT},minimum:{okStr:">=",ok:e.GTE,fail:e.LT},exclusiveMaximum:{okStr:"<",ok:e.LT,fail:e.GTE},exclusiveMinimum:{okStr:">",ok:e.GT,fail:e.LTE}},o={message:({keyword:e,schemaCode:o})=>t.str`must be ${r[e].okStr} ${o}`,params:({keyword:e,schemaCode:o})=>t._`{comparison: ${r[e].okStr}, limit: ${o}}`},i={keyword:Object.keys(r),type:"number",schemaType:"number",$data:!0,error:o,code(e){const{keyword:o,data:i,schemaCode:n}=e;e.fail$data(t._`${i} ${r[o].fail} ${n} || isNaN(${i})`)}};return ea.default=i,ea}(),e=function(){if(ra)return oa;ra=1,Object.defineProperty(oa,"J",{value:!0});const t=Xi(),e={keyword:"multipleOf",type:"number",schemaType:"number",$data:!0,error:{message:({schemaCode:e})=>t.str`must be multiple of ${e}`,params:({schemaCode:e})=>t._`{multipleOf: ${e}}`},code(e){const{gen:r,data:o,schemaCode:i,it:n}=e,a=n.opts.multipleOfPrecision,s=r.let("res"),l=a?t._`Math.abs(Math.round(${s}) - ${s}) > 1e-${a}`:t._`${s} !== parseInt(${s})`;e.fail$data(t._`(${i} === 0 || (${s} = ${o}/${i}, ${l}))`)}};return oa.default=e,oa}(),r=la(),o=function(){if(ca)return ba;ca=1,Object.defineProperty(ba,"J",{value:!0});const t=an(),e=Xi(),r={keyword:"pattern",type:"string",schemaType:"string",$data:!0,error:{message:({schemaCode:t})=>e.str`must match pattern "${t}"`,params:({schemaCode:t})=>e._`{pattern: ${t}}`},code(r){const{data:o,$data:i,schema:n,schemaCode:a,it:s}=r,l=s.opts.unicodeRegExp?"u":"",c=i?e._`(new RegExp(${a}, ${l}))`:(0,t.usePattern)(r,n);r.fail$data(e._`!${c}.test(${o})`)}};return ba.default=r,ba}(),i=function(){if(da)return fa;da=1,Object.defineProperty(fa,"J",{value:!0});const t=Xi(),e={message({keyword:e,schemaCode:r}){const o="maxProperties"===e?"more":"fewer";return t.str`must NOT have ${o} than ${r} properties`},params:({schemaCode:e})=>t._`{limit: ${e}}`},r={keyword:["maxProperties","minProperties"],type:"object",schemaType:"number",$data:!0,error:e,code(e){const{keyword:r,data:o,schemaCode:i}=e,n="maxProperties"===r?t.operators.GT:t.operators.LT;e.fail$data(t._`Object.keys(${o}).length ${n} ${i}`)}};return fa.default=r,fa}(),n=ua(),a=function(){if(ha)return ga;ha=1,Object.defineProperty(ga,"J",{value:!0});const t=Xi(),e={message({keyword:e,schemaCode:r}){const o="maxItems"===e?"more":"fewer";return t.str`must NOT have ${o} than ${r} items`},params:({schemaCode:e})=>t._`{limit: ${e}}`},r={keyword:["maxItems","minItems"],type:"array",schemaType:"number",$data:!0,error:e,code(e){const{keyword:r,data:o,schemaCode:i}=e,n="maxItems"===r?t.operators.GT:t.operators.LT;e.fail$data(t._`${o}.length ${n} ${i}`)}};return ga.default=r,ga}(),s=ja(),l=function(){if(Da)return za;Da=1,Object.defineProperty(za,"J",{value:!0});const t=Xi(),e=Mi(),r=ka(),o={keyword:"const",$data:!0,error:{message:"must be equal to constant",params:({schemaCode:e})=>t._`{allowedValue: ${e}}`},code(o){const{gen:i,data:n,$data:a,schemaCode:s,schema:l}=o;a||l&&"object"==typeof l?o.fail$data(t._`!${(0,e.useFunc)(i,r.default)}(${n}, ${s})`):o.fail(t._`${l} !== ${n}`)}};return za.default=o,za}(),c=qa(),b=[t.default,e.default,r.default,o.default,i.default,n.default,a.default,s.default,{keyword:"type",schemaType:["string","array"]},{keyword:"nullable",schemaType:"boolean"},l.default,c.default];return ta.default=b,ta}var Oa,Ra={},Sa={};function Xa(){if(Oa)return Sa;Oa=1,Object.defineProperty(Sa,"J",{value:!0}),Sa.validateAdditionalItems=void 0;const t=Xi(),e=Mi(),r={keyword:"additionalItems",type:"array",schemaType:["boolean","object"],before:"uniqueItems",error:{message:({params:{len:e}})=>t.str`must NOT have more than ${e} items`,params:({params:{len:e}})=>t._`{limit: ${e}}`},code(t){const{parentSchema:r,it:i}=t,{items:n}=r;Array.isArray(n)?o(t,n):(0,e.checkStrictMode)(i,'"additionalItems" is ignored when "items" is not an array of schemas')}};function o(r,o){const{gen:i,schema:n,data:a,keyword:s,it:l}=r;l.items=!0;const c=i.const("len",t._`${a}.length`);if(!1===n)r.setParams({len:o.length}),r.pass(t._`${c} <= ${o.length}`);else if("object"==typeof n&&!(0,e.alwaysValidSchema)(l,n)){const n=i.var("valid",t._`${c} <= ${o.length}`);i.if((0,t.not)(n),(()=>function(n){i.forRange("i",o.length,c,(o=>{r.subschema({keyword:s,dataProp:o,dataPropType:e.Type.Num},n),l.allErrors||i.if((0,t.not)(n),(()=>i.break()))}))}(n))),r.ok(n)}}return Sa.validateAdditionalItems=o,Sa.default=r,Sa}var Va,Ga,Ma={},Na={};function Ia(){if(Va)return Na;Va=1,Object.defineProperty(Na,"J",{value:!0}),Na.validateTuple=void 0;const t=Xi(),e=Mi(),r=an(),o={keyword:"items",type:"array",schemaType:["object","array","boolean"],before:"uniqueItems",code(t){const{schema:o,it:n}=t;if(Array.isArray(o))return i(t,"additionalItems",o);n.items=!0,(0,e.alwaysValidSchema)(n,o)||t.ok((0,r.validateArray)(t))}};function i(r,o,i=r.schema){const{gen:n,parentSchema:a,data:s,keyword:l,it:c}=r;!function(t){const{opts:r,errSchemaPath:n}=c,a=i.length,s=a===t.minItems&&(a===t.maxItems||!1===t[o]);if(r.strictTuples&&!s){const t=`"${l}" is ${a}-tuple, but minItems or maxItems/${o} are not specified or different at path "${n}"`;(0,e.checkStrictMode)(c,t,r.strictTuples)}}(a),c.opts.unevaluated&&i.length&&!0!==c.items&&(c.items=e.mergeEvaluated.items(n,i.length,c.items));const b=n.name("valid"),d=n.const("len",t._`${s}.length`);i.forEach(((o,i)=>{(0,e.alwaysValidSchema)(c,o)||(n.if(t._`${d} > ${i}`,(()=>r.subschema({keyword:l,schemaProp:i,dataProp:i},b))),r.ok(b))}))}return Na.validateTuple=i,Na.default=o,Na}var Ba,Ca={};var La,Wa={};function Za(){if(La)return Wa;La=1,Object.defineProperty(Wa,"J",{value:!0});const t=Xi(),e=Mi(),r={keyword:"contains",type:"array",schemaType:["object","boolean"],before:"uniqueItems",trackErrors:!0,error:{message:({params:{min:e,max:r}})=>void 0===r?t.str`must contain at least ${e} valid item(s)`:t.str`must contain at least ${e} and no more than ${r} valid item(s)`,params:({params:{min:e,max:r}})=>void 0===r?t._`{minContains: ${e}}`:t._`{minContains: ${e}, maxContains: ${r}}`},code(r){const{gen:o,schema:i,parentSchema:n,data:a,it:s}=r;let l,c;const{minContains:b,maxContains:d}=n;s.opts.next?(l=void 0===b?1:b,c=d):l=1;const f=o.const("len",t._`${a}.length`);if(r.setParams({min:l,max:c}),void 0===c&&0===l)return void(0,e.checkStrictMode)(s,'"minContains" == 0 without "maxContains": "contains" keyword ignored');if(void 0!==c&&l>c)return(0,e.checkStrictMode)(s,'"minContains" > "maxContains" is always invalid'),void r.fail();if((0,e.alwaysValidSchema)(s,i)){let e=t._`${f} >= ${l}`;return void 0!==c&&(e=t._`${e} && ${f} <= ${c}`),void r.pass(e)}s.items=!0;const p=o.name("valid");function m(){const e=o.name("_valid"),r=o.let("count",0);u(e,(()=>o.if(e,(()=>function(e){o.code(t._`${e}++`),void 0===c?o.if(t._`${e} >= ${l}`,(()=>o.assign(p,!0).break())):(o.if(t._`${e} > ${c}`,(()=>o.assign(p,!1).break())),1===l?o.assign(p,!0):o.if(t._`${e} >= ${l}`,(()=>o.assign(p,!0))))}(r)))))}function u(t,i){o.forRange("i",0,f,(o=>{r.subschema({keyword:"contains",dataProp:o,dataPropType:e.Type.Num,compositeRule:!0},t),i()}))}void 0===c&&1===l?u(p,(()=>o.if(p,(()=>o.break())))):0===l?(o.let(p,!0),void 0!==c&&o.if(t._`${a}.length > 0`,m)):(o.let(p,!1),m()),r.result(p,(()=>r.reset()))}};return Wa.default=r,Wa}var Ha,Ka={};function Ta(){return Ha||(Ha=1,function(t){Object.defineProperty(t,"J",{value:!0}),t.validateSchemaDeps=t.validatePropertyDeps=t.error=void 0;const e=Xi(),r=Mi(),o=an();t.error={message:({params:{property:t,depsCount:r,deps:o}})=>{const i=1===r?"property":"properties";return e.str`must have ${i} ${o} when property ${t} is present`},params:({params:{property:t,depsCount:r,deps:o,missingProperty:i}})=>e._`{property: ${t},
    missingProperty: ${i},
    depsCount: ${r},
    deps: ${o}}`};const i={keyword:"dependencies",type:"object",schemaType:"object",error:t.error,code(t){const[e,r]=function({schema:t}){const e={},r={};for(const o in t){if("__proto__"===o)continue;(Array.isArray(t[o])?e:r)[o]=t[o]}return[e,r]}(t);n(t,e),a(t,r)}};function n(t,r=t.schema){const{gen:i,data:n,it:a}=t;if(0===Object.keys(r).length)return;const s=i.let("missing");for(const l in r){const c=r[l];if(0===c.length)continue;const b=(0,o.propertyInData)(i,n,l,a.opts.ownProperties);t.setParams({property:l,depsCount:c.length,deps:c.join(", ")}),a.allErrors?i.if(b,(()=>{for(const e of c)(0,o.checkReportMissingProp)(t,e)})):(i.if(e._`${b} && (${(0,o.checkMissingProp)(t,c,s)})`),(0,o.reportMissingProp)(t,s),i.else())}}function a(t,e=t.schema){const{gen:i,data:n,keyword:a,it:s}=t,l=i.name("valid");for(const c in e)(0,r.alwaysValidSchema)(s,e[c])||(i.if((0,o.propertyInData)(i,n,c,s.opts.ownProperties),(()=>{const e=t.subschema({keyword:a,schemaProp:c},l);t.mergeValidEvaluated(e,l)}),(()=>i.var(l,!0))),t.ok(l))}t.validatePropertyDeps=n,t.validateSchemaDeps=a,t.default=i}(Ka)),Ka}var Ja,Ua={};var Ya,Qa={};function $a(){if(Ya)return Qa;Ya=1,Object.defineProperty(Qa,"J",{value:!0});const t=an(),e=Xi(),r=Li(),o=Mi(),i={keyword:"additionalProperties",type:["object"],schemaType:["boolean","object"],allowUndefined:!0,trackErrors:!0,error:{message:"must NOT have additional properties",params:({params:t})=>e._`{additionalProperty: ${t.additionalProperty}}`},code(i){const{gen:n,schema:a,parentSchema:s,data:l,errsCount:c,it:b}=i;if(!c)throw new Error("ajv implementation error");const{allErrors:d,opts:f}=b;if(b.props=!0,"all"!==f.removeAdditional&&(0,o.alwaysValidSchema)(b,a))return;const p=(0,t.allSchemaProperties)(s.properties),m=(0,t.allSchemaProperties)(s.patternProperties);function u(t){n.code(e._`delete ${l}[${t}]`)}function h(t){if("all"===f.removeAdditional||f.removeAdditional&&!1===a)u(t);else{if(!1===a)return i.setParams({additionalProperty:t}),i.error(),void(d||n.break());if("object"==typeof a&&!(0,o.alwaysValidSchema)(b,a)){const r=n.name("valid");"failing"===f.removeAdditional?(g(t,r,!1),n.if((0,e.not)(r),(()=>{i.reset(),u(t)}))):(g(t,r),d||n.if((0,e.not)(r),(()=>n.break())))}}}function g(t,e,r){const n={keyword:"additionalProperties",dataProp:t,dataPropType:o.Type.Str};!1===r&&Object.assign(n,{compositeRule:!0,createErrors:!1,allErrors:!1}),i.subschema(n,e)}n.forIn("key",l,(r=>{p.length||m.length?n.if(function(r){let a;if(p.length>8){const e=(0,o.schemaRefOrVal)(b,s.properties,"properties");a=(0,t.isOwnProperty)(n,e,r)}else a=p.length?(0,e.or)(...p.map((t=>e._`${r} === ${t}`))):e.nil;return m.length&&(a=(0,e.or)(a,...m.map((o=>e._`${(0,t.usePattern)(i,o)}.test(${r})`)))),(0,e.not)(a)}(r),(()=>h(r))):h(r)})),i.ok(e._`${c} === ${r.default.errors}`)}};return Qa.default=i,Qa}var _a,ts={};var es,rs={};var os,is={};var ns,as={};var ss,ls={};var cs,bs={};var ds,fs={};var ps,ms,us={};function hs(){if(ms)return Ra;ms=1,Object.defineProperty(Ra,"J",{value:!0});const t=Xa(),e=function(){if(Ga)return Ma;Ga=1,Object.defineProperty(Ma,"J",{value:!0});const t=Ia(),e={keyword:"prefixItems",type:"array",schemaType:["array"],before:"uniqueItems",code:e=>(0,t.validateTuple)(e,"items")};return Ma.default=e,Ma}(),r=Ia(),o=function(){if(Ba)return Ca;Ba=1,Object.defineProperty(Ca,"J",{value:!0});const t=Xi(),e=Mi(),r=an(),o=Xa(),i={keyword:"items",type:"array",schemaType:["object","boolean"],before:"uniqueItems",error:{message:({params:{len:e}})=>t.str`must NOT have more than ${e} items`,params:({params:{len:e}})=>t._`{limit: ${e}}`},code(t){const{schema:i,parentSchema:n,it:a}=t,{prefixItems:s}=n;a.items=!0,(0,e.alwaysValidSchema)(a,i)||(s?(0,o.validateAdditionalItems)(t,s):t.ok((0,r.validateArray)(t)))}};return Ca.default=i,Ca}(),i=Za(),n=Ta(),a=function(){if(Ja)return Ua;Ja=1,Object.defineProperty(Ua,"J",{value:!0});const t=Xi(),e=Mi(),r={keyword:"propertyNames",type:"object",schemaType:["object","boolean"],error:{message:"property name must be valid",params:({params:e})=>t._`{propertyName: ${e.propertyName}}`},code(r){const{gen:o,schema:i,data:n,it:a}=r;if((0,e.alwaysValidSchema)(a,i))return;const s=o.name("valid");o.forIn("key",n,(e=>{r.setParams({propertyName:e}),r.subschema({keyword:"propertyNames",data:e,dataTypes:["string"],propertyName:e,compositeRule:!0},s),o.if((0,t.not)(s),(()=>{r.error(!0),a.allErrors||o.break()}))})),r.ok(s)}};return Ua.default=r,Ua}(),s=$a(),l=function(){if(_a)return ts;_a=1,Object.defineProperty(ts,"J",{value:!0});const t=xn(),e=an(),r=Mi(),o=$a(),i={keyword:"properties",type:"object",schemaType:"object",code(i){const{gen:n,schema:a,parentSchema:s,data:l,it:c}=i;"all"===c.opts.removeAdditional&&void 0===s.additionalProperties&&o.default.code(new t.KeywordCxt(c,o.default,"additionalProperties"));const b=(0,e.allSchemaProperties)(a);for(const t of b)c.definedProperties.add(t);c.opts.unevaluated&&b.length&&!0!==c.props&&(c.props=r.mergeEvaluated.props(n,(0,r.toHash)(b),c.props));const d=b.filter((t=>!(0,r.alwaysValidSchema)(c,a[t])));if(0===d.length)return;const f=n.name("valid");for(const t of d)p(t)?m(t):(n.if((0,e.propertyInData)(n,l,t,c.opts.ownProperties)),m(t),c.allErrors||n.else().var(f,!0),n.endIf()),i.it.definedProperties.add(t),i.ok(f);function p(t){return c.opts.useDefaults&&!c.compositeRule&&void 0!==a[t].default}function m(t){i.subschema({keyword:"properties",schemaProp:t,dataProp:t},f)}}};return ts.default=i,ts}(),c=function(){if(es)return rs;es=1,Object.defineProperty(rs,"J",{value:!0});const t=an(),e=Xi(),r=Mi(),o=Mi(),i={keyword:"patternProperties",type:"object",schemaType:"object",code(i){const{gen:n,schema:a,data:s,parentSchema:l,it:c}=i,{opts:b}=c,d=(0,t.allSchemaProperties)(a),f=d.filter((t=>(0,r.alwaysValidSchema)(c,a[t])));if(0===d.length||f.length===d.length&&(!c.opts.unevaluated||!0===c.props))return;const p=b.strictSchema&&!b.allowMatchingProperties&&l.properties,m=n.name("valid");!0===c.props||c.props instanceof e.Name||(c.props=(0,o.evaluatedPropsToName)(n,c.props));const{props:u}=c;function h(t){for(const e in p)new RegExp(t).test(e)&&(0,r.checkStrictMode)(c,`property ${e} matches pattern ${t} (use allowMatchingProperties)`)}function g(r){n.forIn("key",s,(a=>{n.if(e._`${(0,t.usePattern)(i,r)}.test(${a})`,(()=>{const t=f.includes(r);t||i.subschema({keyword:"patternProperties",schemaProp:r,dataProp:a,dataPropType:o.Type.Str},m),c.opts.unevaluated&&!0!==u?n.assign(e._`${u}[${a}]`,!0):t||c.allErrors||n.if((0,e.not)(m),(()=>n.break()))}))}))}!function(){for(const t of d)p&&h(t),c.allErrors?g(t):(n.var(m,!0),g(t),n.if(m))}()}};return rs.default=i,rs}(),b=function(){if(os)return is;os=1,Object.defineProperty(is,"J",{value:!0});const t=Mi(),e={keyword:"not",schemaType:["object","boolean"],trackErrors:!0,code(e){const{gen:r,schema:o,it:i}=e;if((0,t.alwaysValidSchema)(i,o))return void e.fail();const n=r.name("valid");e.subschema({keyword:"not",compositeRule:!0,createErrors:!1,allErrors:!1},n),e.failResult(n,(()=>e.reset()),(()=>e.error()))},error:{message:"must NOT be valid"}};return is.default=e,is}(),d=function(){if(ns)return as;ns=1,Object.defineProperty(as,"J",{value:!0});const t={keyword:"anyOf",schemaType:"array",trackErrors:!0,code:an().validateUnion,error:{message:"must match a schema in anyOf"}};return as.default=t,as}(),f=function(){if(ss)return ls;ss=1,Object.defineProperty(ls,"J",{value:!0});const t=Xi(),e=Mi(),r={keyword:"oneOf",schemaType:"array",trackErrors:!0,error:{message:"must match exactly one schema in oneOf",params:({params:e})=>t._`{passingSchemas: ${e.passing}}`},code(r){const{gen:o,schema:i,parentSchema:n,it:a}=r;if(!Array.isArray(i))throw new Error("ajv implementation error");if(a.opts.discriminator&&n.discriminator)return;const s=i,l=o.let("valid",!1),c=o.let("passing",null),b=o.name("_valid");r.setParams({passing:c}),o.block((function(){s.forEach(((i,n)=>{let s;(0,e.alwaysValidSchema)(a,i)?o.var(b,!0):s=r.subschema({keyword:"oneOf",schemaProp:n,compositeRule:!0},b),n>0&&o.if(t._`${b} && ${l}`).assign(l,!1).assign(c,t._`[${c}, ${n}]`).else(),o.if(b,(()=>{o.assign(l,!0),o.assign(c,n),s&&r.mergeEvaluated(s,t.Name)}))}))})),r.result(l,(()=>r.reset()),(()=>r.error(!0)))}};return ls.default=r,ls}(),p=function(){if(cs)return bs;cs=1,Object.defineProperty(bs,"J",{value:!0});const t=Mi(),e={keyword:"allOf",schemaType:"array",code(e){const{gen:r,schema:o,it:i}=e;if(!Array.isArray(o))throw new Error("ajv implementation error");const n=r.name("valid");o.forEach(((r,o)=>{if((0,t.alwaysValidSchema)(i,r))return;const a=e.subschema({keyword:"allOf",schemaProp:o},n);e.ok(n),e.mergeEvaluated(a)}))}};return bs.default=e,bs}(),m=function(){if(ds)return fs;ds=1,Object.defineProperty(fs,"J",{value:!0});const t=Xi(),e=Mi(),r={keyword:"if",schemaType:["object","boolean"],trackErrors:!0,error:{message:({params:e})=>t.str`must match "${e.ifClause}" schema`,params:({params:e})=>t._`{failingKeyword: ${e.ifClause}}`},code(r){const{gen:i,parentSchema:n,it:a}=r;void 0===n.then&&void 0===n.else&&(0,e.checkStrictMode)(a,'"if" without "then" and "else" is ignored');const s=o(a,"then"),l=o(a,"else");if(!s&&!l)return;const c=i.let("valid",!0),b=i.name("_valid");if(function(){const t=r.subschema({keyword:"if",compositeRule:!0,createErrors:!1,allErrors:!1},b);r.mergeEvaluated(t)}(),r.reset(),s&&l){const t=i.let("ifClause");r.setParams({ifClause:t}),i.if(b,d("then",t),d("else",t))}else s?i.if(b,d("then")):i.if((0,t.not)(b),d("else"));function d(e,o){return()=>{const n=r.subschema({keyword:e},b);i.assign(c,b),r.mergeValidEvaluated(n,c),o?i.assign(o,t._`${e}`):r.setParams({ifClause:e})}}r.pass(c,(()=>r.error(!0)))}};function o(t,r){const o=t.schema[r];return void 0!==o&&!(0,e.alwaysValidSchema)(t,o)}return fs.default=r,fs}(),u=function(){if(ps)return us;ps=1,Object.defineProperty(us,"J",{value:!0});const t=Mi(),e={keyword:["then","else"],schemaType:["object","boolean"],code({keyword:e,parentSchema:r,it:o}){void 0===r.if&&(0,t.checkStrictMode)(o,`"${e}" without "if" is ignored`)}};return us.default=e,us}();return Ra.default=function(h=!1){const g=[b.default,d.default,f.default,p.default,m.default,u.default,a.default,s.default,n.default,l.default,c.default];return h?g.push(e.default,o.default):g.push(t.default,r.default),g.push(i.default),g},Ra}var gs,vs,ws={},xs={};function ys(){if(gs)return xs;gs=1,Object.defineProperty(xs,"J",{value:!0});const t=Xi(),e={keyword:"format",type:["number","string"],schemaType:"string",$data:!0,error:{message:({schemaCode:e})=>t.str`must match format "${e}"`,params:({schemaCode:e})=>t._`{format: ${e}}`},code(e,r){const{gen:o,data:i,$data:n,schema:a,schemaCode:s,it:l}=e,{opts:c,errSchemaPath:b,schemaEnv:d,self:f}=l;c.validateFormats&&(n?function(){const n=o.scopeValue("formats",{ref:f.formats,code:c.code.formats}),a=o.const("fDef",t._`${n}[${s}]`),l=o.let("fType"),b=o.let("format");o.if(t._`typeof ${a} == "object" && !(${a} instanceof RegExp)`,(()=>o.assign(l,t._`${a}.type || "string"`).assign(b,t._`${a}.validate`)),(()=>o.assign(l,t._`"string"`).assign(b,a))),e.fail$data((0,t.or)(!1===c.strictSchema?t.nil:t._`${s} && !${b}`,function(){const e=d.$async?t._`(${a}.async ? await ${b}(${i}) : ${b}(${i}))`:t._`${b}(${i})`,o=t._`(typeof ${b} == "function" ? ${e} : ${b}.test(${i}))`;return t._`${b} && ${b} !== true && ${l} === ${r} && !${o}`}()))}():function(){const n=f.formats[a];if(!n)return void function(){if(!1===c.strictSchema)return void f.logger.warn(t());throw new Error(t());function t(){return`unknown format "${a}" ignored in schema at path "${b}"`}}();if(!0===n)return;const[s,l,p]=function(e){const r=e instanceof RegExp?(0,t.regexpCode)(e):c.code.formats?t._`${c.code.formats}${(0,t.getProperty)(a)}`:void 0,i=o.scopeValue("formats",{key:a,ref:e,code:r});if("object"==typeof e&&!(e instanceof RegExp))return[e.type||"string",e.validate,t._`${i}.validate`];return["string",e,i]}(n);s===r&&e.pass(function(){if("object"==typeof n&&!(n instanceof RegExp)&&n.async){if(!d.$async)throw new Error("async format in sync schema");return t._`await ${p}(${i})`}return"function"==typeof l?t._`${p}(${i})`:t._`${p}.test(${i})`}())}())}};return xs.default=e,xs}var ks,js,Ds={};function zs(){if(js)return Kn;js=1,Object.defineProperty(Kn,"J",{value:!0});const t=$n(),e=Pa(),r=hs(),o=function(){if(vs)return ws;vs=1,Object.defineProperty(ws,"J",{value:!0});const t=[ys().default];return ws.default=t,ws}(),i=(ks||(ks=1,Object.defineProperty(Ds,"J",{value:!0}),Ds.contentVocabulary=Ds.metadataVocabulary=void 0,Ds.metadataVocabulary=["title","description","default","deprecated","readOnly","writeOnly","examples"],Ds.contentVocabulary=["contentMediaType","contentEncoding","contentSchema"]),Ds),n=[t.default,e.default,(0,r.default)(),o.default,i.metadataVocabulary,i.contentVocabulary];return Kn.default=n,Kn}var Es,As,Fs={},qs={};function Ps(){if(As)return Fs;As=1,Object.defineProperty(Fs,"J",{value:!0});const t=Xi(),e=(Es||(Es=1,Object.defineProperty(qs,"J",{value:!0}),qs.DiscrError=void 0,function(t){t.Tag="tag",t.Mapping="mapping"}(r||(qs.DiscrError=r={}))),qs);var r;const o=qn(),i=En(),n=Mi(),a={keyword:"discriminator",type:"object",schemaType:"object",error:{message:({params:{discrError:t,tagName:r}})=>t===e.DiscrError.Tag?`tag "${r}" must be string`:`value of tag "${r}" must be in oneOf`,params:({params:{discrError:e,tag:r,tagName:o}})=>t._`{error: ${e}, tag: ${o}, tagValue: ${r}}`},code(r){const{gen:a,data:s,schema:l,parentSchema:c,it:b}=r,{oneOf:d}=c;if(!b.opts.discriminator)throw new Error("discriminator: requires discriminator option");const f=l.propertyName;if("string"!=typeof f)throw new Error("discriminator: requires propertyName");if(l.mapping)throw new Error("discriminator: mapping is not supported");if(!d)throw new Error("discriminator: requires oneOf keyword");const p=a.let("valid",!1),m=a.const("tag",t._`${s}${(0,t.getProperty)(f)}`);function u(e){const o=a.name("valid"),i=r.subschema({keyword:"oneOf",schemaProp:e},o);return r.mergeEvaluated(i,t.Name),o}a.if(t._`typeof ${m} == "string"`,(()=>function(){const s=function(){var t;const e={},r=s(c);let a=!0;for(let e=0;e<d.length;e++){let c=d[e];if((null==c?void 0:c.$ref)&&!(0,n.schemaHasRulesButRef)(c,b.self.RULES)){const t=c.$ref;if(c=o.resolveRef.call(b.self,b.schemaEnv.root,b.baseId,t),c instanceof o.SchemaEnv&&(c=c.schema),void 0===c)throw new i.default(b.opts.uriResolver,b.baseId,t)}const p=null===(t=null==c?void 0:c.properties)||void 0===t?void 0:t[f];if("object"!=typeof p)throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have "properties/${f}"`);a=a&&(r||s(c)),l(p,e)}if(!a)throw new Error(`discriminator: "${f}" must be required`);return e;function s({required:t}){return Array.isArray(t)&&t.includes(f)}function l(t,e){if(t.const)p(t.const,e);else{if(!t.enum)throw new Error(`discriminator: "properties/${f}" must have "const" or "enum"`);for(const r of t.enum)p(r,e)}}function p(t,r){if("string"!=typeof t||t in e)throw new Error(`discriminator: "${f}" values must be unique strings`);e[t]=r}}();a.if(!1);for(const e in s)a.elseIf(t._`${m} === ${e}`),a.assign(p,u(s[e]));a.else(),r.error(!1,{discrError:e.DiscrError.Mapping,tag:m,tagName:f}),a.endIf()}()),(()=>r.error(!1,{discrError:e.DiscrError.Tag,tag:m,tagName:f}))),r.ok(p)}};return Fs.default=a,Fs}var Os,Rs={$schema:"http://json-schema.org/draft-07/schema#",$id:"http://json-schema.org/draft-07/schema#",title:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},type:["object","boolean"],properties:{$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},$comment:{type:"string"},title:{type:"string"},description:{type:"string"},default:!0,readOnly:{type:"boolean",default:!1},examples:{type:"array",items:!0},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:!0},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},propertyNames:{format:"regex"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:!0,enum:{type:"array",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},contentMediaType:{type:"string"},contentEncoding:{type:"string"},if:{$ref:"#"},then:{$ref:"#"},else:{$ref:"#"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},default:!0};var Ss,Xs,Vs=(Os||(Os=1,function(t,e){Object.defineProperty(e,"J",{value:!0}),e.MissingRefError=e.ValidationError=e.CodeGen=e.Name=e.nil=e.stringify=e.str=e._=e.KeywordCxt=e.Ajv=void 0;const r=Zn(),o=zs(),i=Ps(),n=Rs,a=["/properties"],s="http://json-schema.org/draft-07/schema";class l extends r.default{_addVocabularies(){super._addVocabularies(),o.default.forEach((t=>this.addVocabulary(t))),this.opts.discriminator&&this.addKeyword(i.default)}_addDefaultMetaSchema(){if(super._addDefaultMetaSchema(),!this.opts.meta)return;const t=this.opts.$data?this.$dataMetaSchema(n,a):n;this.addMetaSchema(t,s,!1),this.refs["http://json-schema.org/schema"]=s}defaultMeta(){return this.opts.defaultMeta=super.defaultMeta()||(this.getSchema(s)?s:void 0)}}e.Ajv=l,t.exports=e=l,t.exports.Ajv=l,Object.defineProperty(e,"J",{value:!0}),e.default=l;var c=xn();Object.defineProperty(e,"KeywordCxt",{enumerable:!0,get:function(){return c.KeywordCxt}});var b=Xi();Object.defineProperty(e,"_",{enumerable:!0,get:function(){return b._}}),Object.defineProperty(e,"str",{enumerable:!0,get:function(){return b.str}}),Object.defineProperty(e,"stringify",{enumerable:!0,get:function(){return b.stringify}}),Object.defineProperty(e,"nil",{enumerable:!0,get:function(){return b.nil}}),Object.defineProperty(e,"Name",{enumerable:!0,get:function(){return b.Name}}),Object.defineProperty(e,"CodeGen",{enumerable:!0,get:function(){return b.CodeGen}});var d=jn();Object.defineProperty(e,"ValidationError",{enumerable:!0,get:function(){return d.default}});var f=En();Object.defineProperty(e,"MissingRefError",{enumerable:!0,get:function(){return f.default}})}(ki,ki.exports)),ki.exports),Gs=xi(Vs);var Ms=(Xs||(Xs=1,Ss=function(t){if(t&&t.length)for(const r of t){let t;switch(r.keyword){case"additionalItems":case"items":t="",t+="ne doit pas contenir plus de "+(e=r.params.limit)+" élémént",1!=e&&(t+="s");break;case"additionalProperties":t="ne doit pas contenir de propriétés additionnelles";break;case"anyOf":t='doit correspondre à un schéma de "anyOf"';break;case"const":t="doit être égal à la constante";break;case"contains":t="doit contenir un élément valide";break;case"dependencies":case"dependentRequired":t="";var e=r.params.depsCount;t+="doit avoir la propriété "+r.params.deps+" quand la propriété "+r.params.property+" est présente";break;case"discriminator":switch(r.params.error){case"tag":t='tag "'+r.params.tag+'" must be string';break;case"mapping":t='value of tag "'+r.params.tag+'" must be in oneOf';break;default:t='doit être valide selon le critère "'+r.keyword+'"'}break;case"enum":t="doit être égal à une des valeurs prédéfinies";break;case"false schema":t='le schema est "false"';break;case"format":t='doit correspondre au format "'+r.params.format+'"';break;case"formatMaximum":case"formatExclusiveMaximum":case"formatMinimum":case"formatExclusiveMinimum":case"maximum":case"exclusiveMaximum":case"minimum":case"exclusiveMinimum":t="",t+="doit être "+r.params.comparison+" "+r.params.limit;break;case"if":t='doit correspondre au schéma "'+r.params.failingKeyword+'"';break;case"maxItems":t="",t+="ne doit pas contenir plus de "+(e=r.params.limit)+" élément",1!=e&&(t+="s");break;case"maxLength":t="",t+="ne doit pas dépasser "+(e=r.params.limit)+" caractère",1!=e&&(t+="s");break;case"maxProperties":t="",t+="ne doit pas contenir plus de "+(e=r.params.limit)+" propriété",1!=e&&(t+="s");break;case"minItems":t="",t+="ne doit pas contenir moins de "+(e=r.params.limit)+" élément",1!=e&&(t+="s");break;case"minLength":t="",t+="ne doit pas faire moins de "+(e=r.params.limit)+" caractère",1!=e&&(t+="s");break;case"minProperties":t="",t+="ne doit pas contenir moins de "+(e=r.params.limit)+" propriété",1!=e&&(t+="s");break;case"multipleOf":t="doit être un multiple de "+r.params.multipleOf;break;case"not":t='est invalide selon le schéma "not"';break;case"oneOf":t='doit correspondre à exactement un schéma de "oneOf"';break;case"pattern":t='doit correspondre au format "'+r.params.pattern+'"';break;case"patternRequired":t='la propriété doit correspondre au format "'+r.params.missingPattern+'"';break;case"propertyNames":t="le nom de propriété est invalide";break;case"required":t="requiert la propriété "+r.params.missingProperty;break;case"type":t="doit être de type "+r.params.type;break;case"unevaluatedItems":t="",t+="must NOT have more than "+(e=r.params.len)+" item",1!=e&&(t+="s");break;case"unevaluatedProperties":t="must NOT have unevaluated properties";break;case"uniqueItems":t="ne doit pas contenir de doublons (les éléments ## "+r.params.j+" et "+r.params.i+" sont identiques)";break;default:t='doit être valide selon le critère "'+r.keyword+'"'}r.message=t}}),Ss),Ns=xi(Ms);const Is=new Gs({strictNumbers:!1,strictSchema:!1,coerceTypes:!0});Is.addFormat("color",/./),Is.addFormat("signature",/./),Is.addFormat("password",/./),Is.addFormat("doc",/./),Is.addFormat("uuid",/./),Is.addFormat("geo",/./),Is.addFormat("markdown",/./),Is.addFormat("asset",/./),Is.addFormat("date",/./),Is.addFormat("time",/./),Is.addFormat("date-time",/./),Is.addFormat("email",/./);const Bs=Is.compile(wi);function Cs(){return Ns(Bs?.errors),Bs?.errors??[]}class Ls{parser;constructor(t){this.parser=Is.compile(t)}validate(t){const e=this.parser(t);if("boolean"==typeof e)return e;throw`Validation result not boolean, This is unlikely to happen, but happens  ${e}`}errors(){return this.parser.errors}errorsText(t){return Ns(t),Is.errorsText(t)}}class Ws extends Lt{}let Zs=class extends Ws{#c=null;get current(){return this.#c}set current(t){this.#c=t}schemas=[];currentSchema;content;validator;get nomore(){return this.schema.maxItems&&this.value&&this.value.length>=this.schema.maxItems}get noless(){return this.schema.minItems&&this.value&&this.value.length<=this.schema.minItems}convertToInput(t){throw new Error("IMPOSSIBLE : PAS D'INPUT POUR LES ARRAY!")}convertToValue(t){return St(t)?this.empty:t}static get styles(){return[...super.styles,l`.panel {
                    padding:5px;
                    border: solid 1px lightgray;
                    border-radius:10px; 
                    user-select: none;
                }`]}update(t){if(!this.validator&&t.has("schema")&&0!==Object.keys(this.schema).length){const t=JSON.stringify(this.schema,Rt);this.validator=new Ls(JSON.parse(t)),this.check()}super.update(t)}check(){if(this.validator){switch(this.valid=!0,this.message="",!0){case this.required&&null==this.value:this.valid=!1,this.message=Gt("valueMissing");break;case!this.required&&null==this.value:break;default:this.valid=this.validator.validate(this.value);const t=this.validator.errors()?.filter((t=>1===t.instancePath.match(/\//g)?.length));0==this.valid&&t&&t.length>0&&(this.message=this.validator.errorsText(t))}this.content=this.shadowRoot?.getElementById("content")??void 0,this.content?.classList.add(this.valid?"valid":"invalid"),this.content?.classList.remove(this.valid?"invalid":"valid")}}connectedCallback(){super.connectedCallback(),this.listen(this,"update",(()=>this.check())),this.listen(this,"toggle-item",(t=>{this.close(),this.eventStop(t)}))}requestUpdate(t,e){void 0!==t&&(this.solveSchemas(!0),super.requestUpdate(t,e))}renderField(){this.solveSchemas();const t=this.data&&this.value?this.value.map(((t,e)=>U`${this.current===e?this.renderEditable(e):this.renderStatic(e)}`)):[];return U`
            <div @focusout="${this.focusout}">
                <div class="form-group row">
                ${""===this.schema.title?U``:this.renderLabel}
                    <div class="col-sm">
                        <ul id="content" class="list-group">
                            ${t}
                            ${this.readonly?U``:U`
                                <li class="list-group-item" @click="${this.close}">
                                    <button type="button" @click="${this.add}" ?disabled="${this.nomore}" class="btn btn-primary btn-sm "><b>+</b></button>
                                    ${this.schema.homogeneous?null:U`
                                        <div class="btn-group" style="float:right" role="group">
                                            <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle btn-sm"
                                                @click="${this.toggleDropdown}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            ${this.currentSchema?.title||"Ajouter"}
                                            </button> 
                                            <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                ${this.schema.items.oneOf.map(((t,e)=>U`<a class="dropdown-item"
                                                    @click="${()=>this.selectSchema(e)}" >${t.title||"Type"+e}</a>`))}
                                            </div>
                                        </div>`}
                                </li>
                            `}
                        </ul>
                    </div>
                </div>
            </div>`}renderStatic(t){return this.solveOrder(),this.solveSchemas(),U`
        <li 
                id="${t}"
                draggable="true" 
                @dragstart="${e=>this.drag(t,e)}"
                @dragover="${this.allowDrop}"
                @drop="${this.drop}"   
                @click="${e=>this.open(t,e)}"              
                class="list-group-item"
            >
            ${this.abstract(t,this.schemas[t])}
            ${this.readonly?U``:U`<button ?hidden="${this.noless}" @click="${e=>this.del(t,e)}" type="button" style="float:right" class="btn-close" aria-label="Close"></button>`}
        </li>`}renderEditable(t){const e=this.schemas[t];return U`<li class="list-group-item"> ${this.renderItem(e,t)} </li>`}focusout(){this.triggerChange()}focus(){if(this.fields().length>0){this.fields()[0].dofocus()}}open(t,e){this.current===t?this.close():(this.current=t,this.dofocus()),this.eventStop(e)}close(t){this.current=null,this.triggerChange(),this.eventStop(t)}drag(t,e){e.dataTransfer?e.dataTransfer.setData("text",t.toString()):e.originalEvent.dataTransfer&&e.originalEvent.dataTransfer.setData("text",t.toString()),this.current=null,this.requestUpdate()}drop(t){if(t.dataTransfer){const e=parseInt(t.dataTransfer.getData("text"),10),r=parseInt(t.target.id);this.value.splice(r,0,this.value.splice(e,1)[0]),this.schemas.splice(r,0,this.schemas.splice(e,1)[0]),this.requestUpdate()}this.eventStop(t)}allowDrop(t){t.preventDefault()}del(t,e){this.noless||(this.remItem(t),this.eventStop(e))}add(t){!this.nomore&&this.currentSchema&&(this.addItem(this.currentSchema),this.eventStop(t))}remItem(t){this.value.splice(t,1),this.schemas.splice(t,1),this.current=null,this.requestUpdate(),this.triggerChange(),this.check()}addItem(t,e=!0){null==this.value&&(this.value=[]);const r=vt(this.data,t);this.value.push(r),this.schemas.push(t),e&&this.open(this.value.length-1),this.triggerChange(),this.requestUpdate(),this.check()}toggleDropdown(){const t=this.shadowRoot?.querySelector(".dropdown-menu")?.style.display;"block"==t?this.closeDropdown():this.openDropdown()}closeDropdown(){const t=this.shadowRoot?.querySelector(".dropdown-menu");null!=t&&(t.style.display="none")}openDropdown(){const t=this.shadowRoot?.querySelector(".dropdown-menu");null!=t&&(t.style.display="block")}selectSchema(t){this.currentSchema=this.schema.items.oneOf[t],this.closeDropdown(),this.requestUpdate()}solveSchemas(t=!1){this.schema?.items&&(!t&&this.currentSchema&&this.schemas||(this.currentSchema||(this.currentSchema=this.schema.homogeneous?this.schema.items:this.schema.items.oneOf[0]),this.schemas=null==this.value?[]:this.schema.homogeneous?this.value.map((()=>this.schema.items)):this.value.map((t=>qt(t)??this.schema.items.oneOf.find((e=>e.case&&e.case(null,t,this.data,this.key,this.derefFunc)))))))}solveOrder(){if(null==this.value)return;const t=this.value,e=t.map(((t,e)=>e)).sort(((e,r)=>{const o=this.evalExpr("orderBy",this.schemas[e],t[e],this.value,e),i=this.evalExpr("orderBy",this.schemas[r],t[r],this.value,r);switch(!0){case o===i:return 0;case null==o:return-1;case null==i:case o>i:return 1;case o<i:return-1;default:return 0}})),r=this.schemas.map((t=>t)),o=t.map((t=>t));for(let t=0;t<e.length;t++)this.schemas[t]=r[e[t]],this.value[t]=o[e[t]]}};t([A({attribute:!1}),e("design:type",Object)],Zs.prototype,"current",null),Zs=t([r("fz-array")],Zs);let Hs=class extends Ws{convertToInput(t){throw new Error("IMPOSSIBLE : PAS D'INPUT POUR LES OBJECT!")}convertToValue(t){return St(t)?this.empty:t}#b=!1;get collapsed(){return this.#b}set collapsed(t){this.#b=t}#d={};get activegroup(){return this.#d}set activegroup(t){this.#d=t}content;validator;seen;static get styles(){return[...super.styles,l`
                .panel {
                    padding:5px;
                    border: solid 1px lightgray;
                    border-radius:10px; 
                    user-select: none;
                }
                `]}check(){if(this.validator){switch(this.valid=!0,this.message="",!0){case this.required&&null==this.value:this.valid=!1,this.message=Gt("valueMissing");break;case!this.required&&null==this.value:break;default:this.valid=this.validator.validate(this.value);const t=this.validator.errors()?.filter((t=>1===t.instancePath.match(/\//g)?.length));0==this.valid&&t&&t.length>0&&(this.message=this.validator.errorsText(t))}this.content=this.shadowRoot?.getElementById("content")??void 0,this.content?.classList.add(this.valid?"valid":"invalid"),this.content?.classList.remove(this.valid?"invalid":"valid")}}connectedCallback(){super.connectedCallback(),this.listen(this,"update",(t=>(this.check(),this.requestUpdate())))}firstUpdated(t){super.firstUpdated(t),this.setCollapsed()}update(t){if(!this.validator&&t.has("schema")&&Object.keys(this.schema.properties??{})?.length>0){const t=JSON.stringify(this.schema,Rt);this.validator=new Ls(JSON.parse(t)),this.check()}super.update(t)}setCollapsed(){this.collapsed=null!=this.schema.parent&&this.evalExpr("collapsed")}renderSingle(t,e,r){const o=e[r].fieldname,i=this.schema.properties[o];return t.push(this.renderItem(i,o)),r+=1}renderGroup(t,e,r){const o=[],i=e[r].groupnum,n=e[r].groupname;for(;r<e.length&&i===e[r].groupnum;r++){const t=e[r].fieldname,i=this.schema.properties[t];o.push(this.renderItem(i,t))}return t.push(U`
                <div class="card shadow" style="margin-bottom:5px">
                    <div class="card-header d-flex justify-content-between align-items-center">${n}</div>
                    <div class="card-body">${o}</div>
                </div>`),r}renderTabGroup(t,e,r){const o=[],i=e[r].groupnum,n=e[r].groupname,a=e[r].tabname;for(;r<e.length&&i===e[r].groupnum;r++){const t=e[r].fieldname,i=this.schema.properties[t],s=this.activegroup[a]!==n;o.push(U`<div class="tab-pane active container" style="margin:0;max-width:100%"  id="content" ?hidden="${s}" data-tabname="${a}" data-groupname="${n}">${this.renderItem(i,t)}</div>`)}return t.push(U`${o}`),r}renderTab(t,e,r){const o=[],i=e[r].tabnum,n=e[r].tabname,a=r;for(this.activegroup[n]=e[r].groupname;r<e.length&&i===e[r].tabnum;)r=this.renderTabGroup(o,e,r);const s={};for(let t=a;t<r;t++){s[e[t].groupname]=1}const l=Object.keys(s);return t.push(U`<ul class="nav nav-tabs" id="content">
                ${l.map((t=>U`<li class="nav-item">
                        <a class="nav-link" data-tabname="${n}" data-groupname="${t}" @click="${this.toggleTab}" aria-current="page" href="#" data-toggle="tab" href="#${t}">${t}</a>
                    </li>`))}
            </ul>`),t.push(U`<div class="tab-content border border-top-0" id="content" style="padding-bottom:5px;margin-bottom:5px">${o}</div>`),r}get deletable(){return null!=this.schema.parent&&!this.isEmpty&&(!(!this.schema.nullAllowed||!this.nullable)||!this.schema.nullAllowed&&!this.required)}async delete(){this.value=this.empty,null!==this.collapsed&&(this.collapsed=!0),this.requestUpdate(),await this.updateComplete,this.fields().forEach((t=>t.check()))}renderField(){if(!this.schema.properties)return U``;const t=[],e=this.schema.order;let r=0;for(;e&&r<e.length;){const o=e[r];r=o.tabname&&o.groupname?this.renderTab(t,e,r):o.groupname?this.renderGroup(t,e,r):this.renderSingle(t,e,r)}return U`${this.isItem?U`<div>${this.renderLabel}</div>${t}`:""===this.schema.title?U`<div ?hidden="${this.collapsed}" > ${t} </div>`:U`<div class="panel" id="content" >
                <div class="panel-heading">
                    <div>
                        ${this.renderLabel}
                        ${this.collapsed?U`${this.abstract()}`:U``}
                        <button
                            ?hidden="${!this.deletable}"
                            @click="${()=>this.delete()}" 
                            type="button" style="float:right" class="btn-close" aria-label="Close">
                        </button>
                    </div>
                </div>
                <hr ?hidden="${this.collapsed}" style="margin: 0 0" >
                <div ?hidden="${this.collapsed}" > ${t} </div>
                </div>`}`}isRequiredProperty(t){return!!this.schema.required?.includes(t)}fields(){const t=[],e=Object.values(this.schema.properties).map((t=>t.field)).join(", "),r=this.shadowRoot?.querySelectorAll(e);return r?.forEach((e=>t.push(e))),t}focus(){this.fields()[0].dofocus()}labelClicked(t){this.isItem?this.dispatchEvent(new CustomEvent("toggle-item",{detail:{field:this},bubbles:!0,composed:!0})):this.toggle(t),super.labelClicked(t)}toggleTab(t){const e=t.target,r=e.getAttribute("data-tabname"),o=e.getAttribute("data-groupname"),i=e.parentElement?.parentElement,n=i?.querySelectorAll("a")??[];for(const t of n)t.classList.remove("active");e.classList.add("active"),this.activegroup[r]=o;const a=i.nextElementSibling,s=a?.querySelectorAll(".tab-pane")??[];if(s)for(const t of s)t.hidden=t.getAttribute("data-groupname")!==o;this.eventStop(t)}toggle(t){null!==this.collapsed&&(this.collapsed=!this.collapsed),this.eventStop(t),this.requestUpdate()}};t([A({attribute:!1}),e("design:type",Object)],Hs.prototype,"collapsed",null),t([A({attribute:!1}),e("design:type",Object)],Hs.prototype,"activegroup",null),Hs=t([r("fz-object")],Hs);
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const{I:Ks}=dt,Ts=()=>document.createComment(""),Js=(t,e,r)=>{const o=t._$AA.parentNode,i=void 0===e?t._$AB:e._$AA;if(void 0===r){const e=o.insertBefore(Ts(),i),n=o.insertBefore(Ts(),i);r=new Ks(e,n,t,t.options)}else{const e=r._$AB.nextSibling,n=r._$AM,a=n!==t;if(a){let e;r._$AQ?.(t),r._$AM=t,void 0!==r._$AP&&(e=t._$AU)!==n._$AU&&r._$AP(e)}if(e!==i||a){let t=r._$AA;for(;t!==e;){const e=t.nextSibling;o.insertBefore(t,i),t=e}}}return r},Us=(t,e,r=t)=>(t._$AI(e,r),t),Ys={},Qs=t=>{t._$AP?.(!1,!0);let e=t._$AA;const r=t._$AB.nextSibling;for(;e!==r;){const t=e.nextSibling;e.remove(),e=t}},$s=(t,e,r)=>{const o=new Map;for(let i=e;i<=r;i++)o.set(t[i],i);return o},_s=Jt(class extends Ut{constructor(t){if(super(t),t.type!==Tt)throw Error("repeat() can only be used in text expressions")}dt(t,e,r){let o;void 0===r?r=e:void 0!==e&&(o=e);const i=[],n=[];let a=0;for(const e of t)i[a]=o?o(e,a):a,n[a]=r(e,a),a++;return{values:n,keys:i}}render(t,e,r){return this.dt(t,e,r).values}update(t,[e,r,o]){const i=(t=>t._$AH)(t),{values:n,keys:a}=this.dt(e,r,o);if(!Array.isArray(i))return this.ut=a,n;const s=this.ut??=[],l=[];let c,b,d=0,f=i.length-1,p=0,m=n.length-1;for(;d<=f&&p<=m;)if(null===i[d])d++;else if(null===i[f])f--;else if(s[d]===a[p])l[p]=Us(i[d],n[p]),d++,p++;else if(s[f]===a[m])l[m]=Us(i[f],n[m]),f--,m--;else if(s[d]===a[m])l[m]=Us(i[d],n[m]),Js(t,l[m+1],i[d]),d++,m--;else if(s[f]===a[p])l[p]=Us(i[f],n[p]),Js(t,i[d],i[f]),f--,p++;else if(void 0===c&&(c=$s(a,p,m),b=$s(s,d,f)),c.has(s[d]))if(c.has(s[f])){const e=b.get(a[p]),r=void 0!==e?i[e]:null;if(null===r){const e=Js(t,i[d]);Us(e,n[p]),l[p]=e}else l[p]=Us(r,n[p]),Js(t,i[d],r),i[e]=null;p++}else Qs(i[f]),f--;else Qs(i[d]),d++;for(;p<=m;){const e=Js(t,l[m+1]);Us(e,n[p]),l[p++]=e}for(;d<=f;){const t=i[d++];null!==t&&Qs(t)}return this.ut=a,((t,e=Ys)=>{t._$AH=e})(t,l),Y}});
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */let tl=class extends Ws{content;validator;renderField(){return U`
            <div class="form-group row">
                ${this.renderLabel}
                <div class="col-sm">
                    <ul id="content" class="list-group"   style="max-height: 300px; overflow-y: scroll">
                            ${_s(this.getItems(),(t=>t),(t=>U`
                                    <li class="list-group-item">
                                        <div>
                                            <input
                                                class="form-check-input"
                                                type="checkbox"
                                                ?disabled="${!!this.readonly}"
                                                ?checked="${this.value?.includes(t.value)}"
                                                @click="${()=>this.toggle(t.value)}"/>
                                            <label class="form-check-label">${t.label}</label>
                                        </div>
                                    </li>
                                `))}
                    </ul>
                </div>
            </div>`}check(){if(this.validator){switch(this.valid=!0,this.message="",!0){case this.required&&null==this.value:this.valid=!1,this.message=Gt("valueMissing");break;case!this.required&&null==this.value:break;default:this.valid=this.validator.validate(this.value);const t=this.validator.errors()?.filter((t=>1===t.instancePath.match(/\//g)?.length));0==this.valid&&t&&t.length>0&&(this.message=this.validator.errorsText(t))}this.content=this.shadowRoot?.getElementById("content")??void 0,this.content?.classList.add(this.valid?"valid":"invalid"),this.content?.classList.remove(this.valid?"invalid":"valid")}}connectedCallback(){super.connectedCallback(),this.listen(this,"update",(()=>this.check()))}update(t){if(!this.validator&&t.has("schema")&&0!==Object.keys(this.schema).length){const t=JSON.stringify(this.schema,Rt);this.validator=new Ls(JSON.parse(t)),this.check()}super.update(t)}toggle(t){if(null==this.value&&(this.value=[]),this.value.includes(t)){const e=this.value.indexOf(t);e>=0&&this.value.splice(e,1)}else this.value.push(t)}convertToInput(t){throw new Error("IMPOSSIBLE : PAS D'INPUT POUR LES ENUM-ARRAY!")}convertToValue(t){return St(t)?this.empty:t}getItems(){const t=this.schema.items?.enum;if(t)return t.reduce(((t,e)=>(this.evalExpr("filter",this.schema.items,e,this.data[this.key],-1)&&t.push({label:String(e),value:e}),t)),[]);const e=this.schema.items?.oneOf;return e?e.reduce(((t,e)=>(this.evalExpr("filter",e,e.const,this.data[this.key],-1)&&t.push({label:e.title??e.description??e.const,value:e.const}),t)),[]):[]}};tl=t([r("fz-enum-array")],tl);let el=class extends Bt{modal;backdrop;validable=!1;#f="Dialogue";get modalTitle(){return this.#f}set modalTitle(t){this.#f=t}#p="Valider";get okLabel(){return this.#p}set okLabel(t){this.#p=t}#m="Annuler";get dismissLabel(){return this.#m}set dismissLabel(t){this.#m=t}static get styles(){return[...super.styles,l`
            .modal-body {
                max-height: 75vh; min-height: 50vh; overflow-y: auto;
            }`]}render(){return U`
            <div class="modal fade" id="modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" >${this.modalTitle}</h5>
                            <button type="button" class="btn btn-secondary " aria-label="Close"  @click="${this.dismiss}">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <slot></slot>
                        </div>
                        <div class="modal-footer">
                            <button ?disabled="${!this.validable}" type="button" class="btn btn-primary" @click="${this.validate}">${this.okLabel}</button>
                            <button type="button" class="btn btn-danger" @click="${this.dismiss}" >${this.dismissLabel}</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-backdrop fade show" id="backdrop"  style="display: none;" @click="${this.dismiss}"></div>`}get isOpen(){return this.modal?.classList.contains("show")}firstUpdated(){this.modal=this.shadowRoot?.getElementById("modal"),this.backdrop=this.shadowRoot?.getElementById("backdrop")}open(){this.backdrop&&(this.backdrop.style.display="block"),this.modal&&(this.modal.style.display="block",this.modal.classList.add("show")),this.requestUpdate(),this.dispatchEvent(new CustomEvent("fz-dialog-open",{detail:{}}))}close(){this.backdrop&&(this.backdrop.style.display="none"),this.modal&&(this.modal.style.display="none",this.modal.classList.remove("show"))}validate(t){this.close(),t.preventDefault(),t.stopPropagation(),this.dispatchEvent(new CustomEvent("close",{detail:{dismissed:!1}}))}dismiss(t){this.close(),t.preventDefault(),t.stopPropagation(),this.dispatchEvent(new CustomEvent("close",{detail:{dismissed:!0}}))}valid(t=!0){this.validable=t,this.requestUpdate()}};var rl;t([A({attribute:"modal-title"}),e("design:type",Object)],el.prototype,"modalTitle",null),t([A({attribute:"ok-label"}),e("design:type",Object)],el.prototype,"okLabel",null),t([A({attribute:"dismiss-label"}),e("design:type",Object)],el.prototype,"dismissLabel",null),el=t([r("fz-dialog")],el),function(t){t[t.notready=0]="notready",t[t.scanning=1]="scanning",t[t.done=2]="done",t[t.fail=3]="fail"}(rl||(rl={}));const ol=["code_128","code_39","code_93","codabar","ean_13","ean_8","itf","pdf417","upc_a","upc_e","aztec","data_matrix","qr_code"];let il=class extends Bt{detector;code;#l=rl.notready;get state(){return this.#l}set state(t){this.#l=t}modal;video;status="Initializing";static get styles(){return[...super.styles,l`
            div {
                color: black
            }
            `]}render(){return U`
            <fz-dialog modal-title="Scanner un codebar" @click="${this.stopEvent}" @close="${this.close}" > 
                <div class="row">
                    <video  class=col autoplay style="display:block" .title="${this.status}">Chargement en cours ...</video>
                </div>
                <div class="btn-toolbar m-3 row" role="toolbar">
                    <button class="btn btn-primary col m-1" ?disabled="${!this.code}" @click="${this.scan}"><i class="bi bi-upc-scan"></i></button>
                </div>
                <div>${this.status}</div>
            </fz-dialog>
            `}stopEvent(t){t.preventDefault(),t.stopPropagation()}close(t){this.video&&(this.video?.pause(),this.video.srcObject=null);const e=t.detail;t.detail.dismissed||(t.detail.code=this.code),this.dispatchEvent(new CustomEvent("close",{detail:e})),this.modal?.valid(!1)}firstUpdated(){BarcodeDetector&&(this.detector=new BarcodeDetector({formats:ol})),this.modal=this.shadowRoot?.querySelector("fz-dialog"),this.video=this.shadowRoot?.querySelector("video"),this.video&&this.listen(this.video,"play",(t=>this.scan()))}async initCamera(){try{const t=await navigator.mediaDevices.getUserMedia({video:{facingMode:{exact:"environment"}}});this.video&&(this.video.srcObject=t)}catch(t){this.status=`Unable to initialize Camera : ${String(t)}`}}scan(){this.setState(rl.scanning);const t=async()=>{try{(await this.detector.detect(this.video)).filter((t=>t.rawValue)).forEach((t=>{this.code=t.rawValue,this.setState(rl.done)}))}catch(t){console.error(String(t))}},e=()=>{this.state===rl.scanning&&(requestAnimationFrame(e),t())};e()}async open(){this.setState(rl.notready),this.modal&&this.modal.open(),await this.initCamera()}setState(t){switch(this.state=t,this.modal?.valid(!1),t){case rl.fail:this.status=`${this.state} ⇨ Pas de flux video`;break;case rl.notready:this.status=`${this.state} ⇨ En initialisation`;break;case rl.scanning:this.status=`${this.state} ⇨ Scannez`;break;case rl.done:this.status=`${this.state} ⇨ Resultat: ${this.code}`,this.modal?.valid(!0)}}};var nl;t([F(),e("design:type",Number)],il.prototype,"state",null),il=t([r("fz-barcode-dlg")],il),function(t){t[t.notready=0]="notready",t[t.video=1]="video",t[t.lowres=2]="lowres",t[t.hires=3]="hires"}(nl||(nl={}));let al=class extends Bt{#l=nl.video;get state(){return this.#l}set state(t){this.#l=t}modal;video;canvas;imageCapture;imageBitmap;status="Initializing";get isVideo(){return this.state===nl.video}static get styles(){return[...super.styles,l`
            div {
                color: black
            }
            `]}render(){return U`
            <fz-dialog modal-title="Prendre une photo ..." @click="${this.stopEvent}" @close="${this.close}" > 
                <div class="row">
                    <video  class=col autoplay style="display:block" .title="${this.status}">Chargement en cours ...</video>
                </div>
                <div class="row">
                    <canvas class=col id='canvas' style="display:none" ></canvas>
                </div>
                <div class="btn-toolbar m-3 row" role="toolbar">
                        <button class="btn btn-primary col m-1" ?disabled="${this.isVideo}" @click="${this.retry}"><i class="bi bi-arrow-counterclockwise"></i></button>
                        <button class="btn btn-primary col m-1" ?disabled="${!this.isVideo}" @click="${this.takePhotoLowres}"><i class="bi bi-camera"></i><sup> - </sup></button>
                        <button class="btn btn-primary col m-1" ?disabled="${!this.isVideo}" @click="${this.takePhotoHires}"><i class="bi bi-camera"></i><sup> + </sup></button>
               </div>
            </fz-dialog>
            `}stopEvent(t){t.preventDefault(),t.stopPropagation()}close(t){this.video&&(this.video?.pause(),this.video.srcObject=null,this.imageCapture?.track.stop());const e=t.detail;this.canvas?.toBlob((r=>{if(!r)return;const o=URL.createObjectURL(r);t.detail.dismissed||(t.detail.imageBitmap=this.imageBitmap,t.detail.url=o,t.detail.blob=r),this.dispatchEvent(new CustomEvent("close",{detail:e})),this.imageBitmap=void 0,this.modal?.valid(!1)}),"image/png",.8)}firstUpdated(){this.modal=this.shadowRoot?.querySelector("fz-dialog"),this.video=this.shadowRoot?.querySelector("video"),this.canvas=this.shadowRoot?.querySelector("canvas")}getUserMedia(){navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}).then((t=>{if(this.video){this.video.srcObject=t;const e=t.getVideoTracks()[0];this.imageCapture=new ImageCapture(e),this.setState(nl.video)}})).catch((t=>this.status=`Unable to initialize Camera : ${String(t)}`))}retry(t){t.preventDefault(),t.stopPropagation(),this.imageBitmap=void 0,this.modal?.valid(!1),this.setState(nl.video)}takePhotoLowres(t){t.preventDefault(),t.stopPropagation(),this.imageCapture&&this.imageCapture.grabFrame().then((t=>{this.imageBitmap=t,this.modal?.valid(!0),this.drawCanvas(),this.setState(nl.lowres)})).catch((t=>this.status=`Unable to grab Lowres photo : ${String(t)}`))}takePhotoHires(t){t.preventDefault(),t.stopPropagation(),this.imageCapture&&this.imageCapture.takePhoto().then((t=>createImageBitmap(t))).then((t=>{this.imageBitmap=t,this.modal?.valid(!0),this.drawCanvas(),this.setState(nl.hires)})).catch((t=>this.status=`Unable to grab Hires photo : ${String(t)}`))}drawCanvas(){if(!this.canvas||!this.video||!this.imageBitmap)return;this.canvas.width=this.video.offsetWidth,this.canvas.height=this.video.offsetHeight;const t=Math.min(this.canvas.width/this.imageBitmap.width,this.canvas.height/this.imageBitmap.height),e=(this.canvas.width-this.imageBitmap.width*t)/2,r=(this.canvas.height-this.imageBitmap.height*t)/2;this.canvas.getContext("2d")?.clearRect(0,0,this.canvas.width,this.canvas.height),this.canvas.getContext("2d")?.drawImage(this.imageBitmap,0,0,this.imageBitmap.width,this.imageBitmap.height,e,r,this.imageBitmap.width*t,this.imageBitmap.height*t)}open(){this.setState(nl.notready),this.modal&&this.modal.open(),this.getUserMedia()}setState(t){if(this.video&&this.canvas)switch(t){case nl.notready:this.video.style.display="block",this.canvas.style.display="none",this.status="NOTREADY";break;case nl.video:this.video.style.display="block",this.canvas.style.display="none",this.status="VIDEO";break;case nl.lowres:this.video.style.display="none",this.canvas.style.display="block",this.status=`IMAGE LOWRES : ${this.imageBitmap?.width} x ${this.imageBitmap?.height} px`;break;case nl.hires:this.video.style.display="none",this.canvas.style.display="block",this.status=`IMAGE HIRES : ${this.imageBitmap?.width} x ${this.imageBitmap?.height} px`}this.state=t}};t([F(),e("design:type",Number)],al.prototype,"state",null),al=t([r("fz-photo-dlg")],al);let sl=class extends Bt{#u=null;get reference(){return this.#u}set reference(t){this.#u=t}modal;arraySchema;itemSchema;array;index;pointer;refname;static get styles(){return[...super.styles,l`
            div {
                color: black
            }
            `]}render(){return U`
            <fz-dialog modal-title="Ajouter un element ..." @click="${this.stopEvent}" @close="${this.close}" > 
                ${null!=this.itemSchema||null==this.arraySchema?.items.oneOf?"":U`<div class="btn-group" role="group">
                    <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle btn-sm"
                        @click="${this.toggleDropdown}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    ${"Choose type"}
                    </button> 
                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        ${this.arraySchema?.items.oneOf.map(((t,e)=>U`<a class="dropdown-item"
                        @click="${()=>this.addItem(t)}" >${t.title||"Type"+e}</a>`))}
                    </div>
                </div>`}
                ${null==this.itemSchema?"":U`<fz-object id="form-object" .pointer="${this.pointer}/${this.index}"  .schema="${this.itemSchema}" .name="${void 0}" .index="${this.index}" .data="${this.array}"></fz-object>`}
            </fz-dialog>`}updated(t){this.reference?(this.pointer=this.reference?.pointer,this.array=this.reference?.refarray,this.refname=this.reference?.refname,this.arraySchema=qt(this.array)):(this.pointer=void 0,this.array=void 0,this.refname=void 0,this.arraySchema=void 0,this.itemSchema=void 0)}toggleDropdown(){const t=this.shadowRoot?.querySelector(".dropdown-menu");t?.style.setProperty("display","block"==t?.style.display?"none":"block")}addItem(t){this.itemSchema=t;const e=vt(this.array,this.itemSchema);this.index=this.array?.length,this.array?.push(e),this.modal?.valid(),this.requestUpdate()}stopEvent(t){t.preventDefault(),t.stopPropagation()}close(t){const e=t.detail;if(!t.detail.dismissed){const e=this.shadowRoot?.getElementById("form-object");t.detail.value=e.value[this.refname??"id"],t.detail.abstract=e.abstract()}this.reference=null,this.stopEvent(t),this.dispatchEvent(new CustomEvent("close",{detail:e})),this.modal?.valid(!1)}firstUpdated(){this.modal=this.shadowRoot?.querySelector("fz-dialog")}open(){this.modal&&this.modal.open(),this.arraySchema?.homogeneous&&void 0===this.index&&this.addItem(this.arraySchema?.items)}};function ll(t,e,r){if(!t||!e)return;const o=/\$\`([^`]+)`/g;let i;for(;null!=(i=o.exec(r));){const r=xt(t,e,i[1]);r&&!r.observers.includes(e.pointer)&&r.observers.push(e.pointer)}}t([A({type:Object}),e("design:type",Object)],sl.prototype,"reference",null),sl=t([r("fz-item-dlg")],sl);class cl{root;steps_pass1;steps_pass2;errors=[];constructor(t,e,r){this.root=t,this.steps_pass1=[new dl(this.root),new fl(this.root),new pl(this.root,e),new ml(this.root),new ul(this.root),new hl(this.root),new gl(this.root),new vl(this.root),new wl(this.root),new xl(this.root),new yl(this.root),new kl(this.root),new jl(this.root)],this.steps_pass2=[new Dl(this.root,r),new zl(this.root,"abstract",Vt),new El(this.root,"case",(()=>!1)),new El(this.root,"visible",(()=>!0)),new El(this.root,"readonly",(()=>!1)),new El(this.root,"requiredWhen",(()=>!1)),new El(this.root,"collapsed",(()=>!1)),new El(this.root,"filter",(()=>!0)),new Al(this.root,"orderBy",(()=>!0)),new Al(this.root,"expression",(()=>"")),new Al(this.root,"change",(()=>""))]}compile(){return this.errors=[],this.walkSchema(this.steps_pass1,this.root),this.walkSchema(this.steps_pass2,this.root),this.errors}walkSchema(t,e,r,o){for(const i of t)try{i.appliable(e,r,o)&&i.apply(e,r,o)}catch(t){this.errors.push(String(t))}return e.properties?Object.entries(e.properties).forEach((([r,o])=>this.walkSchema(t,o,e,r))):e.items?(e.items.oneOf||e.items.allOf||e.items.anyOf,this.walkSchema(t,e.items,e,"*")):e.oneOf?e.oneOf.forEach((e=>this.walkSchema(t,e,r,o))):e.allOf?e.allOf.forEach((e=>this.walkSchema(t,e,r,o))):e.anyOf?e.anyOf.forEach((e=>this.walkSchema(t,e,r,o))):void 0}}class bl{static sourceCount=1;root;property;constructor(t,e){this.root=t,this.property=e}appliable(t,e,r){return!0}sourceURL(t){let e=`_FZ_${this.property}_${t??""}_${bl.sourceCount++}.js`.replace(/ +/g,"_");return e=e.replace(/[^a-z0-9_]/gi,""),console.log(`builded source :${e}`),`\n    //# sourceURL=${e}\n`}error(t){return Error(`Compilation step ${this.property}: ${t} `)}}class dl extends bl{constructor(t){super(t,"$ref")}apply(t){const e=t.properties;e&&Object.entries(e).forEach((([t,r])=>r.$ref&&(e[t]=this.definition(r)))),t.items&&t.items.$ref&&(t.items=this.definition(t.items)),t.items&&t.items.oneOf&&(t.items.oneOf=t.items.oneOf.map((t=>t.$ref?this.definition(t):t)))}definition(t){const e=t.$ref;if(!e.startsWith("#/definitions/"))throw this.error(`only '#/definitions/<name>' allowed => ${e}]`);if(!this.root.definitions)throw this.error('No "definitions" property in root schema');const r=e.split("/")[2];if(r in this.root.definitions){const e=this.root.definitions[r],o=Object.assign({},e);return Object.entries(t).forEach((([t,e])=>"$ref"!==t&&(o[t]=e))),o}throw this.error(`No definitions found in schema for ${e}`)}}class fl extends bl{constructor(t){super(t,"basetype")}appliable(t){return!(this.property in t)}apply(t,e,r){if(Array.isArray(t.type)&&e&&r){if(t.type.length>2)throw Error(`multiple types not implemented : ${kt(e,r)}`);if(!t.type.includes("null"))throw Error(`Second type must be "null" : ${kt(e,r)}`);t.basetype=t.type.find((t=>"null"!==t))??"null",t.nullAllowed=!0}else t.basetype=t.type,t.nullAllowed=!1}}class pl extends bl{options;constructor(t,e){super(t,"enumRef"),this.options=e}appliable(t){return this.property in t}apply(t){if(!this.options.ref)throw Error("missing 'enumRef' function in options");const e=this.options.ref(t.enumRef).map((t=>({const:t.value,title:t.title})));t.oneOf=e}}class ml extends bl{constructor(t){super(t,"isenum")}appliable(t){return!(this.property in t)}apply(t){switch(t.isenum=!1,!0){case!ht(t.basetype):break;case!!t.enum:case t.oneOf&&t.oneOf.every((t=>"const"in t)):case t.anyOf&&t.anyOf.every((t=>"const"in t)):t.filter||(t.filter=()=>!0),t.isenum=!0}}}class ul extends bl{constructor(t){super(t,"isenumarray")}appliable(t){return!(this.property in t)}apply(t){t.isenumarray=ht(t.basetype)&&function(t){if("array"===t.basetype&&t.uniqueItems){if(t.items.oneOf)return!!t.items.oneOf.every((t=>"const"in t));if(t.items.anyOf)return!!t.anyOf.every((t=>"const"in t))}return!1}(t)}}class hl extends bl{constructor(t){super(t,"homogeneous")}appliable(t){return!(this.property in t)&&"array"===t.basetype}apply(t){t.homogeneous=!t.items.oneOf}}class gl extends bl{constructor(t){super(t,"observers")}appliable(t){return!(this.property in t)}apply(t){t.observers=[]}}class vl extends bl{constructor(t){super(t,"parent")}appliable(t){return!(this.property in t)}apply(t,e){t.parent=e}}class wl extends bl{constructor(t){super(t,"pointer")}appliable(t){return!(this.property in t)}apply(t,e,r){t.pointer=e?`${e.pointer}/${r}`:"#"}}class xl extends bl{constructor(t){super(t,"root")}appliable(t){return!(this.property in t)}apply(t){t.root=this.root}}class yl extends bl{constructor(t){super(t,"requiredWhen")}appliable(t){return"object"===t.basetype&&null!=t.properties&&null!=t.required}apply(t){t.required.forEach((e=>{e in t.properties&&(t.properties[e].requiredWhen="true")}))}}class kl extends bl{constructor(t){super(t,"field")}appliable(t){return!(this.property in t)}apply(t){if("const"in t)return t.field="fz-constant";if(t.refTo&&ht(t.basetype))return t.filter||(t.filter=()=>!0),t.field="fz-enum";if(t.isenum)switch(t.filter||(t.filter=()=>!0),!0){case t.enum?.length<=3:case t.oneOf?.length<=3:case t.anyOf?.length<=3:return t.field="fz-enum-check";case t.enum?.length<=20:case t.oneOf?.length<=20:case t.anyOf?.length<=20:return t.field="fz-enum";default:return t.field="fz-enum-typeahead"}switch(t.basetype){case"object":return t.field="fz-object";case"array":return t.isenumarray?(t.filter||(t.filter=()=>!0),t.field="fz-enum-array"):t.field="fz-array";case"integer":return t.minimum&&t.maximum&&t.maximum-t.minimum<=10?t.field="fz-range":t.field="fz-integer";case"number":return t.field="fz-float";case"boolean":return t.field="fz-boolean";case"string":switch(t.format){case"uuid":return t.field="fz-uuid";case"signature":return t.field="fz-signature";case"date":return t.field="fz-date";case"time":return t.field="fz-time";case"date-time":return t.field="fz-datetime";case"geo":return t.field="fz-geolocation";case"doc":return t.field="fz-document";case"markdown":return t.field="fz-markdown";case"asset":return t.field="fz-asset"}return!t.format&&t.maxLength>256?t.field="fz-textarea":t.field="fz-string"}return t.field="fz-error"}}class jl extends bl{constructor(t){super(t,"order")}appliable(t){return!(this.property in t)&&"object"===t.basetype&&null!=t.properties}apply(t){const e=t.properties,r=new Map,o=new Map;let i=0;const n=Object.entries(e).map((([t,e])=>{e.tab&&!o.has(e.tab)&&o.set(e.tab,i);const n=e.tab?o.get(e.tab):i;e.group&&!r.has(e.group)&&r.set(e.group,i);return{tabnum:n,groupnum:e.group?r.get(e.group):i,fieldnum:i++,fieldname:t,schema:e,tabname:e.tab,groupname:e.group}}));n.sort(((t,e)=>{const r=Math.min(t.tabnum,t.groupnum,t.fieldnum)-Math.min(e.tabnum,e.groupnum,e.fieldnum);return 0===r?t.fieldnum-e.fieldnum:r})),t.order=n}}class Dl extends bl{data;constructor(t,e){super(t,"refTo"),this.data=e}appliable(t){return this.property in t&&"function"!=typeof t.refTo}apply(t){const e=t.refTo;t.refTo=()=>null;const r=e.replace(/\/[^/]+$/,""),o=e.substr(r.length+1);ll(this.root,t,`$\`${r}\``),t.refTo=(t,e,i,n,a)=>{const s=yt(this.data.content,i,n,r);return s?Array.isArray(s)?{pointer:r,refname:o,refarray:s}:(console.error(`reference list must be an array ${r}`),null):null}}}class zl extends bl{defunc;constructor(t,e,r){super(t,e),this.defunc=r}appliable(t){return this.property in t&&"string"==typeof t[this.property]}apply(t,e,r){const o=t[this.property];if(t[this.property]=this.defunc,"string"==typeof o){const e=`\n                ${this.sourceURL(r)}\n                try { \n                    return nvl\`${o}\`\n                } catch(e) { \n                    console.error(\`unable to produce ${this.property} property due to :\${e.toString()}\`)\n                }\n                return ''\n            `;try{ll(this.root,t,o),t[this.property]=new Function("schema","value","parent","property","$","userdata",e),t[this.property].expression=o}catch(t){throw Error(`unable to compile ${this.property} expression "${o}" due to ::\n\t=>${String(t)}`)}}}}class El extends bl{defunc;constructor(t,e,r){super(t,e),this.defunc=r}appliable(t){return this.property in t&&["string","boolean"].includes(typeof t[this.property])}apply(t,e,r){const o=t[this.property];if(t[this.property]=this.defunc,"boolean"==typeof o||null===o)t[this.property]=null===o?()=>null:()=>o;else if("string"==typeof o){const e=`\n            ${this.sourceURL(r)}\n            try {  \n                    const result = (${o}) \n\n                    return result === null ? result : !!result\n                }\n                catch(e) {  console.error(\`unable to produce ${this.property} property due to :\n\t=>\${e.toString()}\`) }\n                return true\n            `;try{ll(this.root,t,o),t[this.property]=new Function("schema","value","parent","property","$","userdata",e),t[this.property].expression=o}catch(t){throw Error(`unable to compile ${this.property} expression "${o}" due to ::\n\t=>${String(t)}`)}}}}class Al extends bl{defunc;constructor(t,e,r){super(t,e),this.defunc=r}appliable(t){return this.property in t&&"function"!=typeof t[this.property]}apply(t,e,r){const o=t[this.property];t[this.property]=this.defunc;let i="return null";switch(!0){case"boolean"==typeof o:i=o?"return true ;":"return false ;";break;case"string"==typeof o:i=`return ${o} ;`;break;case Array.isArray(o):const t=o.map(((t,e)=>`    const cst${e} = \`${t}\n\``));t.push(`return ( ${o.map(((t,e)=>`cst${e}`)).join(" + ")} );`),i=t.join(";\n")}const n=`\n            try {  \n                ${i} \n            }\n            catch(e) {  console.error(\`unable to produce ${this.property} property due to :\n\t=>\${e.toString()}\`) }\n            return null\n            ${this.sourceURL(r)}\n        `;try{Array.isArray(o)&&o.forEach((e=>ll(this.root,t,e))),"string"==typeof o&&ll(this.root,t,o),t[this.property]=new Function("schema","value","parent","property","$","userdata",n),t[this.property].expression=o}catch(t){console.error(`unable to compile ${this.property} expression "${o}" due to ::\n\t=>${String(t)}`)}}}class Fl{data;schema;steps;errors=[];constructor(t,e){this.data=t,this.schema=e,this.steps=[(t,e,r,o)=>{Ft(t,e),Pt(t,r),Ot(t,this.data.content)}]}compile(){return this.errors=[],this.walkData(this.data.content,this.schema),this.errors}walkData(t,e,r,o){if(null!=e&&null!=t){try{this.steps.forEach((i=>i(t,e,r,o)))}catch(t){this.errors.push(String(t))}if(Array.isArray(t))e.homogeneous?t.forEach((r=>this.walkData(r,e.items,t,e))):t.forEach(((r,o)=>{e.items.oneOf.forEach((e=>{e.case&&e.case(null,r,t,o,(()=>null))&&this.walkData(r,e,t,e)}))}));else if("object"!=typeof t);else for(const r in t){const o=e.properties[r];this.walkData(t[r],o,t,e)}}}}class ql{store;constructor(t){this.store=t}async put(t,e,r,o){try{return this.store.put?.(t,e,r,o)}catch(e){console.error(`storage: unable to put blob for uuid=${t} ptr=${o}\n    - ${String(e)}`)}}async remove(t){try{return this.store.remove?.(t)}catch(e){console.error(`storage: unable to remove blob for uuid=${t}\n    - ${String(e)}`)}}async get(t){try{return this.store.get?.(t)??null}catch(e){return void console.error(`storage: unable to get blob for uuid=${t}\n    - ${String(e)}`)}}}class Pl{store=new Map;async put(t,e,r,o){this.store.set(t,{uuid:t,blob:e,filename:r})}async remove(t){await this.store.delete(t)}async get(t){return this.store.get(t)}}let Ol=class extends Bt{static get styles(){return[...super.styles]}#h={};get i_options(){return this.#h}set i_options(t){this.#h=t}#g={type:"object",properties:[]};get i_schema(){return this.#g}set i_schema(t){this.#g=t}#v=!1;get actions(){return this.#v}set actions(t){this.#v=t}#w=!1;get readonly(){return this.#w}set readonly(t){this.#w=t}#x=!1;get checkIn(){return this.#x}set checkIn(t){this.#x=t}#y=!1;get checkOut(){return this.#y}set checkOut(t){this.#y=t}oninit=null;onready=null;onvaliddata=null;oninvaliddata=null;onvalidate=null;ondismiss=null;#k=null;get _errors(){return this.#k}set _errors(t){this.#k=t}obj={content:{}};store=new Pl;asset;validator;dataPointerFieldMap=new Map;schemaPointerFieldMap=new Map;message="";constructor(){super(),["oninit","onready","onvaliddata","oninvaliddata","onvalidate","ondismiss"].forEach((t=>{this.constructor.elementProperties.get(t).converter=e=>(function(t,e,r){if(r){const o=window[r];"function"==typeof o&&t.addEventListener(e,o)}}(this,t.substring(2),e),e)}))}get root(){return this.obj.content}get valid(){return this.validator?.validate(this.root)??!1}get schema(){return this.i_schema}set schema(t){var e;e=t,Bs&&Bs(e)?(this.i_schema=JSON.parse(JSON.stringify(t)),this.validator=new Ls(this.i_schema),this.valid?(this._errors=null,this.message="",this.compile(),this.requestUpdate()):(this._errors=Cs(),this.message="provided value for 'data' attribute doesn't conform to schema")):(this._errors=Cs(),this.message="provided data for 'schema' attribute is not a valid annotated JSON Schema.")}get options(){return this.i_options}set options(t){this.i_options=t,this.i_options?.storage&&(this.store=new ql(this.i_options.storage)),this.i_options?.asset&&(this.asset=this.i_options.asset)}get data(){return function(t){const e=JSON.stringify(t,(function(t,e){const r=qt(e),o=qt(this);if(!o?.properties?.[t]?.transient)return r&&Array.isArray(e)&&0===e.length||r&&null!=e&&"object"==typeof e&&Object.keys(e).every((t=>null==e[t]))?r.nullAllowed?null:void 0:e}));return null==e?null:JSON.parse(e)}(this.root)}set data(t){if(this.validator){if(this.checkIn&&!this.validator.validate(t))return this._errors=this.validator?.errors()||null,void(this.message="provided data is not conform to schema (checkin activated)");this.message="",this._errors=null,this.obj.content=t,this.compile(),this.requestUpdate()}else this.message="Unable to accept data because provided JSON Schema is not valid."}attributeChangedCallback(t,e,r){if(super.attributeChangedCallback(t,e,r),"schema"===t){const t=gt.fromAttribute(r);this.schema=t}}render(){return this._errors?.length?this.renderError():this.renderForm()}renderForm(){return U`
            ${Array.isArray(this.root)?U`<fz-array pointer="#" name="content"  .data="${this.obj}" .schema="${this.schema}"></fz-array>`:U`<fz-object  pointer="#" name="content" .data="${this.obj}" .schema="${this.schema}"></fz-object>`}
            ${this.renderButtons()}`}renderButtons(){return this.actions?U`
            <hr>
            <div class="d-grid gap-2 d-sm-block justify-content-md-end">
                <button class="btn btn-primary" type="button" @click=${this.confirm}>Ok</button>
                <button class="btn btn-danger" type="button" @click=${this.cancel} >Cancel</button>
            </div>`:null}renderError(){return U`
            Error(s): 
            <hr>
            <p class="error-message"> ${this.message}</p>
            <pre><ol>${this._errors?.map((t=>U`<li>Dans la propriété : ${null==t.dataPath?t.instancePath:t.dataPath} : ${t.keyword} ➜ ${t.message}</li>`))}
            </ol></pre>`}connectedCallback(){super.connectedCallback(),this.listen(this,"observed-changed",(t=>this.observedChange(t))),this.dispatchEvent(new CustomEvent("init"))}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("observed-changed",(t=>this.observedChange(t)))}addField(t,e,r){this.schemaPointerFieldMap.set(t,r),this.dataPointerFieldMap.set(e,r)}removeField(t,e){this.schemaPointerFieldMap.delete(t),this.dataPointerFieldMap.delete(e)}getfieldFromSchema(t){return this.schemaPointerFieldMap.get(t)}getfieldFromData(t){return this.dataPointerFieldMap.get(t)}updateField(t){this.getfieldFromData(t)?.requestUpdate()}observedChange(t){if(this===t.composedPath()[0])return;t.detail.observers.forEach((t=>{const e=this.getfieldFromSchema(t);e?.requestUpdate()}))}confirm(t){t.preventDefault(),t.stopPropagation();const e=new CustomEvent("validate");this.dispatchEvent(e)}cancel(t){t.preventDefault(),t.stopPropagation();const e=new CustomEvent("dismiss");this.dispatchEvent(e)}compile(){const t=new cl(this.schema,this.options,this.obj.content).compile();if(t.length>0)return this.message=`Schema compilation failed: \n    - ${t.join("\n    - ")}`,void console.error(this.message);const e=new Fl(this.obj.content,this.schema).compile();e.length>0&&(this.message=`Data compilation failed: \n    - ${e.join("\n    - ")}`,console.error(this.message)),this.dispatchEvent(new CustomEvent("ready"))}};t([F(),e("design:type",Object)],Ol.prototype,"i_options",null),t([A({type:Object,attribute:"schema",converter:gt}),e("design:type",Object)],Ol.prototype,"i_schema",null),t([A({type:Boolean,attribute:"actions"}),e("design:type",Object)],Ol.prototype,"actions",null),t([A({type:Boolean,attribute:"readonly"}),e("design:type",Object)],Ol.prototype,"readonly",null),t([A({type:Boolean,attribute:"checkin"}),e("design:type",Object)],Ol.prototype,"checkIn",null),t([A({type:Boolean,attribute:"checkout"}),e("design:type",Object)],Ol.prototype,"checkOut",null),t([A({type:String,attribute:"oninit",converter:t=>t}),e("design:type",Object)],Ol.prototype,"oninit",void 0),t([A({type:String,attribute:"onready",converter:t=>t}),e("design:type",Object)],Ol.prototype,"onready",void 0),t([A({type:String,attribute:"onvaliddata",converter:t=>t}),e("design:type",Object)],Ol.prototype,"onvaliddata",void 0),t([A({type:String,attribute:"oninvaliddata",converter:t=>t}),e("design:type",Object)],Ol.prototype,"oninvaliddata",void 0),t([A({type:String,attribute:"onvalidate",converter:t=>t}),e("design:type",Object)],Ol.prototype,"onvalidate",void 0),t([A({type:String,attribute:"ondismiss",converter:t=>t}),e("design:type",Object)],Ol.prototype,"ondismiss",void 0),t([F(),e("design:type",Object)],Ol.prototype,"_errors",null),Ol=t([r("fz-form"),e("design:paramtypes",[])],Ol);export{Ol as FzForm,ui as FzMarkdownIt};
